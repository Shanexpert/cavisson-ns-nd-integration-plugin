#!/bin/sh
# Name  : nsi_add_ipv6

# Author: Sanjay/Achint
# usage :
#       nsi_add_ip entity start_ip end_ip vlanid netbits exclude_ip netid gateway
# if  entity C (means clinet), command would be run locally, 
# if entity is S, run it for netocean.. In this case same cmd is 
# run on netocean with entity set to R and passing an extra argument of Load interface
# Assigns IP addresses in the range start-ip to end-ip (inclusive) excluding
# exclused ip (if not - ) on load interface with given vlan-id.
# netbits is the number of bits in netid.
# Modification History:
#   05/03/06  Initial version
#   07/24/06  Achint added interface for the addition.Now command will take 9 arrguments it will take interface as an argument
HOME_DIR=/home/cavisson
USER=`whoami`
if [ "X$USER" != "Xcavisson" ];then
    echo "You must be logged in as cavisson user to execute this command"
    exit -1
fi

CONFIG=`grep ^CONFIG $HOME_DIR/etc/cav.conf | awk  '{print $2}'`

CHECK_FORMAT=$NS_WDIR/bin/nsu_check_ipv6_format
if [ "$#" -lt 9 ];then
  echo "Error: usage:nsi_add_ip entity start_ip end_ip vlanid netbits exclude_ip netid gateway Interface"
  exit 1
fi
RLOGIN="ssh -n"

ENTITY=$1
start_ip=$2
end_ip=$3
VLANID=$4
netbits=$5
EXCLUDE_IP=$6
netid=$7
GATEWAY=$8
LOAD=$9

# Do Input validation
#Check start-ip and end-ip are valid
  $CHECK_FORMAT  $start_ip
  if [ $? -ne 0 ];then
    echo "Error: Start ip $2 not in valid format"
    exit 1
  fi
  $CHECK_FORMAT  $end_ip
  if [ $? -ne 0 ];then
    echo "Error: End ip $end_ip not in valid format"
    exit 1
  fi



#check vlanid is either - or non-negative
  if [ $VLANID != "-" ];then
    if [ $VLANID -lt 0 ];then
       echo "Error: Vlan Id can not be Negative"
       exit 1
    fi
  fi
#check netbits is more than 0 and less than 31
  if [ $netbits -le 0 -o $netbits -gt 127 ];then
    echo "Error: Netbits can not be less than 0 and greater than 31" 
    exit 1
  fi
#check exclude ip is either - or a valid IP
  if [ $EXCLUDE_IP != "-" ];then
    $CHECK_FORMAT  $EXCLUDE_IP
    if [ $? -ne 0 ];then
      echo "Error: EXCLUDE IP $EXCLUDE_IP not in valid format"
      exit 1
    fi
  fi

#Check net id is in correct format
  if [ $netid != "-" ];then
    $CHECK_FORMAT  $netid
    if [ $? -ne 0 ];then
      echo "Error: Net Id $netid not in valid format"
      exit 1
    fi
  fi
#check gateway is in correct format
  if [ $GATEWAY != "-" -a $GATEWAY != "SELF" ];then
    $CHECK_FORMAT  $GATEWAY
    if [ $? -ne 0 ];then
      echo "Error: Gateway $GATEWAY not in valid format"
      exit 1
    fi
  fi

#Check availability of tableid 
check_tableid ()
{
  #Get smallest tableid 
  tableid=1
  for j in `grep -v '^#' /etc/iproute2/rt_tables | awk '{print $1}' | sort -g -u`
  #for j in 1 2 5 8 
  do
    #echo $j 
    if [ $tableid -eq $j ];then
      tableid=`expr $tableid + 1`
      continue
    elif [ $tableid -lt $j ];then
      break
    else
      tableid=`expr $tableid + 1`
    fi
  done
  #echo "final: $tableid" 
  if [ $tableid -gt 250 ];then
    echo "Error: Max ip routes reaches" 
    return 1
  else
    return 0
  fi
}

#Function to Add the route and gateway
#First argument is netid/netbits and second arg is gateway 
#example: add_route 3.0.0.0/24 3.0.0.1
 add_route () 
{
  #First argument is netid/netbits and second arg is gateway 
  #if [ $2 == "-" ];then 
  #  return 0 
  #fi 
  #create tableid if not already
  STATUS_RULE1=0
  STATUS_RULE2=0
  STATUS_ROUTE1=0
  STATUS_ROUTE2=0
  NUM=`cat /etc/iproute2/rt_tables | grep -c $1`
  if [ $NUM -eq 0 ];then
      echo "$tableid $1" >> /etc/iproute2/rt_tables
  fi
  #add rule if not present
  NUM=`/sbin/ip -6 rule show | grep -c $1`
  if [ $NUM -eq 0 ];then
    sudo /sbin/ip -6 rule add from $1 table $1
    STATUS_RULE1=$?
    #add one more rule if gateway is present so that traffic on same net does not go through GW
    if [ $2 != "-" ];then
      sudo /sbin/ip -6 rule add from $1 to $1 table main
      STATUS_RULE2=$?
    fi
  fi
  if [ $STATUS_RULE1 != 0 -o $STATUS_RULE2 != 0 ];then
    echo "Error: Adding ip rule failed"
    exit 1
  fi
  #add route , if not present
  if [ $2 == "-" ];then
      #Create route without gateway
      OUT=`/sbin/ip -6 route show table $1 dev $3 2>/dev/null`
      if [ $? -ne 0 -o "XX$OUT" == "XX" ];then
          sudo /sbin/ip route add default table $1 dev $3
          STATUS_ROUTE1=$?
      fi
  else
      #Create route without gateway
      OUT=`/sbin/ip -6 route show via $2 table $1 dev $3 2>/dev/null`
      if [ $? -ne 0 -o "XX$OUT" == "XX" ];then
          sudo /sbin/ip -6 route add default via $2 table $1 onlink dev $3
          STATUS_ROUTE2=$?
      fi
  fi
  if [ $STATUS_ROUTE1 != 0 -o $STATUS_ROUTE2 != 0 ];then
    echo "Error: Adding ip route failed"
    exit 1
  fi
  return 0
}

#changes for deletion of ip on NO machine
if [ "XX$CONFIG" != "XXNO" ];then
  if [ "$ENTITY" == "S" ];then
    SR_ADDRESS=`cat $HOME_DIR/etc/cav.conf | grep "SRAdminIP" | cut -d" " -f2 | cut -d/ -f1`
    NS_ADDRESS=`cat $HOME_DIR/etc/cav.conf | grep "NSAdminIP" | cut -d" " -f2 | cut -d/ -f1`
    if [ "$SR_ADDRESS" != "$NS_ADDRESS" ];then
      ping -c 1 -W 1 $SR_ADDRESS >/dev/null
      if [ $? -ne 0 ];then
        echo "Error: NetOcean (Server) is down or not reachable"
        exit 1
      fi
      # Run '$NS_WDIR/nsi_add_ipv6 R $start_ip $end_ip $VLANID $netbits $EXCLUDE_IP $LOAD' on $SR_ADDRESS as root
      output_rlogin=`$RLOGIN $SR_ADDRESS $NS_WDIR/bin/nsi_add_ipv6 R $start_ip $end_ip $VLANID $netbits $EXCLUDE_IP $netid $GATEWAY $LOAD`
      if [ $? -ne 0 ];then
        echo "Error: IP assignment can not be completed on Server"
        echo "Error: $output_rlogin"
        exit 1
      fi
      # echo the output of this cmd
      echo "$output_rlogin"
      exit 0
    fi
  fi
fi

#Check availability of tableid
#if [ $GATEWAY != "-" ];then 
  check_tableid
  if [ $? == 1 ];then
    echo "Error: Can not create the route"
    exit 1
  fi
#fi

#Following code may be running locally or remotely
if [ "$VLANID" != "-" ];then
  # vlan used
  # check if vlan  exists
  if [ ! -f  /proc/net/vlan/$LOAD.$VLANID ];then
    # create vlan
    /sbin/vconfig add $LOAD $VLANID >/dev/null
    /sbin/ifconfig $LOAD.$VLANID up
    primary=$start_ip
    LOAD=$LOAD.$VLANID
  else
    # vlan exist
    # find primary, if any for the vlan interface
    LOAD=$LOAD.$VLANID
    ip_addr=`/sbin/ip -6 addr show to $start_ip/$netbits dev $LOAD primary | grep inet6`
    # expected outout in format:
    #    inet 192.168.0.20/24 brd 192.168.0.255 scope global eth0
    if [ "XX$ip_addr" == "XX" ];then
      primary=$start_ip
    else
      primary=`echo $ip_addr | cut -d " " -f2 | cut -d "/" -f1`
    fi
  fi
else
  # No vlan case
  ip_addr=`/sbin/ip -6 addr show to $start_ip/$netbits dev $LOAD primary | grep inet6`
  if [ "XX$ip_addr" == "XX" ];then
    primary=$start_ip
  else
    primary=`echo $ip_addr | cut -d " " -f2 | cut -d "/" -f1`
  fi
fi

#assign ip $start_ip $end_ip
for x in `$NS_WDIR/bin/nsu_seq_ipv6 $start_ip $end_ip `
do
  if [ "$x" != $EXCLUDE_IP ];then
    sudo /sbin/ip -6 address add $x/$netbits dev $LOAD >/dev/null
    if [ $? != 0 ];then
      echo "Error:  Adding ip address failed"
      exit 1
    fi
  fi
done
#Call function to add route and gateway
#First argument is netid/netbits and second arg is gateway
#example: add_route 3.0.0.0/24 3.0.0.1 eth0
#if netid -, do not create netid. Used for ranges in admin netid
if [ $netid != "-" ];then
    add_route $netid/$netbits $GATEWAY $LOAD
fi

echo "$primary"
exit 0
                                                                                                                                                           

#!/bin/bash

#Name     :  nsi_migrate_csv
#Author   :  Krishna Tayal
#Usage    :  This utility is used to migrate csv from older version to newer version.
#            

migrate_ndmethod_timing_csv()
{
  #Adding 13th field as fp and URL index in NDMethodTiming.csv
  CSV_PATH="$1"
  if [ ! -d $CSV_PATH ]; then
    return
  fi
  INSTANCE_ARRAY=`ls -Ftr "$CSV_PATH" | grep '/' | cut -d '/' -f 1`
  for INSTANCE in $INSTANCE_ARRAY
  do
    ACT_FIELD=`head -1 "$CSV_PATH/$INSTANCE/NDMethodTiming.csv" | awk -F ',' '{ print NF }'`
    if [ "X$ACT_FIELD" != "X" ]; then
      if [ $ACT_FIELD -eq 13 ]; then
        sed -i 's/$/,,1073741824/g' "$CSV_PATH/$INSTANCE/NDMethodTiming.csv"
      fi
    fi
  done
}

migrate_sqltiming_csv()
{
  #Adding 12th field in NDSQLTiming.csv
  CSV_PATH="$1"
  if [ ! -d $CSV_PATH ]; then
    return
  fi
  INSTANCE_ARRAY=`ls -Ftr "$CSV_PATH" | grep '/' | cut -d '/' -f 1`
  for INSTANCE in $INSTANCE_ARRAY
  do
    ACT_FIELD=`head -1 "$CSV_PATH/$INSTANCE/NDSQLTiming.csv" | awk -F ',' '{ print NF }'`
    if [ "X$ACT_FIELD" != "X" ]; then
      if [ $ACT_FIELD -eq 12 ]; then
        sed -i 's/$/,/g' "$CSV_PATH/$INSTANCE/NDSQLTiming.csv"
      fi
    fi
  done
}

migrate_exception_csv()
{
  #Adding 12th field in NDExceptions.csv
  CSV_PATH="$1"
  if [ ! -d $CSV_PATH ]; then
    return
  fi
  INSTANCE_ARRAY=`ls -Ftr "$CSV_PATH" | grep '/' | cut -d '/' -f 1`
  for INSTANCE in $INSTANCE_ARRAY
  do
    ACT_FIELD=`head -1 "$CSV_PATH/$INSTANCE/NDExceptions.csv" | awk -F ',' '{ print NF }'`
    if [ "X$ACT_FIELD" != "X" ]; then
      if [ $ACT_FIELD -eq 12 ]; then
        sed -i 's/$/,,,,/g' "$CSV_PATH/$INSTANCE/NDExceptions.csv"
      elif [ $ACT_FIELD -eq 14 ]; then
        sed -i 's/$/,,/g' "$CSV_PATH/$INSTANCE/NDExceptions.csv"
      fi
    fi
  done
}

migrate_flowpath_csv()
{
  #Adding 22th field in NDFlowPath.csv
  CSV_PATH="$1"
  if [ ! -d $CSV_PATH ]; then
    return
  fi
  INSTANCE_ARRAY=`ls -Ftr "$CSV_PATH" | grep '/' | cut -d '/' -f 1`
  for INSTANCE in $INSTANCE_ARRAY
  do
    ACT_FIELD=`head -1 "$CSV_PATH/$INSTANCE/NDFlowPath.csv" | awk -F ',' '{ print NF }'`
    if [ "X$ACT_FIELD" != "X" ]; then
      if [ $ACT_FIELD -eq 22 ]; then
        sed -i 's/$/,/g' "$CSV_PATH/$INSTANCE/NDFlowPath.csv"
      elif [ $ACT_FIELD -eq 23 ]; then
        sed -i 's/$/,,,,,,,/g' "$CSV_PATH/$INSTANCE/NDFlowPath.csv"
      elif [ $ACT_FIELD -eq 40 ]; then
        sed -i 's/$/,,,,/g' "$CSV_PATH/$INSTANCE/NDFlowPath.csv"
      elif [ $ACT_FIELD -eq 42 ]; then
        sed -i 's/$/,,/g' "$CSV_PATH/$INSTANCE/NDFlowPath.csv"
      fi
    fi
  done
}

#Adding 2 fields in NDAppServer.csv if values are less than 6
migrate_appserver_csv()
{
  CSV_PATH="$1"
  if [ ! -d $CSV_PATH ]; then
    return
  fi
  
  ACT_FIELD=`head -1 "$CSV_PATH/NDAppServer.csv" | awk -F ',' '{ print NF }'`
  if [ "X$ACT_FIELD" != "X" ]; then
    if [ $ACT_FIELD -ne 6 ]; then
      ND_APPSERVER_INSTANCE_THREAD_CHECK_FLAG=1
      sed -i 's/$/,,/g' "$CSV_PATH/NDAppServer.csv" 
    fi
  fi
}


#Adding 2 fields in NDAppInstance.csv if values are less than 8
migrate_appinstance_csv()
{
  CSV_PATH="$1"
  if [ ! -d $CSV_PATH ]; then
    return
  fi
  
  ACT_FIELD=`head -1 "$CSV_PATH/NDAppInstance.csv" | awk -F ',' '{ print NF }'`
  if [ "X$ACT_FIELD" != "X" ]; then
    if [ $ACT_FIELD -ne 8 ]; then
      ND_APPSERVER_INSTANCE_THREAD_CHECK_FLAG=1
      sed -i 's/$/,,/g' "$CSV_PATH/NDAppInstance.csv" 
    fi
  fi
}

get_partition_list()
{
  PARTITION_TEST=0

  if [ -f $TRDIR/.curPartition ]; then
    PARTITION_TEST=1
    cd $TRDIR 
    #grep directories that have numeric name and length of name 14
    PARTITION_LIST=`ls | grep "^[0-9]\{14\}"`
    cd -
  fi
}

migrate_csv()
{
  #Partition test
  if [ "X$PARTITION_TEST" = "X1" ]; then
    for PARTITION in $PARTITION_LIST
    do
      migrate_ndmethod_timing_csv "$TRDIR/$PARTITION/nd/csv"
      migrate_sqltiming_csv "$TRDIR/$PARTITION/nd/csv"
      migrate_exception_csv "$TRDIR/$PARTITION/nd/csv"
      migrate_flowpath_csv "$TRDIR/$PARTITION/nd/csv"
      migrate_appserver_csv "$TRDIR/$PARTITION/nd/csv"
      migrate_appinstance_csv "$TRDIR/$PARTITION/nd/csv"
    done
    
    #safety check file exist or not 
    if [ -f $TRDIR/nd/csv/NDAppServer.csv ];then
      migrate_appserver_csv "$TRDIR/nd/csv"
    fi
   
    #safety check file exist or not 
    if [ -f $TRDIR/nd/csv/NDAppInstance.csv ];then
      migrate_appinstance_csv "$TRDIR/nd/csv"
    fi
  else    #Non partition test
    migrate_ndmethod_timing_csv "$TRDIR/nd/csv"
    migrate_sqltiming_csv "$TRDIR/nd/csv"
    migrate_exception_csv "$TRDIR/nd/csv"
    migrate_flowpath_csv "$TRDIR/nd/csv"
  fi

  #Here common_files csv migration functions can be added
}

usage()
{
  echo "$*"
  echo "$0 TRNumber"
  exit 1
}

########################################################

if [ $# -ne 1 ]; then
  usage "Error: TR Number is not provided."
fi

if [ "X$NS_WDIR" = "X" ]; then
  usage "NS_WDIR is not set"
fi

TRDIR="$NS_WDIR/logs/TR$1"

if [ ! -d "$TRDIR" ]; then
  echo "Error: TR $1 doesn't exist."
  exit 1
fi

get_partition_list
migrate_csv

export $ND_APPSERVER_INSTANCE_THREAD_CHECK_FLAG

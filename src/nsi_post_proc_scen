#!/bin/sh
#
# Name: nsi_post_proc_scen
# Author: Neeraj Jain
# Purpsose: To post process Scenario Configuration file generated by GUI
#    - Add date/time of update
#
# Usage:  nsi_post_proc_scen <Scenario Name> <OnwerName> 
#   e.g.  nsi_post_proc_scen TestScenario neeraj
#
# Modification History:
#   08/31/04: Neeraj - Initial Version
#   02/26/05:Neeraj:1.2.1 - Changed name and moved ScenControl.dat to etc
#   10/25/05:Neeraj:1.4 - Do not write comment line if it is empty and change owner to netstorm
#   01/27/09:Neeraj:3.2.1 - Added new arg owner to set owner correctly
#   21/05/09:Atul - Remove sorting, adding of header and trailer. Now it will only maintain the permission 
#                   of scenario file and modification date                     
#

USER=`whoami`
if [ "X$USER" != "Xcavisson" ];then
    echo "You must be logged in as cavisson user to execute this command"
    exit -1
fi

if [ "XX" = "XX$NS_WDIR" ]
then
  NS_WDIR=/home/cavisson/work
fi

if [ $# != 4 ]
then
  echo "Usage:"
  echo "nsi_post_proc_scen <Scenario Name> <OwnerName> <User_name> <Profile_name>"
  echo "    e.g.  nsi_post_proc_scen TestScenario neeraj admin default"
  exit -1
fi


OwnerName=$2
OwnerGroup=`id -gn $OwnerName`
WORK_PROFILE=`echo $1 | cut -d '/' '-f1-2'`
NS_RTA_DIR="workspace/$WORK_PROFILE/cavisson"
PROJ_SUBPORJ=`dirname $1`
SCEN_NAME=`basename $1`
ScenPath="$NS_WDIR/$NS_RTA_DIR/$PROJ_SUBPORJ/scenarios"
ScenControlFile=$NS_WDIR/etc/ScenControl.dat
ScenFileName=$ScenPath/$PROJ_SUBPORJ/scenarios/$SCEN_NAME.conf
ScenSaveFileName=$ScenPath/$SCEN_NAME.conf.save
ScenBakFileName=$ScenPath/$SCEN_NAME.conf.bak
TmpFileName=$ScenPath/$SCEN_NAME.conf.tmp.$$

if [ ! -f  $ScenFileName ]
then
  echo "Scenario file not found. Filename is $ScenFileName"
  exit -1
fi


#egrep -v "^#|^$"  $ScenFileName | sort > $ScenBakFileName
#cp $ScenBakFileName $ScenSaveFileName

#> $ScenFileName


# Assumption is that GUI will create new scenario as root
# Existing scenario will retain the ownership of the file
if [ -O $ScenFileName ]
then
  echo "Scenario file is owned by root user. Changing owner to $OwnerName.$OwnerGroup"
  #chown $OwnerName.$OwnerGroup $ScenFileName $ScenSaveFileName
  chown $OwnerName.$OwnerGroup $ScenFileName

  #Need to see if we need to set to 664 ??
  #chmod 664 $ScenFileName $ScenSaveFileName
  chmod 664 $ScenFileName
fi

echo "# Last updated on `date`" >> $ScenFileName
#Not used, now no need to write the header info
AddHeader()
{
  echo "# Scenario File Name = $ScenFileName" >> $ScenFileName
  egrep ^HDR $ScenControlFile > $TmpFileName
  while read line 
  do
    set $line > /dev/null
    shift
    echo "# $*" >> $ScenFileName
  done < $TmpFileName
  echo "# Last updated on `date`" >> $ScenFileName
}

#Not used, now no need to append trailer info 
AddTrailer()
{
  egrep TRL $ScenControlFile > $TmpFileName
  while read line 
  do
    set $line > /dev/null
    shift
    echo "# $*" >> $ScenFileName
  done < $TmpFileName
}


#Not used, now no need to sort and match with $NS_WDIR/etc/ScenControl.dat  
CopyKeywords()
{
  
 #extracting all keywords from scenario file in pipe ("|") sepaerted manner so that we can use it in egrep
 SCEN_KEY=`cat $ScenBakFileName | awk '{print $1 }' | sort -u | awk '{printf "|"$1}' | cut -d"|" -f2-`
 #matching with ScenControl.dat in sorted order
 CTRL_DAT_KEY=`egrep -w "$SCEN_KEY" $NS_WDIR/etc/ScenControl.dat | awk '/^KEYWORD/ { printf "|"$2}' | cut -d"|" -f2-`
 i=0
 NOF=`echo $CTRL_DAT_KEY | awk -F"|" '{print NF}'`
 #changing CTRL_DAT_KEY into space seperated manner, so that we can perform array like operation
 CTRL_DAT_KEY_WITH_SPACE=`echo $CTRL_DAT_KEY | sed 's/|/ /g'`
 set `echo $CTRL_DAT_KEY_WITH_SPACE`
 
 #taking keys from CTRL_DAT_KEY_WITH_SPACE & greping in ScenBakFileName & putting into ScenFileName
 while [ $i != $NOF ]
 do
  KEY=$1
  egrep "$KEY" $ScenBakFileName >>$ScenFileName
  shift
  ((i=i+1))
 done
 
 #putting keywords from scen file which are not in NS_WDIR/etc/ScenControl.dat 
 egrep -v "$CTRL_DAT_KEY" $ScenBakFileName >>$ScenFileName
}

#AddHeader
#CopyKeywords
#AddTrailer

#ls -l  $ScenFileName $ScenSaveFileName

#Removing .conf.save file also since this created as root
rm -f $TmpFileName $ScenBakFileName $ScenSaveFileName

exit 0

// This file has list of all C API which can be used in flow files of script and need to be shown in GUI using auto completion (Ctrl + Space)
// Author - Neeraj Jain
// This is created from ns_string.h
// Any changes in ns_string.h should be done here if that change is impacting API to be used by GUI in auto completion
extern double ns_get_double_val(char * var);
extern int ns_set_double_val(const char* param_name, double value);
extern int ns_save_string_flag(const char* param_value, int value_length, const char* param_name, int encode_flag);
extern char* ns_eval_string_flag(char* string, int encode_flag, long *size);
extern u_ns_ts_t ns_get_ms_stamp();
extern char* ns_eval_string(char* string);
extern unsigned char *ns_hmac(unsigned char *message , int msg_len, unsigned char *key, size_t key_len, char *md_type, int encode_mode); 
extern int ns_get_hmac_signature(char *method, char *uri, char *headers, char *body, char *region, char *key, char *ksecret, char *signature, char *sku_value, char *zipcode, char *amzDate, char *dateStamp, char *vendor_code); 
extern int ns_save_string(const char* param_value, const char* param_name);
extern int ns_chk_strcpy(char *dest, char *src, int dest_len);
extern int ns_log_string(int level, char* buffer);
extern int ns_log_msg(int level, char* format, ...);
extern int ns_decode_3des(char *key, char *in, char *out, int out_len, int mode);
extern int url_resp_hdr_size;
extern int ns_start_transaction(char* tx_name);
extern int ns_start_transaction_ex(char* tx_name);
extern int ns_sync_point(char* sp_name);
extern void ns_define_syncpoint(char *sp_name);
extern int ns_end_transaction(char* tx_name, int status);
extern int ns_end_transaction_ex(char* tx_name, int status);
extern int ns_define_transaction(char *tx_name);
extern int ns_end_transaction_as(char* tx_name, int status, char *end_name);
extern int ns_end_transaction_as_ex(char* tx_name, int status, char *end_name);
extern int ns_get_transaction_time (char *tx_name);
extern int ns_set_tx_status (char* tx_name, int status);
extern int ns_get_tx_status (char* tx_name);
extern long ns_start_timer(char *start_timer_name);
extern long ns_end_timer(char *end_timer_name);
extern long long ns_get_cur_partition();
extern int ns_get_host_name(); 
extern int ns_get_num_nvm();
extern int ns_get_num_ka_pct();
extern int ns_get_min_ka();
extern int ns_get_max_ka();
extern int ns_get_page_status(void);
extern int ns_get_session_status(void);
extern int ns_set_session_status(int status);
extern int ns_get_int_val (char * var_name);
extern int ns_set_int_val (char * var_name, int value);
extern char *ns_get_cookie_val (int cookie_idx);
extern char *ns_get_cookie_val_ex (char *cookie_name, char *domain, char *path);
extern int ns_set_cookie_val (int cookie_idx, char *cookie_val);
extern int ns_set_cookie_val_ex (char *cookie_name, char *domain, char *path, char *cookie_val);
extern int ns_get_auto_cookie_mode();
extern int ns_remove_cookie (char *name, char *path, char *domain, int free_for_next_req);
extern int ns_cleanup_cookies();
extern int ns_web_add_header(char *header, char *content, int flag);
extern int ns_web_add_auto_header(char *header, char *content, int flag);
extern int ns_web_remove_auto_header(char *header, int flag);
extern int ns_web_cleanup_auto_headers();
//extern char * ns_get_ua_string ();
extern int ns_get_ua_string (char *ua_string_buf, int ua_string_len);
//extern void ns_set_ua_string (char *ua_static_ptr);
extern int ns_set_ua_string (char *ua_static_ptr, int ua_static_ptr_len);
extern int ns_get_cookies_disallowed ();
extern int ns_set_cookies_disallowed (int value);
extern char *ns_get_user_ip();
extern int ns_get_nvmid();
extern unsigned int ns_get_userid();
extern unsigned int ns_get_sessid();
extern int ns_get_testid();
extern void *do_shmget(long int size, char *msg);
extern void *do_shmget_with_id(long int size, char *msg, int *shmid); 
extern void *do_shmget_with_id_ex(long int size, char *msg, int *shmid, int auto_del);
extern void check_shared_mem(long int size);
extern char * ns_get_guid();
extern int use_geoip_db;
extern unsigned int get_an_IP_address_for_area(unsigned int area_id);
extern char *ns_get_area_ip_char(unsigned int area_id);
extern unsigned int ns_get_area_ip(unsigned int area_id);
extern char * ns_ip_to_char(unsigned int addr);
extern char *ns_url_get_body_msg(int *size);
extern char *ns_url_get_hdr_msg(int *size);
extern char *ns_url_get_resp_msg(int *size);
extern int ns_url_get_hdr_size();
extern int ns_url_get_body_size();
extern int ns_url_get_resp_size();
extern int ns_url_get_http_status_code();
extern void ns_md5_checksum_to_ascii(unsigned char *source, unsigned char *dest);
extern int ns_gen_md5_checksum(const unsigned char *buf, int len, unsigned char *checksum_buf) ;
extern int ns_validate_response_checksum(char *cookie_name, char *var_name);
extern char *ns_encode_url(const char *string, int inlength);
extern char *ns_decode_url(const char *string, int length);
extern void ns_encode_decode_url_free(char *ptr);
extern char *ns_encode_eval_string(char *string);
extern int ns_encode_save_string(const char* param_value, const char* param_name);
extern int ns_add_user_data_point(int rptGroupID, int rptGraphID, double value);
extern int ns_is_rampdown_user(void);
extern int ns_log_event(int severity, char *format, ...);
extern char *ns_get_redirect_url();
extern char *ns_get_link_hdr_value();
extern int ns_add_cookie_val_ex(char *cookie_name, char *domain, char *path, char *cookie_val);
extern int ns_add_cookies (char *cookie_buf);
extern int ns_get_replay_page();
extern int ns_advance_param(const char *param_name); 
extern char * ns_paramarr_idx(const char * paramArrayName, unsigned int index); 
extern int ns_paramarr_len(const char * paramArrayName); 
extern char * ns_paramarr_random(const char * paramArrayName); 
extern int ns_check_reply_size(int mode, int value1, int value2);
extern  char *ns_get_session_status_name(int status);
extern char *ns_get_status_name(int status);
extern int ns_set_embd_objects(int num_eurls, char **eurls, int both_api_and_auto_fetch_url);
extern int ns_setup_save_url(int type, int depth, char *var);
extern int ns_force_server_mapping(char *rec, char* map);
extern int ns_get_random_number_int(int min , int max);
extern char* ns_get_random_number_str(int min , int max, char *format);
extern char* ns_get_random_str (int min, int max, char *format);
extern unsigned long long ns_get_unique_number();
extern int ns_get_pg_think_time();
extern int ns_get_ka_time();
extern int ns_save_data_eval(char *file_name, int mode, char *eval_string);
extern int ns_save_data_ex(char *file_name, int mode, char *format, ...);
extern int ns_save_data_var(char *file_name, int mode, char *var_name);
extern char *ns_get_all_cookies(char *cookie_buf, int cookie_max_buf_len);
extern int ns_web_url(int page_id);
extern int ns_web_websocket_send(int page_id);
extern int ns_web_websocket_close(int close_id);
extern char *ns_web_websocket_search(char *mesg, char *lb, char *rb);
extern char *ns_web_websocket_read(int con_id, int timeout, int *resp_sz);
extern int ns_web_websocket_check(char *mesg, char *check_value , int check_action);
extern int ns_page_think_time(double page_think_time);
extern int ns_exit_session(void); 
extern int ns_sockjs_close(int close_id);
extern int ns_click_api(int page_id, int clickaction_id);
extern int ns_set_form_body(char *form_buf_param_name, char *form_body_param_name, int ordinal, int num_args, ...);
extern int ns_set_form_body_ex(char *form_buf_param_name, char *form_body_param_name, char *in_str);
extern int ns_tr069_cpe_invoke_inform(int page_id);
extern int ns_tr069_cpe_invite_rpc(int page_id);
extern int ns_tr069_cpe_execute_get_rpc_methods(int page_id);
extern int ns_tr069_cpe_execute_set_parameter_values(int page_id);
extern int ns_tr069_cpe_execute_get_parameter_values(int page_id);
extern int ns_tr069_cpe_execute_get_parameter_names(int page_id);
extern int ns_tr069_cpe_execute_set_parameter_attributes(int page_id);
extern int ns_tr069_cpe_execute_get_parameter_attributes(int page_id);
extern int ns_tr069_cpe_execute_reboot(int page_id);
extern int ns_tr069_cpe_execute_download(int page_id);
extern int ns_tr069_cpe_execute_add_object(int page_id);
extern int ns_tr069_cpe_execute_delete_object(int page_id);
extern int ns_tr069_cpe_transfer_complete(int page_id);
extern int ns_tr069_get_rfc(int wait_time);
extern int ns_tr069_register_rfc (char *ip, unsigned short port, char *url);
extern int ns_tr069_get_periodic_inform_time(void);
extern int ns_tr069_get_periodic_inform_time_ex();
extern void *ns_malloc(int size);
extern void *ns_realloc(void *ptr, int size, int old_size);
extern void ns_free(void *ptr, int size);
extern void ns_dos_syn_attack(char *source_ip_add, char *dest_ip_add, unsigned int dest_port, int num_attack);
extern int ns_ymsg_logout_ext();
extern int ns_ymsg_send_chat_ext(char *my_yahoo_id, char *dest_yahoo_id, char *chat_msg);
extern int ns_ymsg_login_ext(char *yahoo_id, char *password, int inital_status, int debug_level);
//extern char *ns_ymsg_init_ylad();
// extern void ns_ymsg_set_globals(char *ns_local_host, char *ns_ylad, int *ns_poll_loop);
extern void *ns_ymsg_get_local_host();
extern void *ns_ymsg_get_ylad();
extern void *ns_ymsg_get_buddies();
extern int ns_ymsg_get_connection_tags();
extern void ns_ymsg_set_local_host(void *ptr);
extern void ns_ymsg_set_ylad(void *ptr);
extern void ns_ymsg_set_buddies(void *ptr);
extern void ns_ymsg_set_connection_tags(int con_tag);
extern char *ns_red_client_ex(char *ip, int port, char *req_buf);
extern char *ns_red_client_partial_ex(char *ip, int port, char *req_buf, int num_partial);
extern void ns_set_red_rep_time_out_ex(int time_out); 
extern void ns_set_red_connect_time_out_ex(int time_out);
extern char *ns_send_data_with_delay(char *ip, int port, int arr_len, char **req_buf, int delay);
extern int ns_db_odbc_init(void);
extern int ns_db_connect(char *conn_str);
extern int ns_db_alloc_stmt_handle(void **p_stmt);
extern int ns_db_execute_direct(void *stmt, char *qstr);
extern int ns_db_get_value(void *stmt, char *retbuf, int retbuf_len);
extern int ns_db_get_value_in_file(void *stmt, char *file);
extern int ns_db_free_stmt(void *stmt);
extern int ns_db_odbc_close(void);
extern int ns_db_prepare(void *in_stmt, char *qstr);
extern int ns_db_execute(void *in_stmt);
extern int ns_db_bindparameter(void             *in_stmt, 
extern char *ns_decode_html(char *in_str, int in_str_len, char *out_str);
extern char *ns_encode_html(char *in_str, int in_str_len, char *out_str);
//extern char *ns_encode_base64(char *in_str, int in_str_len, char *out_str);
//extern char *ns_decode_base64(char *in_str, int in_str_len, char *out_str);
extern int ns_trace_log_current_sess();
extern int ns_save_searched_string(int in_type, char *in, int out_type, char *out, char *lb, char *rb, int  ord, int start_offset, int save_len);
extern char * ns_get_machine_type();
extern char * ns_get_schedule_phase_name();
extern int ns_get_schedule_phase_type();
extern char* ns_get_referer();
extern int ns_set_referer(char *referer);
extern int ns_stop_inline_urls();
extern int ns_get_controller_testid();
extern int ns_soap_ws_security(char *keyFile, char *certFile, int algorithm, char *token, char *digest_id, char *cert_id, char *sign_id, char *key_info_id, char* sec_token_id );
extern int ns_enable_soap_ws_security();
extern int ns_disable_soap_ws_security();
extern int ns_evp_digest(char *buffer , int len , int algo , unsigned char *hash);
extern int ns_evp_sign(char *buffer , int len , int algo , char *privKey , unsigned char *signature, int sig_size);
extern int ns_encode_base64_binary(const void* data_buf, size_t dataLength, char* result, size_t resultSize);
extern void ns_db_replay_query(int *idx, int *num_parameters, char *query_param_buf);
extern int ns_db_replay_query_end(int idx, int status, char *msg);
extern int ns_save_value_from_file(const char *file_name, const char* param_name);
extern int ns_eval_compress_param(char *in_param_name, char *out_param);
extern int ns_eval_decompress_param(char *in_param_name, char *out_param);
extern int ns_save_binary_val(const char* param_value, const char* param_name, int value_length);
extern int ns_set_ssl_settings(char *cert_file, char *key_file);
extern int ns_unset_ssl_settings();
extern int ns_mongodb_connect( char *ip, int port, short auth_type, char *user, char *pass, char *dbname);
extern int ns_mongodb_select_db_coll(char *dbname , char *collname);
extern int ns_mongodb_execute_direct(char *query);
extern int ns_mongodb_collection_find(char *query, int limit);
extern int ns_mongodb_collection_insert(char *query);
extern int ns_mongodb_delete(char *dbname, char *collname, char *query, int del_type);
extern int ns_mongodb_collection_update(char *query, char *updator); 
extern char *ns_mongodb_get_val();
extern int update_user_flow_count(int id);
extern char *ns_decrypt(char *encrypt_string);
extern char *ns_eval_string_copy(char *dest, char *str, int dest_len);
extern char *ns_eval_string_copy(char *dest, char *str, int dest_len);
extern int ns_xmpp_send(int);
extern int ns_cassdb_connect(char *host, int port, char *user, char *pass);
extern int ns_cassdb_execute_query(char *dbname);
extern int ns_cassdb_disconnect();
extern char *ns_cassdb_get_val();
extern void ns_save_command_output_in_param(char *param, char *command);
extern int ns_jmeter_start();
extern unsigned char *ns_aes_encrypt(unsigned char *buffer, int buffer_len, int encryption_algo, char base64_encode_option, char *key, int key_len, char *ivec, int ivec_len, char **err_msg);
extern unsigned char *ns_aes_decrypt(unsigned char *encrypted_buffer, int encrypted_buffer_len, int encryption_algo, char base64_encode_option, char *key , int key_len, char *ivec, int ivec_len, char **err_msg);
extern unsigned char *ns_encode_base64(unsigned char *buffer, int buffer_len, char **err_msg);
extern unsigned char *ns_decode_base64(unsigned char *encoded_buffer, int encoded_buffer_len, char **err_msg);
extern int ns_printf(char *format, ...);
extern int ns_fprintf(FILE *fp, char *format, ...);
extern char *ns_jwt(const char *header, const char *payload, char *key);
extern int ns_read_file(char *filename , char *filebuf);
extern int ns_protobuf_encode(char *xml_data, int is_file_or_buffer, char *proto_fname, char *msg_type, char *enc_param);
extern void ns_protobuf_decode(char *encoded_data_param, long len, int is_param, char *proto_fname, char *msg_type, char *decoded_param);
extern int ns_ibmmq_init_producer(char *ibmmq_hostname, int ibmmq_port, char *queue_manager, char *channel,char *ibmmq_queue,
extern int ns_ibmmq_init_consumer(char *ibmmq_hostname, int ibmmq_port,  char *queue_manager,  char *channel, char *ibmmq_queue,
extern int ns_ibmmq_set_put_msg_mode(int jpid, int put_mode, char *error_msg);
extern int ns_ibmmq_set_Connection_timeout(int jpid, double timeout, char *error_msg);
extern int ns_ibmmq_set_putMsg_timeout(int jpid, double timeout, char *error_msg);
extern int ns_ibmmq_set_getMsg_timeout(int jpid, double timeout, char *error_msg);
extern int ns_ibmmq_get_connection(int jpid, char *transaction_name, char *error_msg);
extern int ns_ibmmq_release_connection(int jpcid, char *error_msg);
extern int ns_ibmmq_put_msg(int jpcid, char *msg, int msg_len, char *transaction_name, char *error_msg);
extern int ns_ibmmq_get_msg( int jpcid, char *msg, int msg_len, char *transaction_name, char *error_msg);
extern int ns_ibmmq_close_connection(int jpcid, char *transaction_name, char *error_msg);
extern int ns_kafka_init_producer(char *kafka_hostname, int kafka_port, char *kafka_topic, char *kafka_userId,
extern int ns_kafka_init_consumer(char *kafka_hostname, int kafka_port, char *kafka_topic, char *consumer_group, char *kafka_userId,
extern int ns_kafka_set_security_protocol(int jpid, char *security_protocol, char *error_msg);
extern int ns_kafka_set_ssl_ciphers(int jpid, char *ciphers, char *error_msg);
extern int ns_kafka_set_ssl_key_file(int jpid, char *keyFilePath, char *keyPassword, char *error_msg);
extern int ns_kafka_set_ssl_cert_file(int jpid, char *certificateFilePath, char *error_msg);
extern int ns_kafka_set_ssl_ca_file(int jpid, char *caCertifcateFilePath, char *error_msg);
extern int ns_kafka_set_ssl_crl_file(int jpid, char *crlFilePath, char *error_msg);
extern int ns_kafka_set_put_msg_mode(int jpid, int put_mode, char *error_msg);
extern int ns_kafka_set_Connection_timeout(int jpid, double timeout, char *error_msg);
extern int ns_kafka_set_putMsg_timeout(int jpid, double timeout, char *error_msg);
extern int ns_kafka_set_getMsg_timeout(int jpid, double timeout, char *error_msg);
extern int ns_kafka_set_sasl_properties(int jpid, char *sasl_mechanism, char *sasl_username,char *sasl_password, char *error_msg);
extern int ns_kafka_get_connection(int jpid, char *transaction_name, char *error_msg);
extern int ns_kafka_set_message_header(int jpcid, char *error_msg, char *header_name, char *header_value);
extern int ns_kafka_put_msg(int jpcid, char *msg, int msg_len, char *transaction_name, char *error_msg);
extern int ns_kafka_put_msg_v2(int jpcid, char *msg, int msg_len, char *key, int key_len, char *transaction_name, char *error_msg);
extern int ns_kafka_get_msg(int jpcid, char *msg, int msg_len, char *header, int hdr_len,  char *transaction_name, char *error_msg);
extern int ns_kakfa_release_connection(int jpcid, char *error_msg);
extern int ns_kakfa_close_connection(int jpcid, char *transaction_name, char *error_msg);
extern int ns_tibco_init_producer(char *tibco_hostname, int tibco_port, int t_or_q, char *tibco_topic_or_queue, char *tibco_userId,                                     char *tibco_password, int max_pool_size, char *error_msg);
extern int ns_tibco_init_consumer( char *tibco_hostname, int tibco_port, int t_or_q, char *tibco_topic_or_queue, char *tibco_userId,                                     char *tibco_password, int max_pool_size, char *error_msg);
extern int ns_tibco_set_ssl_ciphers(int jpid, char *ciphers, char *error_msg);
extern int ns_tibco_set_ssl_pvt_key_file(int jpid, char *pvtKeyFilePath, char *error_msg);
extern int ns_tibco_set_ssl_trusted_ca(int jpid, char *trustedCACertFilePath, char *error_msg);
extern int ns_tibco_set_ssl_issuer(int jpid, char *issuerCertFilePath, char *error_msg);
extern int ns_tibco_set_ssl_identity(int jpid, char *identityFilePath, char *ssl_pwd, char *error_msg);
extern int ns_tibco_set_put_msg_mode(int jpid, int put_mode, char *error_msg);
extern int ns_tibco_set_Connection_timeout(int jpid, double timeout, char *error_msg);
extern int ns_tibco_set_putMsg_timeout(int jpid, double timeout, char *error_msg);
extern int ns_tibco_set_getMsg_timeout(int jpid, double timeout, char *error_msg);
extern int ns_tibco_get_connection(int jpid,  char *transaction_name, char *error_msg);
extern int ns_tibco_set_message_header(int jpcid, char *error_msg, char *header_name, int value_type, ...);
extern int ns_tibco_put_msg(int jpcid, char *msg, int msg_len, char *transaction_name, char *error_msg );
extern int ns_tibco_get_msg(int jpcid, char *msg, int msg_len, char *header, int header_len, char *transaction_name, char *error_msg);
extern int ns_tibco_release_connection(int jpcid, char *error_msg);
extern int ns_tibco_close_connection(int jpcid,  char *transaction_name, char *error_msg);

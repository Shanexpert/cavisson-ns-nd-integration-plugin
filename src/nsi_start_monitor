#
# Name: nsi_start_monitor
# Author: Anil Kumar
#
# Exit Values: 
#  0 - Start Sucessful
#  -1 - Usage Error
#  -2 - Start failed
#  -3 - another instance running
# Modification History:
#   05/29/05: Anil - Initial Version
#
# Name:nsi_start_monitor
# Author: Amitabh modak
#
#Modification History:
#10 sept 05: Amitabh - second version
#
#

protocol="http"

if [ "XX" = "XX$NS_WDIR" ]
then
  NS_WDIR=/home/cavisson/work
fi

. $NS_WDIR/etc/netstorm.env

if [ $# -lt 1 ]
then
	 echo "Usage: $0 [-n script-name] [-x proxyserver-ip:port] [-X proxyserver-ip:port] [-s server-ip:port] [-S server-ip:port] <-l monitor proxy port> <-I Idle Time > <-P http or other or both> < -v > <-U user_name> <-p profile_name>"
	exit -1
fi

HPDLogFile=$NS_WDIR/webapps/netstorm/logs/hpd.log
MonitorLogFile=$NS_WDIR/webapps/netstorm/logs/monitor.log
LogFile=$NS_WDIR/webapps/netstorm/logs/start_monitor.log

> $MonitorLogFile
> $LogFile
> $HPDLogFile

start_http_proto_monitor()
{
  # Neeraj - 07/02/08 - Added -t2000 so that page splitting is less
  # we did so that it should not expand metacharacter like * or . or ?
  #-K is to pass keep alive time in seconds

  monitor_args=" -K300 -t2000 $args"
  echo "Starting http service recording using - nohup bin/nsu_monitor $monitor_args" >> $LogFile
  # This must be started in background
  nohup bin/nsu_monitor $monitor_args 1>> $MonitorLogFile 2>&1 &
}

# Gui will add ENABLE_RECORDING 1 keyword in hpd.conf
# we need to just restart hpd process
start_other_proto_monitor()
{
  echo "Starting other protocol service recording using /etc/init.d/$HPD_CMD restart" >> $LogFile
  /etc/init.d/$HPD_CMD restart 1>> $HPDLogFile 2>&1 
  if [ $? != 0 ]; then
   echo "Error in restarting controller $HPD_CMD"
   exit -1
  fi
}

args=""
while getopts l:u:n:x:X:i:s:S:P:c:e:o:v:U:p: c
do
	case $c in
	n) args="$args -n $OPTARG" ;;
	x) args="$args -x $OPTARG";;
	X) args="$args -X $OPTARG";;
	s) args="$args -s $OPTARG";;
	S) args="$args -S $OPTARG";;
	l) args="$args -l $OPTARG";;
	u) args="$args -u $OPTARG";;
	i) args="$args -i $OPTARG";;
	c) args="$args -c $OPTARG";;
	e) args="$args -e $OPTARG";;
	o) RECORDING_TIMEOUT="$OPTARG";;
        P) protocol="$OPTARG";;
	v) args="$args -v";;
        U) user_name="$OPTARG";;
        p) profile_name="$OPTARG";;
	?) echo "Usage: $0 [-n script-name] [-x proxyserver-ip:port] [-X proxyserver-ip:port] [-s server-ip:port] [-S server-ip:port] <-l monitor proxy port> [<-i ip >] <-I Idle Time > [-P protocol name] [-c client_certificate ] [-s endpoint_certificate] < -v > [-U user_name] [-p profile_name]"
	   exit -1 ;;
	esac
done

if [ "X$RECORDING_TIMEOUT" == "X" ];then
  args="$args -o 900"
fi

# This is done to configure idle timout from config.ini 
IDLE_TIMEOUT=`grep "netfunction.record.idle.timeout" $NS_WDIR/webapps/sys/config.ini| dos2unix | cut -d ' ' -f3`
if [ "X$IDLE_TIMEOUT" != "X" ];then
  args="$args -I $IDLE_TIMEOUT"
fi

if [ "X$user_name" == "X" ];then
  user_name="admin"
fi

if [ "X$profile_name" == "X" ];then
  profile_name="default"
fi

export NS_RTA_DIR="workspace/$user_name/$profile_name/cavisson"

cd $NS_WDIR

$NS_WDIR/bin/nsi_status_monitor > /dev/null 2>&1
if [ $? == 0 ]
then
  echo "Script Capture is already running."
  echo "Please try later."
  exit 1
fi

#Clean in case if it present
rm -rf $NS_WDIR/$NS_RTA_DIR/default/default/scripts/_newScript

#set -f  #it means disable file name generation

if [ "X$protocol" == "Xhttp" -o "X$protocol" == "Xboth" ]; then
  start_http_proto_monitor
fi

if [ "X$protocol" == "Xother" -o "X$protocol" == "Xboth" ]; then
  start_other_proto_monitor    
fi

#as we have disable now need to enable
#set +f

sleep 3

#Set to fail status
RecordingHttpStarted=1
RecordingOtherStarted=1
if [ "X$protocol" == "Xhttp" -o "X$protocol" == "Xboth" ]; then
  RecordingHttpStarted=`grep "Ready to Record" $MonitorLogFile | wc -l`
fi

if [ "X$protocol" == "Xother" -o "X$protocol" == "Xboth" ]; then
  # We create this as hpd may not create it if there are not capture
  # GUI is doing script copy and then deleitng. So if not present,  it gives error
  if [ "X$protocol" == "Xother" ]; then
    mkdir -p $NS_WDIR/$NS_RTA_DIR/default/default/scripts/_newScript
  fi
  /etc/init.d/$HPD_CMD start_time 1>> $HPDLogFile 2>&1 &
  if [ $? != 0 ]; then
    RecordingOtherStarted=0
  fi
fi

if [ $RecordingHttpStarted -eq 0 -o $RecordingOtherStarted -eq 0 ];then
    cat $MonitorLogFile
    echo "Script Capture start failed."
    $NS_WDIR/bin/nsi_status_monitor -P $protocol > /dev/null 2>&1
    if [ $? == 0 ]; then
      $NS_WDIR/bin/nsi_stop_monitor -P $protocol > /dev/null 2>&1
    fi
    exit -2
fi

echo "Script Capture started successfuly."
exit 0


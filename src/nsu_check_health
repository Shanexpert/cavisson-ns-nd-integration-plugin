#!/bin/bash
#--------------------------------------------------------------------------
# Name		: nsu_check_health
# Purpose	: Parameter of generator health
# Author	: Balram Kirar
# Date  	: 10 Feb 2018
#--------------------------------------------------------------------------
CONTROLLER="work"
ARG_WDIR=$1
VERSION=0
TR=0
DISK=0
CPU=0
MEM=0
BANDWIDTH=0
HOME_DIR=/home/cavisson

FILENAME=".nsu_check_health"
CONTROLLER_CONF_FILE="$HOME_DIR/etc/cav_controller.conf"
IP=`cat $HOME_DIR/etc/cav.conf | grep NSAdminIP | cut -d' ' -f2 | cut -d'/' -f1`

check_disk_availability()
{
  DISK_ROOT=`df -hPBG /| sed '2q;d' | awk '{print $4}'|sed 's/[!A-Z]*//g'`
  DISK_HOME=`df -hPBG /home | sed '2q;d' | awk '/\/home/{print $4}'|sed 's/[!A-Z]*//g'`
  MACHINE_OUT+=$DISK_ROOT"+"$DISK_HOME","
}

check_cpu_utilization()
{
  CPU_PCT=`expr 100 - $(vmstat 1 2|awk 'NR==4{print $15}')`
  MACHINE_OUT+=$CPU_PCT","
}

check_mem_availability()
{
  MEM=`free -gt | sed '2q;d' | awk '{print $7}'`
  MACHINE_OUT+=$MEM","
}

check_bandwidth()
{
  INTERFACE=`netstat -nr|grep -wm1 UG|awk '{print $8}'`
  BANDWIDTH=`cat /sys/class/net/$INTERFACE/speed 2>/dev/null`
  [ "XX$BANDWIDTH" == "XX" ] && BANDWIDTH=0
  MACHINE_OUT+=$BANDWIDTH","
}

check_cpu_availablity()
{
  NUM_CPU=`nproc --all`
  MACHINE_OUT+=$NUM_CPU
}

check_build_version()
{
  if [ "XX$NS_WDIR" != "XX" ];then
   local controller=`basename $NS_WDIR`
   VERSION=`$NS_WDIR/bin/nsu_get_version -n -w $controller |awk '{print $2 $3 $4}'`
   [ "XX$VERSION" == "XX" ] && VERSION=0
   CONTROLLER_OUT+=$VERSION","
  fi
}

check_test_running()
{
  TR_LIST=`$NS_WDIR/bin/nsu_show_netstorm |cut -d' ' -f1 |grep -v TestRun 2>/dev/null`
  if [ ${#TR_LIST} -eq 0 ];then
    TR=0
  else
    for testid in $TR_LIST
    do
      global_dat_file=$NS_WDIR/logs/TR$testid/global.dat
      if [ -f $global_dat_file ];then
        MODE=`grep -w GUI_SERVER $global_dat_file|cut -d' ' -f2`
        if [ "XX$MODE" != "XXNONE" ];then
          TR=$testid
          break
        fi
      fi
    done
  fi
  CONTROLLER_OUT+=$TR
}


check_jmeter_installed()
{
  JMETER_FLAG=0
  JMETER_HOME=""
  if [ -f $NS_WDIR/bin/nsu_get_jmeter_version ];then
    . $NS_WDIR/bin/nsu_get_jmeter_version >/dev/null
    if [ "XX$JMETER_HOME" != "XX" ];then
      JMETER_FLAG=1;
    fi
  fi
  echo "$JMETER_FLAG" >$NS_WDIR/.jmeterFile
}

check_disk_availability
check_cpu_utilization
check_mem_availability
check_bandwidth
check_cpu_availablity

#FILE_HEADER="#Build_Version,Test_Run,Disk,CPU_Utilization,Memory,Bandwidth,Number_of_Cpu,JMeterFlag"
while read line
do
  export NS_WDIR=`echo $line|cut -d'|' -f3`
  [ "XX$NS_WDIR" = "XXNS_WDIR" ] && continue
  CONTROLLER=`basename $NS_WDIR`
  check_build_version 
  check_test_running
  check_jmeter_installed
  echo "$CONTROLLER_OUT,$MACHINE_OUT" >$NS_WDIR/$FILENAME
  CONTROLLER_OUT=""
done<$CONTROLLER_CONF_FILE

if [ "XX$ARG_WDIR" != "XX" ];then
  if [ ! -d $ARG_WDIR ];then
    echo "INVALID"
    exit 1
  fi
  cat $ARG_WDIR/$FILENAME
fi

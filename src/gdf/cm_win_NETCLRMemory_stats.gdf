# --- GDF Version History ---
# 1.0 - Initial version
# 2.0 - Change done for match Long_data and Long_long_data to double
# 3.0 - Changes done for Dynamic data in Execution GUI
# 3.1 - Use future1 field of group line for Metric group name
#
# Command to get data for this gdf on windows server : 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# wmic.exe path Win32_PerfFormattedData_NETFramework_NETCLRMemory.Name='_Global_' get AllocatedBytesPersec,FinalizationSurvivors,Gen0heapsize,Gen0PromotedBytesPerSec,Gen1heapsize,Gen1PromotedBytesPerSec,Gen2heapsize,LargeObjectHeapsize,NumberBytesinallHeaps,NumberGCHandles,NumberGen0Collections,NumberGen1Collections,NumberGen2Collections,NumberInducedGC,NumberofPinnedObjects,NumberofSinkBlocksinuse,NumberTotalcommittedBytes,NumberTotalreservedBytes,PercentTimeinGC,PromotedFinalizationMemoryfromGen0,PromotedMemoryfromGen0,PromotedMemoryfromGen1 /every:10
#
# Entry in mprof to get data :
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# CUSTOM_MONITOR 192.168.1.52 cm_win_NETCLRMemory_stats.gdf Win_Mon_NETCLRMemory 2 wmic.exe path Win32_PerfFormattedData_NETFramework_NETCLRMemory.Name='_Global_' get AllocatedBytesPersec,FinalizationSurvivors,Gen0heapsize,Gen0PromotedBytesPerSec,Gen1heapsize,Gen1PromotedBytesPerSec,Gen2heapsize,LargeObjectHeapsize,NumberBytesinallHeaps,NumberGCHandles,NumberGen0Collections,NumberGen1Collections,NumberGen2Collections,NumberInducedGC,NumberofPinnedObjects,NumberofSinkBlocksinuse,NumberTotalcommittedBytes,NumberTotalreservedBytes,PercentTimeinGC,PromotedFinalizationMemoryfromGen0,PromotedMemoryfromGen0,PromotedMemoryfromGen1 /every:10
#

Info|3.1|1|-|-|-1|-1|-
Group|.NET CLR GC Stats|10037|vector|23|0|Application Metrics|Tier>Server>Instance|.NET CLR GC Stats provides metrices about memory, garbage collection and heap stats.

Graph|Allocated Bytes/Sec|1|scalar|rate|-|-|0|NA|-1|-1|H|NA|Number of allocated bytes per second. 
Graph|Finalized Survivor Objects|2|scalar|sample|-|-|0|NA|-1|-1|L|NA|Number of garbage collected objects that survive a collection because they are waiting to be finalized. 
Graph|Generation 0 Used Memory (KB)|3|scalar|sample|-|-|0|NA|-1|-1|L|NA|Maximum memory that can be allocated in generation 0 (Gen 0) in kilobytes. A Gen 0 GC is triggered when the allocations since the last GC exceed this size.
Graph|Generation 0 Promoted Bytes/Sec|4|scalar|rate|-|-|0|NA|-1|-1|L|NA|Amount of memory in bytes promoted from generation 0 (youngest) to generation 1 in bytes per second. 
Graph|Generation 1 Used Memory (KB)|5|scalar|sample|-|-|0|NA|-1|-1|L|NA|Amount of used memory in generation 1 (Gen 1) in Kilobytes. Objects are not directly allocated in this generation, they are promoted from previous Gen 0 GCs.
Graph|Generation 1 Promoted Bytes/Sec|6|scalar|rate|-|-|0|NA|-1|-1|L|NA|Amount of memory in bytes promoted from generation 1 to generation 2 (oldest) per second.
Graph|Generation 2 Used Memory (KB)|7|scalar|sample|-|-|0|NA|-1|-1|L|NA|Amount of used memory in generation 2 (Gen 2) in Kilobytes. Objects are not directly allocated in this generation, they are promoted from Gen 1 during previous Gen 1 GCs.
Graph|Large Object Heap Size (KB)|8|scalar|sample|-|-|0|NA|-1|-1|L|NA|Size of the Large Object Heap in bytes.
Graph|Used Heap Memory (KB) |9|scalar|sample|-|-|0|NA|-1|-1|H|NA|Used heap size from Gen 1,2 and large object heap in Kilobytes.
Graph|GC Handles|10|scalar|sample|-|-|0|NA|-1|-1|L|NA|Number of GC Handles. These are handles to resources external to the CLR and the managed environment.
Graph|Generation 0 Collections/Min|11|scalar|rate|-|CumToPM|0|NA|-1|-1|L|NA|Number of times the generation 0 objects are garbage collected per minute since the start of the application.
Graph|Generation 1 Collections/Min|12|scalar|rate|-|CumToPM|0|NA|-1|-1|L|NA|Number of times the generation 1 objects are garbage collected per minute since the start of the application.
Graph|Generation 2 Collections/Min|13|scalar|rate|-|CumToPM|0|NA|-1|-1|L|NA|Number of times the generation 2 objects (older) are garbage collected per minute since the start of the application.
Graph|Induced GC|14|scalar|sample|-|-|0|NA|-1|-1|M|NA|The peak number of times a garbage collection was performed because of an explicit call to GC
Graph|Pinned Objects|15|scalar|sample|-|-|0|NA|-1|-1|L|NA|Number of pinned objects encountered in the last GC. 
Graph|Sync Blocks In Use|16|scalar|sample|-|-|0|NA|-1|-1|L|NA|Number of sync blocks in use. Sync blocks are per-object data structures allocated for storing synchronization information.
Graph|Allocated Heap Memory (KB)|17|scalar|sample|-|-|0|NA|-1|-1|L|NA|The amount of virtual memory currently committed by the Garbage Collector in Kilobytes.
Graph|Total Reserved Memory (KB)|18|scalar|sample|-|-|0|NA|-1|-1|L|NA|The amount of virtual memory currently reserved by the Garbage Collector in Kilobytes. Reserved memory is the virtual memory space reserved for the application but no disk or main memory pages have been used.
Graph|GC Time (Pct)|19|scalar|sample|-|-|0|NA|-1|-1|H|NA|Percentage of elapsed time that was spent in performing a garbage collection (GC) since the last GC cycle.
Graph|Promoted Finalization Memory From Generation 0 (KB)|20|scalar|sample|-|-|0|NA|-1|-1|L|NA|Amount of memory that are promoted from generation 0 to generation 1 in Kilobytes just because they are waiting to be finalized.
Graph|Promoted Memory From Generation 0 (KB)|21|scalar|sample|-|-|0|NA|-1|-1|L|NA|Amount of memory that survived garbage collection (GC) in Kilobytes and are promoted from generation 0 to generation 1.
Graph|Promoted Memory From Generation 1 (KB)|22|scalar|sample|-|-|0|NA|-1|-1|L|NA|Amount of memory that survived garbage collection (GC) in Kilobytes and are promoted from generation 1 to generation 2. 
Graph|Used Heap Memory (Pct)|23|scalar|sample|-|-|0|NA|-1|-1|H|NA|Percentage of overall used memory by GC.

# Command to get data for this gdf on windows server :
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# wmic path Win32_PerfFormattedData_PerfOS_Memory get AvailableBytes,AvailableKBytes,AvailableMBytes,CacheBytes,CacheBytesPeak,CacheFaultsPersec,CommitLimit,CommittedBytes,DemandZeroFaultsPersec,FreeSystemPageTableEntries,PageReadsPersec,PagesInputPersec,PagesOutputPersec,PagesPersec,PageWritesPersec,PercentCommittedBytesInUse,PoolNonpagedAllocs,PoolNonpagedBytes,PoolPagedAllocs,PoolPagedBytes,PoolPagedResidentBytes,SystemCacheResidentBytes,SystemCodeResidentBytes,SystemCodeTotalBytes,SystemDriverResidentBytes,SystemDriverTotalBytes,TransitionFaultsPersec,TransitionPagesRePurposedPersec,WriteCopiesPersec /every:10
#
# Entry in mprof to get data :
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# CUSTOM_MONITOR 192.168.1.52 cm_win_memory_stats.gdf Win_Mon_Memory 2 wmic path Win32_PerfFormattedData_PerfOS_Memory get AvailableBytes,AvailableKBytes,AvailableMBytes,CacheBytes,CacheBytesPeak,CacheFaultsPersec,CommitLimit,CommittedBytes,DemandZeroFaultsPersec,FreeSystemPageTableEntries,PageReadsPersec,PagesInputPersec,PagesOutputPersec,PagesPersec,PageWritesPersec,PercentCommittedBytesInUse,PoolNonpagedAllocs,PoolNonpagedBytes,PoolPagedAllocs,PoolPagedBytes,PoolPagedResidentBytes,SystemCacheResidentBytes,SystemCodeResidentBytes,SystemCodeTotalBytes,SystemDriverResidentBytes,SystemDriverTotalBytes,TransitionFaultsPersec,TransitionPagesRePurposedPersec,WriteCopiesPersec /every:10
#

Info|2.1|1|-|-|-1|-1|-
Group|Memory Stats Windows V1|10190|vector|30|0|System Metrics|Tier>Server|Memory Stats of windows server

Graph|Available Bytes|1|scalar|sample|-|-|0|NA|-1|-1|L|NA|Available Bytes is the amount of physical memory, in bytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists.
Graph|Available KBytes|2|scalar|sample|-|-|0|NA|-1|-1|L|NA|Available KBytes is the amount of physical memory, in Kilobytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists.
Graph|Available MBytes|3|scalar|sample|-|-|0|NA|-1|-1|L|NA|Available MBytes is the amount of physical memory, in Megabytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists.
Graph|Cache Bytes|4|scalar|sample|-|-|0|NA|-1|-1|L|NA|Cache Bytes is the sum of the Memory\\System Cache Resident Bytes, Memory\\System Driver Resident Bytes, Memory\\System Code Resident Bytes, and Memory\\Pool Paged Resident Bytes counters.  This counter displays the last observed value only; it is not an average.
Graph|Cache Bytes Peak|5|scalar|sample|-|-|0|NA|-1|-1|L|NA|Cache Bytes Peak is the maximum number of bytes used by the file system cache since the system was last restarted. This might be larger than the current size of the cache. This counter displays the last observed value only; it is not an average.
Graph|Cache Faults/Sec|6|scalar|rate|-|-|0|NA|-1|-1|L|NA|Cache Faults/sec is the rate at which faults occur when a page sought in the file system cache is not found and must be retrieved from elsewhere in memory (a soft fault) or from disk (a hard fault). The file system cache is an area of physical memory that stores recently used pages of data for applications. Cache activity is a reliable indicator of most application I/O operations. This counter shows the number of faults, without regard for the number of pages faulted in each operation.
Graph|Commit Limit|7|scalar|sample|-|-|0|NA|-1|-1|L|NA|Commit Limit is the amount of virtual memory that can be committed without having to extend the paging file(s).  It is measured in bytes. Committed memory is the physical memory which has space reserved on the disk paging files. There can be one paging file on each logical drive). If the paging file(s) are be expanded, this limit increases accordingly.  This counter displays the last observed value only; it is not an average.
Graph|Committed Bytes|8|scalar|sample|-|-|0|NA|-1|-1|L|NA|Committed Bytes is the amount of committed virtual memory, in bytes. Committed memory is the physical memory which has space reserved on the disk paging file(s). There can be one or more paging files on each physical drive. This counter displays the last observed value only; it is not an average.
Graph|Demand Zero Faults/Sec|9|scalar|rate|-|-|0|NA|-1|-1|L|NA|Demand Zero Faults/sec is the rate at which a zeroed page is required to satisfy the fault.  Zeroed pages, pages emptied of previously stored data and filled with zeros, are a security feature of Windows that prevent processes from seeing data stored by earlier processes that used the memory space. Windows maintains a list of zeroed pages to accelerate this process. This counter shows the number of faults, without regard to the number of pages retrieved to satisfy the fault. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
Graph|Free System Page Table Entries|10|scalar|sample|-|-|0|NA|-1|-1|L|NA|Free System Page Table Entries is the number of page table entries not currently in used by the system.  This counter displays the last observed value only; it is not an average.
Graph|Page Faults/Sec|11|scalar|rate|-|-|0|NA|-1|-1|H|NA|Page Faults/sec is the average number of pages faulted per second. It is measured in number of pages faulted per second because only one page is faulted in each fault operation, hence this is also equal to the number of page fault operations. This counter includes both hard faults (those that require disk access) and soft faults (where the faulted page is found elsewhere in physical memory.) Most processors can handle large numbers of soft faults without significant consequence. However, hard faults, which require disk access, can cause significant delays.
Graph|Page Reads/Sec|12|scalar|rate|-|-|0|NA|-1|-1|L|NA|Page Reads/sec is the rate at which the disk was read to resolve hard page faults. It shows the number of reads operations, without regard to the number of pages retrieved in each operation. Hard page faults occur when a process references a page in virtual memory that is not in working set or elsewhere in physical memory, and must be retrieved from disk. This counter is a primary indicator of the kinds of faults that cause system-wide delays. It includes read operations to satisfy faults in the file system cache (usually requested by applications) and in non-cached mapped memory files. Compare the value of Memory\\Pages Reads/sec to the value of Memory\\Pages Input/sec to determine the average number of pages read during each operation.
Graph|Pages Input/Sec|13|scalar|rate|-|-|0|NA|-1|-1|L|NA|Pages Input/sec is the rate at which pages are read from disk to resolve hard page faults. Hard page faults occur when a process refers to a page in virtual memory that is not in its working set or elsewhere in physical memory, and must be retrieved from disk. When a page is faulted, the system tries to read multiple contiguous pages into memory to maximize the benefit of the read operation. Compare the value of Memory\\Pages Input/sec to the value of  Memory\\Page Reads/sec to determine the average number of pages read into memory during each read operation.
Graph|Pages Output/Sec|14|scalar|rate|-|-|0|NA|-1|-1|L|NA|Pages Output/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written back to disk only if they are changed in physical memory, so they are likely to hold data, not code. A high rate of pages output might indicate a memory shortage. Windows writes more pages back to disk to free up space when physical memory is in short supply.  This counter shows the number of pages, and can be compared to other counts of pages, without conversion.
Graph|Pages/Sec|15|scalar|rate|-|-|0|NA|-1|-1|H|NA|Pages/sec is the rate at which pages are read from or written to disk to resolve hard page faults. This counter is a primary indicator of the kinds of faults that cause system-wide delays.  It is the sum of Memory\\Pages Input/sec and Memory\\Pages Output/sec.  It is counted in numbers of pages, so it can be compared to other counts of pages, such as Memory\\Page Faults/sec, without conversion. It includes pages retrieved to satisfy faults in the file system cache (usually requested by applications) non-cached mapped memory files.
Graph|Page Writes/Sec|16|scalar|rate|-|-|0|NA|-1|-1|H|NA|Page Writes/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written to disk only if they are changed while in physical memory, so they are likely to hold data, not code.  This counter shows write operations, without regard to the number of pages written in each operation.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
Graph|Committed Bytes In Use (%)|17|scalar|sample|-|-|0|NA|-1|-1|L|NA|% Committed Bytes In Use is the ratio of Memory\\Committed Bytes to the Memory\\Commit Limit. Committed memory is the physical memory in use for which space has been reserved in the paging file should it need to be written to disk. The commit limit is determined by the size of the paging file.  If the paging file is enlarged, the commit limit increases, and the ratio is reduced). This counter displays the current percentage value only; it is not an average.
Graph|Pool Nonpaged Allocs|18|scalar|sample|-|-|0|NA|-1|-1|L|NA|Pool Nonpaged Allocs is the number of calls to allocate space in the nonpaged pool. The nonpaged pool is an area of system memory area for objects that cannot be written to disk, and must remain in physical memory as long as they are allocated.  It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.
Graph|Pool Nonpaged Bytes|19|scalar|sample|-|-|0|NA|-1|-1|L|NA|Pool Nonpaged Bytes is the size, in bytes, of the nonpaged pool, an area of system memory (physical memory used by the operating system) for objects that cannot be written to disk, but must remain in physical memory as long as they are allocated.  Memory\\Pool Nonpaged Bytes is calculated differently than Process\\Pool Nonpaged Bytes, so it might not equal Process\\Pool Nonpaged Bytes\\_Total.  This counter displays the last observed value only; it is not an average.
Graph|Pool Paged Allocs|20|scalar|sample|-|-|0|NA|-1|-1|L|NA|Pool Paged Allocs is the number of calls to allocate space in the paged pool. The paged pool is an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used. It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.
Graph|Pool Paged Bytes|21|scalar|sample|-|-|0|NA|-1|-1|L|NA|Pool Paged Bytes is the size, in bytes, of the paged pool, an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used.  Memory\\Pool Paged Bytes is calculated differently than Process\\Pool Paged Bytes, so it might not equal Process\\Pool Paged Bytes\\_Total. This counter displays the last observed value only; it is not an average.
Graph|Pool Paged Resident Bytes|22|scalar|sample|-|-|0|NA|-1|-1|L|NA|Pool Paged Resident Bytes is the current size, in bytes, of the paged pool. The paged pool is an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used. Space used by the paged and nonpaged pools are taken from physical memory, so a pool that is too large denies memory space to processes. This counter displays the last observed value only; it is not an average.
Graph|System Cache Resident Bytes|23|scalar|sample|-|-|0|NA|-1|-1|L|NA|System Cache Resident Bytes is the size, in bytes, of the pageable operating system code in the file system cache. This value includes only current physical pages and does not include any virtual memory pages not currently resident. It does equal the System Cache value shown in Task Manager. As a result, this value may be smaller than the actual amount of virtual memory in use by the file system cache. This value is a component of Memory\\System Code Resident Bytes which represents all pageable operating system code that is currently in physical memory. This counter displays the last observed value only; it is not an average.
Graph|System Code Resident Bytes|24|scalar|sample|-|-|0|NA|-1|-1|L|NA|System Code Resident Bytes is the size, in bytes of the operating system code currently in physical memory that can be written to disk when not in use. This value is a component of Memory\\System Code Total Bytes, which also includes operating system code on disk. Memory\\System Code Resident Bytes (and Memory\\System Code Total Bytes) does not include code that must remain in physical memory and cannot be written to disk. This counter displays the last observed value only; it is not an average.
Graph|System Code Total Bytes|25|scalar|sample|-|-|0|NA|-1|-1|L|NA|System Code Total Bytes is the size, in bytes, of the pageable operating system code currently in virtual memory. It is a measure of the amount of physical memory being used by the operating system that can be written to disk when not in use. This value is calculated by summing the bytes in Ntoskrnl.exe, Hal.dll, the boot drivers, and file systems loaded by Ntldr/osloader.  This counter does not include code that must remain in physical memory and cannot be written to disk. This counter displays the last observed value only; it is not an average.
Graph|System Driver Resident Bytes|26|scalar|sample|-|-|0|NA|-1|-1|L|NA|System Driver Resident Bytes is the size, in bytes, of the pageable physical memory being used by device drivers. It is the working set (physical memory area) of the drivers. This value is a component of Memory\\System Driver Total Bytes, which also includes driver memory that has been written to disk. Neither Memory\\System Driver Resident Bytes nor Memory\\System Driver Total Bytes includes memory that cannot be written to disk.
Graph|System Driver Total Bytes|27|scalar|sample|-|-|0|NA|-1|-1|L|NA|System Driver Total Bytes is the size, in bytes, of the pageable virtual memory currently being used by device drivers. Pageable memory can be written to disk when it is not being used. It includes physical memory (Memory\\System Driver Resident Bytes) and code and data paged to disk. It is a component of Memory\\System Code Total Bytes. This counter displays the last observed value only; it is not an average.
Graph|Transition Faults/Sec|28|scalar|rate|-|-|0|NA|-1|-1|L|NA|Transition Faults/sec is the rate at which page faults are resolved by recovering pages that were being used by another process sharing the page, or were on the modified page list or the standby list, or were being written to disk at the time of the page fault. The pages were recovered without additional disk activity. Transition faults are counted in numbers of faults; because only one page is faulted in each operation, it is also equal to the number of pages faulted.
Graph|Transition Pages Repurposed/Sec|29|scalar|rate|-|-|0|NA|-1|-1|L|NA|Transition Pages RePurposed is the rate at which the number of transition cache pages were reused for a different purpose.  These pages would have otherwise remained in the page cache to provide a (fast) soft fault (instead of retrieving it from backing store) in the event the page was accessed in the future.  Note these pages can contain private or sharable memory.
Graph|Write Copies/Sec|30|scalar|rate|-|-|0|NA|-1|-1|L|NA|Write Copies/sec is the rate at which page faults are caused by attempts to write that have been satisfied by coping of the page from elsewhere in physical memory. This is an economical way of sharing data since pages are only copied when they are written to; otherwise, the page is shared. This counter shows the number of copies, without regard for the number of pages copied in each operation.

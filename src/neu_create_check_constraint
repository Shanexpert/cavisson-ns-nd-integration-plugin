#! /bin/sh

BASE_DIR=""

#this function will check if constaint already exist or not.
is_constraint_present()
{
  TABLE_NAME_IN=$1
  CONST_NAME_IN=$2
  #change in lower case.
  CONST_NAME=`echo $CONST_NAME_IN | tr '[:upper:]' '[:lower:]'`
  TABLE_NAME=`echo $TABLE_NAME_IN | tr '[:upper:]' '[:lower:]'`
  #check in table schema.
  OUT=`psql --user=cavisson -d test -t -c "SELECT constraint_name from information_schema.table_constraints where constraint_name ~ '^$CONST_NAME$' and table_name ~ '^$TABLE_NAME$'"`
  if [ "X$OUT" != "X" ];then
    return 1;
  fi
  return 0;
}

Usage()
{
  echo $*
  echo "Usage: neu_nd_create_check_constraint <Test Run Number> <Partition Name> <Start Time> <End Time>"
  echo "Example:"
  echo "  neu_nd_create_check_constraint 1234 201402201000 1392877529000 1392877829000"
  exit -1
}

chk_args()
{
  if [ "X$TR_NUM" == "X" ]; then
    Usage "TR is missing"
  fi

  if [ "X$PARTITION_NAME" == "X" ]; then
    Usage "Partition Name is missing"
  fi

  #Checking if test number is numeric
  echo $TR_NUM | egrep '^[0-9]+$' >/dev/null 2>&1
  if [ "$?" -eq "1" ]; then
    Usage "Test run number is not numeric"
  fi

  #Checking Test number is valid or not
  if [ -d $PWD/TR$TR_NUM ]; then
    BASE_DIR=$PWD
  elif [ -d $NS_WDIR/logs/TR$TR_NUM ]; then
    BASE_DIR=$NS_WDIR/logs
  else
    echo "Error: Test run number $TR_NUM is not a valid test run number"
    exit -1
  fi

  if [ "X$START_TIME" == "X" -a "X$END_TIME" == "X" ]; then
    Usage "Give either Start time/End time so as to apply the check constraint."
  fi
 
  if [ "X$START_TIME" != "X" ];then
    echo $START_TIME | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" -eq "1" ]; then
      Usage "Start Time is not numeric"
    fi
  fi

  if [ "X$END_TIME" != "X" ];then
    echo $END_TIME | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" -eq "1" ]; then
      Usage "End Time is not numeric"
    fi
  fi

  if [ "X$END_TIME_COLUMN_NAME" = "X" -o "$END_TIME_COLUMN_NAME" = "-" ];then
    Usage "Give end time column name so as to apply the check constraint."
  fi
}

chk_args_of_option()
{
  if [ "X$2" == "X" ];then
    echo "Option $1 required a value."
    Usage
    exit -1
  fi
}

while [ "$1" != "" ];do
  case $1 in
    "-TR")
        shift
      chk_args_of_option "-TR" "$1"
        TR_NUM=$1;;
    "-PT")
        shift
      chk_args_of_option "-PT" "$1"
        PARTITION_NAME=$1;;
    "-ST")
        shift
      chk_args_of_option "-ST" "$1"
        START_TIME=$1;;
    "-ET")
        shift
      chk_args_of_option "-ET" "$1"
        END_TIME=$1;;
    "-TB")
        shift
      chk_args_of_option "-TB" "$1"
        CSV_TABLE_NAME=$1;;
    "-SC")                           #Not in use now
        shift
      chk_args_of_option "-SC" "$1"
        START_TIME_COLUMN_NAME=$1;;
    "-EC")
        shift
      chk_args_of_option "-EC" "$1"
        END_TIME_COLUMN_NAME=$1;;
    -*) Usage "Invalid option $1";;
    *) Usage;;
  esac
  shift
done

chk_args

PARTITION_TABLE_NAME="${CSV_TABLE_NAME}_${TR_NUM}_${PARTITION_NAME}"
START_CONSTRAINT_NAME="${PARTITION_TABLE_NAME}_check_starttime"
END_CONSTRAINT_NAME="${PARTITION_TABLE_NAME}_check_endtime"

if [ "X$START_TIME" != "X" ];then
  is_constraint_present $PARTITION_TABLE_NAME $START_CONSTRAINT_NAME
  if [ $? -eq 0 ]; then
    CHECK="CHECK ( $END_TIME_COLUMN_NAME  >= $START_TIME );"
    ADD_CONTRAINT_COMMAND="alter table $PARTITION_TABLE_NAME add constraint $START_CONSTRAINT_NAME $CHECK;"
  fi
elif [ "X$END_TIME" != "X" ];then
  is_constraint_present $PARTITION_TABLE_NAME $END_CONSTRAINT_NAME
  if [ $? -eq 0 ]; then
    CHECK="CHECK ( $END_TIME_COLUMN_NAME < $END_TIME );"
    ADD_CONTRAINT_COMMAND="$ADD_CONTRAINT_COMMAND alter table $PARTITION_TABLE_NAME add constraint $END_CONSTRAINT_NAME $CHECK;"
  fi
fi

if [ "X$ADD_CONTRAINT_COMMAND" != "X" ]; then
  echo "Adding Constraint $ADD_CONTRAINT_COMMAND"
  psql test cavisson <<+
  $ADD_CONTRAINT_COMMAND     
+
fi

exit 0 

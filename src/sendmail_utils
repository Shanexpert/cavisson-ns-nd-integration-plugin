#!/bin/bash
#
#Name:    sendmail_utils
#Author:  Gaurav
#Purpose: This shell invokes sendmail utility to send mail with or without attachments

#ATTACH_MODE - 0[disable] 1[no attachment] 2[with attachment] 3[jenkins status]
#ATTACH_TYPE - 1[pdf] 2[rtf] 3[index.html] 4[others] 5[Continuous Monitoring] 6[Custom Message]

send_mail()
{
  test_run=$1
  if [ $# -lt 8 ];then
    echo "Usage: send_mail: too few arguments" >>$D_LOGS
    return
  fi

  #if sendmail is not running, return from here
  num_mail_ps=`pgrep -c sendmail`
  if [ $num_mail_ps -eq 0 ];then
    echo "sendmail process is not running, returning" >>$D_LOGS
    return
  fi
  
  #adding NS_WDIR, ATTACH_TYPE, ATTACH_NAME
  duration=$2
  mode=$3     #mode = 0[disable] 1[no attachment] 2[with attachment] 3[jenkins status]
  _WDIR=$4
  ATTACH_TYPE=$5
  ATTACH_NAME=$6
  CTRL_URL=$7
  to_list=$8
  cc_list=$9
  bcc_list=${10}
  MESSAGE=${11}
  D_LOGS=${_WDIR}/logs/TR$test_run/ns_logs/email_report.logs
  TestCaseName=`awk -F'|' '{print $2}' $_WDIR/logs/TR$test_run/summary.top | awk -F '/' '{print $3}'`
  StartTime=`awk -F'|' '{print $3}' $_WDIR/logs/TR$test_run/summary.top`
  IP=`hostname|awk '{print $1}'`
  ControllerName=`basename $_WDIR`
  ScenarioName=`awk -F'|' '{print $2}' $_WDIR/logs/TR$test_run/summary.top|awk -F'/' '{print $3}'`
  TName=`awk -F'|' '{print $13}' $_WDIR/logs/TR$test_run/summary.top`
  MAILPART=`uuidgen` ## Generates Unique ID
  MAILPART_BODY=`uuidgen` ## Generates Unique ID
  echo "TestRun: $test_run, Duration: $duration, Mode:  $mode, Work: $_WDIR, Attach Type: $ATTACH_TYPE, Attach name: $ATTACH_NAME, URL: $CTRL_URL, To: $to_list, CC: $cc_list, BCC: $bcc_list, Msg: $MESSAGE" >>$D_LOGS
  BODY=/tmp/send_mail_${test_run}.$$

  if [ $ATTACH_TYPE -eq 1 ];then
    ATTACHMENT="${ATTACH_NAME}.pdf"
  elif [ $ATTACH_TYPE -eq 2 ];then
    ATTACHMENT="${ATTACH_NAME}.rtf"
  elif [ $ATTACH_TYPE -eq 3 ];then
    ATTACHMENT=reports/htmlReports/${ATTACH_NAME}/index.html
    mode=1
  elif [ $ATTACH_TYPE -eq 4 -o $ATTACH_TYPE -eq 5 ];then
    ATTACHMENT=${ATTACH_NAME}
  elif [ $ATTACH_TYPE -eq 6 ];then
    #ATTACH_NAME="ATTACHMENT=<filename>;TYPE=<File-Type(1/2/4)>MESSAGE=<message>"
    MESSAGE=`echo "$ATTACH_NAME" | awk -F'MESSAGE=' '{print $2}'`
    ATTACHMENT=`echo $ATTACH_NAME | awk -F'ATTACHMENT=' '{print $2}' | cut -d';' -f1`
    TYPE=`echo $ATTACH_NAME | awk -F'TYPE=' '{print $2}' | cut -d';' -f1`
  else
    echo "$(date)| Attachment type is invalid, hence exiting" >>$D_LOGS
  fi
  ATTACH="$_WDIR/logs/TR$test_run/$ATTACHMENT"
  #Jenkins testsuite status, max time = 900s
  cnt=0
  if [ "X$mode" = "X3" ];then
    while true
    do
      if [ $cnt -eq 30 ];then
        break
      fi
      if [ -f $NS_WDIR/logs/TR$test_run/TestSuiteStatus.data ];then
        echo "$(date)|Jenkins TestSuiteStatus file found" >>$TRNumDir/ns_logs/email_report.logs
        MSG=`cut -d: -f2 $NS_WDIR/logs/TR$test_run/TestSuiteStatus.data`
        MESSAGE=", Status=$MSG"
        break
      fi
      echo "$(date)|Jenkins TestSuiteStatus file not found" >>$TRNumDir/ns_logs/email_report.logs
      sleep 30
      cnt=$((cnt + 1))
    done
    mode=2
  fi
  
    (
      if [ "X$ATTACH_TYPE" = "X5" ];then
        echo "Subject: [Continuous Monitoring] Test run $test_run for scenario $ScenarioName is failed"
      else
        echo "Subject: Test run $test_run for scenario $ScenarioName is completed"
      fi
      echo ""
      echo "Team,"
      echo ""
      echo "       Following are the test details"
      echo "       TestRun number                 : $test_run"
      echo "       Machine Name/IP                : $IP"
      echo "       Controller Name                : $ControllerName"
      echo "       Scenario                       : $ScenarioName"
      echo "       Start time of test_run         : $StartTime"
      echo "       Test Duration                  : $duration"
      echo "       Test Name                      : $TName"
      if [ "X$ATTACH_TYPE" = "X5" ];then
        echo ""
        echo "       $MESSAGE"
        sed -i 's/^/       /' $ATTACH 2>/dev/null
        echo ""
        cat $ATTACH 2>/dev/null
      elif [ $ATTACH_TYPE -eq 6 -a "X$MESSAGE" != "X" ];then
	echo -e "$MESSAGE"
        echo ""
      fi
      echo ""
      echo "Regards"
      echo "Cavisson Team"
    ) >$BODY
 
  if [ $ATTACH_TYPE -eq 6 ];then
    ATTACH_TYPE=$TYPE
    MESSAGE=""
  fi
 
  if [ "X$mode" == "X2" -a ! -f $ATTACH ];then
    echo "$(date)| Attachment '$ATTACHMENT' not found, hence sending mail without attachment" >>$D_LOGS
    mode=1
  fi
  
  #mode 1 is for send mail without attachment
  if [ "X$mode" == "X1" ];then
    (
      echo "To: $to_list"
      if [ "X$cc_list" != "X" -a "X$cc_list" != "XNA" ];then
        #cc_list=$(echo $cc_list|tr ',' ' ')
        echo "Cc: $cc_list"
        if [ "X$bcc_list" != "X" -a "X$bcc_list" != "XNA" ];then
          #bcc_list=$(echo $bcc_list|tr ',' ' ')
          echo "Bcc: $bcc_list"
        fi
      fi
      cat $BODY
      echo ""
      if [ $ATTACH_TYPE -eq 3 -a -f $ATTACH ];then
        echo "$CTRL_URL/logs/TR$test_run/$ATTACHMENT"
      fi
      echo ""
    ) | /usr/sbin/sendmail -t
  #mode 2 sending with attachment, encoding via uuencode found in package 'sharutils'
  elif [ "X$mode" == "X2" ];then
    (
      echo "To: $to_list"
      if [ "X$cc_list" != "X" ];then
        #cc_list=$(echo $cc_list|sed 's/,/ -c /g') 
        echo "Cc: $cc_list"
        if [ "X$bcc_list" != "X" ];then
          #bcc_list=$(echo $bcc_list|sed 's/,/ -c /g')
          echo "Bcc: $bcc_list"
        fi
      fi
      echo "Subject: Test run $test_run for scenario $ScenarioName is completed $MESSAGE"
      echo "MIME-Version: 1.0"
      echo "Content-Type: multipart/mixed; boundary=\"$MAILPART\""
      echo ""
      echo "--$MAILPART"
      echo "Content-Type: multipart/alternative; boundary=\"$MAILPART_BODY\""
      echo ""
      echo "--$MAILPART_BODY"
      echo "Content-Type: text/plain; charset=us-ascii"
      echo "Content-Transfer-Encoding: 7bit"
      cat $BODY
      echo "--$MAILPART_BODY--"
    
      echo "--$MAILPART"
      if [ $ATTACH_TYPE -eq 1 ];then
        echo 'Content-Type: application/pdf; name="'$(basename $ATTACH)'"'
      elif [ $ATTACH_TYPE -eq 2 ];then
        echo 'Content-Type: application/rtf; name="'$(basename $ATTACH)'"'
      elif [ $ATTACH_TYPE -eq 4 ];then
        #find file extension and set Content-Type
        if [ ${ATTACH: -5} == ".html" ]; then
          echo 'Content-Type: text/html; name="'$(basename $ATTACH)'"'
        else
          echo 'Content-Type: text/plain; name="'$(basename $ATTACH)'"'
        fi
      else
        echo 'Content-Type: text/plain; name="'$(basename $ATTACH)'"'
      fi
      echo "Content-Transfer-Encoding: base64"
      echo 'Content-Disposition: attachment; filename="'$(basename $ATTACH)'"'
      echo ""
      base64 $ATTACH
      echo "--$MAILPART--"
    ) | /usr/sbin/sendmail -t
  else
    echo " For send_mail keyword mode must be <0/1/2>" >>$D_LOGS
    return
  fi

  echo "$(date)| Mail has been send to : $to_list with cc list is: $cc_list and bcc list is : $bcc_list." >>$D_LOGS
  rm $BODY
}

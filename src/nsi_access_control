#!/bin/bash

##############################################################################################
# Purpose :                                                                                  #
# Use of This tool is to create table for ACL related Project                               #
##############################################################################################

if [ "X$NS_WDIR" == "X" ];then
  echo "NS_WDIR must be set"
  exit
fi

CNTLR_NAME=`echo $NS_WDIR | cut -d '/' -f 4`

init_var()
{ 
  DB_IP="127.0.0.1"
  DB_PORT="5432"
  DB_SAAS_MODE=""
  DB_NAME="access_control"
  DB_USER="postgres"
  DB_PWD="postgres"
  DB_PASSWORD="cavisson"
  DB_USERNAME="cavisson"
}

read_saas_conf()
{
  local db_ip
  local db_port
  local db_user
  local db_password

  init_var

  DB_CONF=`cat $NS_WDIR/etc/saas.conf| grep -w "^DB_CONFIGURATION"`
  DB_SAAS_MODE=`cat $NS_WDIR/etc/saas.conf| grep -w "^SAAS_MODE" | cut -d ' ' -f 2`

  if [ "X$DB_CONF" != "X" ];then
    db_ip=`echo $DB_CONF | cut -d ' ' -f 2`
    db_port=`echo $DB_CONF | cut -d ' ' -f 3`
    db_user=`echo $DB_CONF | cut -d ' ' -f 4`
    db_password=`echo $DB_CONF | cut -d ' ' -f 5`
  fi

  if [ "X$db_ip" != "X" ];then
    DB_IP="$db_ip"
  fi

  if [ "X$db_port" != "X" ];then
    DB_PORT="$db_port"
  fi

  if [ "X$db_user" != "X" ];then
    DB_USERNAME="$db_user"
  fi

  if [ "X$db_password" != "X" ];then
    DB_PASSWORD="$db_password"
  fi

  if [ "X$DB_SAAS_MODE" == "X1" -o "X$CNTLR_NAME" == "Xwork" ];then
    DB_NAME="access_control"
  else
    DB_NAME="access_control_${CNTLR_NAME}"
  fi

  export PGPASSWORD="$DB_PWD"
}

unset_pgpassword_env()
{
  if [ "X$DB_PWD" != "X" ];then
    unset PGPASSWORD
  fi
}
show_error()
{
  echo $Error | grep "ERROR" >$NS_WDIR/.nsi_access_control_logs
  if [ $? == 0  ]; then
    echo $Error
  fi
}
checkForDb() 
{
  read_saas_conf
  
  echo "psql -U $DB_USER -h $DB_IP -p $DB_PORT -d $DB_NAME"
  echo "Going to create table for access control."
  if psql -U $DB_USER -h $DB_IP -p $DB_PORT -lqt | cut -d \| -f 1 | grep -w $DB_NAME ; then
    echo "$DB_NAME is already present in db";
  else  
    if [ "X${DB_NAME}" == "Xaccess_control" ]; then
        Error=`psql -U $DB_USER -h "$DB_IP" -p "$DB_PORT" <<-EOF
           CREATE DATABASE "$DB_NAME";
        EOF`
        echo "${DB_NAME} database created"
     else
        if psql -U $DB_USER -h $DB_IP -p $DB_PORT -lqt | cut -d \| -f 1 | grep -w "access_control" ; then
	     	Error=`psql -U $DB_USER -h "$DB_IP" -p "$DB_PORT" <<-EOF
            	SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'access_control' AND pid <> pg_backend_pid();
	    	CREATE DATABASE "$DB_NAME" with template access_control;
        	EOF`
        	echo "${DB_NAME} database created"
	else 
        	Error=`psql -U $DB_USER -h "$DB_IP" -p "$DB_PORT" <<-EOF
           	CREATE DATABASE "$DB_NAME";
        	EOF`
        	echo "${DB_NAME} database created"
	fi		
     fi
  fi
  if [ -f $NS_WDIR/webapps/sys/hibernate.cfg.xml ];then
    if [ "X$DB_SAAS_MODE" != "X" ];then
       DB_IP_PORT=`echo $DB_IP:$DB_PORT`
	   sed -ie "s|://[A-Za-z0-9.]*:[0-9]*/[A-Za-z_]*?|://$DB_IP:$DB_PORT/$DB_NAME?|g" $NS_WDIR/webapps/sys/hibernate.cfg.xml
	   sed -ie "s|connection.username\">[A-Za-z0-9.]*<|connection.username\">$DB_USERNAME<|g" $NS_WDIR/webapps/sys/hibernate.cfg.xml
	   sed -ie "s|connection.password\">[A-Za-z0-9.]*<|connection.password\">$DB_PASSWORD<|g" $NS_WDIR/webapps/sys/hibernate.cfg.xml
    else
       sed -ie "s|/[A-Za-z_]*?|/${DB_NAME}?|g" $NS_WDIR/webapps/sys/hibernate.cfg.xml
    fi
  else
      echo "file [$NS_WDIR/webapps/sys/hibernate.cfg.xml] not present" >$NS_WDIR/.nsi_access_control_logs
  fi
 }

# Including nsi_db_utils
. $NS_WDIR/bin/nsi_db_utils

checkForDb

if psql -U $DB_USER -h $DB_IP -p $DB_PORT -lqt | cut -d \| -f 1 | grep -wE "access_control|access_control_${CNTLR_NAME}" ; then
	msgout_both  "deploying access control module."
else
	msgout_both "Unable to connect to the server."
    	msgout_both  "GUI upgradation failed."
	exit 1
fi

echo "======================================================================================="
echo  "Going to start creating ACL Project Tables"
echo "======================================================================================="

Error=`psql -U "$DB_USERNAME"  -d "$DB_NAME" -h "$DB_IP" -p "$DB_PORT"  <<-EOF

TRUNCATE  component_feature CASCADE;
TRUNCATE default_features CASCADE;
TRUNCATE default_components CASCADE;

CREATE TABLE IF NOT EXISTS  default_components(cid  INT, componentname VARCHAR (255) NOT NULL);
CREATE TABLE IF NOT EXISTS default_features(fid INT, featurename VARCHAR (255) NOT NULL);
CREATE TABLE IF NOT EXISTS component_feature(cid INT, fid INT);  


/*************************Entries for default componnents ***************************/

INSERT INTO default_components (cid , componentname ) VALUES (1, 'WebDashboard');
INSERT INTO default_components (cid,  componentname ) VALUES (2, 'ProductUI');
INSERT INTO default_components (cid,  componentname ) VALUES (3, 'NDConfigUI');
INSERT INTO default_components (cid,  componentname ) VALUES (4, 'Alert');
INSERT INTO default_components (cid,  componentname ) VALUES (5, 'NetforestUI');
INSERT INTO default_components (cid,  componentname ) VALUES (6, 'AIOPS');
INSERT INTO default_components (cid,  componentname ) VALUES (7, 'NetOcean');
/*********************************end****************************************/


/************************default entries for the features **************************/

INSERT INTO default_features (fid,  featurename ) VALUES (1, 'Favorites');
INSERT INTO default_features (fid,  featurename ) VALUES (2, 'Pattern Matching');
INSERT INTO default_features (fid,  featurename ) VALUES (3, 'Configuration');
INSERT INTO default_features (fid,  featurename ) VALUES (4, 'Tree');
INSERT INTO default_features (fid,  featurename ) VALUES (5, 'AccessControl');
INSERT INTO default_features (fid,  featurename ) VALUES (6, 'MS SQL Query');
INSERT INTO default_features (fid,  featurename ) VALUES (7, 'Show Vector in Title');
INSERT INTO default_features (fid,  featurename ) VALUES (8, 'Events');
INSERT INTO default_features (fid,  featurename ) VALUES (9, 'Run Time Progress');
INSERT INTO default_features (fid,  featurename ) VALUES (10, 'Virtual User Trace');
INSERT INTO default_features (fid,  featurename ) VALUES (11, 'Stats');
INSERT INTO default_features (fid,  featurename ) VALUES (12, 'Logs');
INSERT INTO default_features (fid,  featurename ) VALUES (13, 'Graph Tree');
INSERT INTO default_features (fid,  featurename ) VALUES (14, 'Compare');
INSERT INTO default_features (fid,  featurename ) VALUES (15, 'Derived Graph');
INSERT INTO default_features (fid,  featurename ) VALUES (16, 'Color Management');
INSERT INTO default_features (fid,  featurename ) VALUES (17, 'Diagnostics');
INSERT INTO default_features (fid,  featurename ) VALUES (18, 'Import data from Access Log file');
INSERT INTO default_features (fid,  featurename ) VALUES (19, 'Sync Point(s)');
INSERT INTO default_features (fid,  featurename ) VALUES (20, 'Update Favorite');
INSERT INTO default_features (fid,  featurename ) VALUES (21, 'Save Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (22, 'Add New Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (23, 'Add Widget');
INSERT INTO default_features (fid,  featurename ) VALUES (24, 'Layout Selection');
INSERT INTO default_features (fid,  featurename ) VALUES (25, 'Widget Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (26, 'Show Graph Data');
INSERT INTO default_features (fid,  featurename ) VALUES (27, 'Add to custom metrices');
INSERT INTO default_features (fid,  featurename ) VALUES (28, 'Show Graph In Tree');
INSERT INTO default_features (fid,  featurename ) VALUES (29, 'Run Command');
INSERT INTO default_features (fid,  featurename ) VALUES (30, 'Download As');
INSERT INTO default_features (fid,  featurename ) VALUES (31, 'Organize Favorites');
INSERT INTO default_features (fid,  featurename ) VALUES (32, 'Add Favorite');
INSERT INTO default_features (fid,  featurename ) VALUES (33, 'Transactions');
INSERT INTO default_features (fid,  featurename ) VALUES (34, 'Reports');
INSERT INTO default_features (fid,  featurename ) VALUES (35, 'Time Period');
INSERT INTO default_features (fid,  featurename ) VALUES (36, 'Application');
INSERT INTO default_features (fid,  featurename ) VALUES (37, 'Profile');
INSERT INTO default_features (fid,  featurename ) VALUES (38, 'Topology');
INSERT INTO default_features (fid,  featurename ) VALUES (39, 'InstrumentationProfileMaker');
INSERT INTO default_features (fid,  featurename ) VALUES (40, 'AutoDiscover');
INSERT INTO default_features (fid,  featurename ) VALUES (41, 'Active Alert');
INSERT INTO default_features (fid,  featurename ) VALUES (42, 'Alert History');
INSERT INTO default_features (fid,  featurename ) VALUES (43, 'Alert Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (44, 'Alert Maintenance Window');
INSERT INTO default_features (fid,  featurename ) VALUES (45, 'Domain Admin');
INSERT INTO default_features (fid,  featurename ) VALUES (46, 'Email/SMS Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (47, 'Start/Stop Test');
INSERT INTO default_features (fid,  featurename ) VALUES (48, 'Pause/Resume Test');
INSERT INTO default_features (fid,  featurename ) VALUES (49, 'Show AuditLog For All');
INSERT INTO default_features (fid,  featurename ) VALUES (50, 'Alert Rule');
INSERT INTO default_features (fid,  featurename ) VALUES (51, 'Modify Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (52, 'Delete Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (53, 'AdminConfigurationNrestart');
INSERT INTO default_features (fid,  featurename ) VALUES (54, 'Alert Baseline');
INSERT INTO default_features (fid,  featurename ) VALUES (55, 'Alert Actions');
INSERT INTO default_features (fid,  featurename ) VALUES (56, 'Alert Policy');
INSERT INTO default_features (fid,  featurename ) VALUES (57, 'Net Cloud Server Management');
INSERT INTO default_features (fid,  featurename ) VALUES (58, 'RunTime Changes');
INSERT INTO default_features (fid,  featurename ) VALUES (59, 'Searches');
INSERT INTO default_features (fid,  featurename ) VALUES (60, 'Visualizations');
INSERT INTO default_features (fid,  featurename ) VALUES (61, 'Dashboards');
INSERT INTO default_features (fid,  featurename ) VALUES (62, 'Reports');
INSERT INTO default_features (fid,  featurename ) VALUES (63, 'AdminAccess');
INSERT INTO default_features (fid,  featurename ) VALUES (64, 'IndexPatterns');
INSERT INTO default_features (fid,  featurename ) VALUES (65, 'Git Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (66, 'Alert Action History');
INSERT INTO default_features (fid,  featurename ) VALUES (67, 'NetHavoc');
INSERT INTO default_features (fid,  featurename ) VALUES (68, 'Monitor');
INSERT INTO default_features (fid,  featurename ) VALUES (69, 'Multi-Node Configuration');
INSERT INTO default_features (fid,  featurename ) VALUES (70, 'NDE Services');
INSERT INTO default_features (fid,  featurename ) VALUES (71, 'Infrastructure View');
INSERT INTO default_features (fid,  featurename ) VALUES (72, 'Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (73, 'Incident Management');
INSERT INTO default_features (fid,  featurename ) VALUES (74, 'Correlation Matrix');
INSERT INTO default_features (fid,  featurename ) VALUES (75, 'Automation');
INSERT INTO default_features (fid,  featurename ) VALUES (76, 'Scheduler');
INSERT INTO default_features (fid,  featurename ) VALUES (77, 'Manage Services');
INSERT INTO default_features (fid,  featurename ) VALUES (78, 'Add Services');
INSERT INTO default_features (fid,  featurename ) VALUES (79, 'Record Services');
INSERT INTO default_features (fid,  featurename ) VALUES (80, 'Request Trace');
INSERT INTO default_features (fid,  featurename ) VALUES (81, 'JMS Message');
INSERT INTO default_features (fid,  featurename ) VALUES (82, 'Configuration');
INSERT INTO default_features (fid,  featurename ) VALUES (83, 'SSL Management');
INSERT INTO default_features (fid,  featurename ) VALUES (84, 'Reactive Replay');
INSERT INTO default_features (fid,  featurename ) VALUES (85, 'Data Source');
INSERT INTO default_features (fid,  featurename ) VALUES (86, 'Performance Tool');
INSERT INTO default_features (fid,  featurename ) VALUES (87, 'dashboards');

/********************************end*****************************************/

/***********************default entries for comp vs features************************/

INSERT INTO  component_feature(cid , fid) VALUES (1 ,1);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,2);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,3);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,4);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,5);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,6);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,7);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,8);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,9);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,10);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,11);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,12);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,13);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,14);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,15);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,16);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,17);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,18);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,19);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,20);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,21);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,22);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,23);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,24);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,25);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,26);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,27);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,28);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,29);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,30);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,31);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,32);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,33);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,34);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,35);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,36);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,37);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,38);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,39);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,40);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,41);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,42);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,43);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,44);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,50);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,54);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,55);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,56);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,66);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,45);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,46);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,47);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,48);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,49);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,51);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,52);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,53);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,57);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,58);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,59);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,60);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,61);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,62);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,63);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,64);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,65);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,67);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,68);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,69);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,70);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,71);
INSERT INTO  component_feature(cid , fid) VALUES (6 ,72);
INSERT INTO  component_feature(cid , fid) VALUES (6 ,73);
INSERT INTO  component_feature(cid , fid) VALUES (6 ,74);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,75);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,76);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,77);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,78);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,79);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,80);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,81);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,82);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,83);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,84);
INSERT INTO  component_feature(cid , fid) VALUES (7 ,85);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,86);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,87);
/*******************************end*****************************************/

EOF`

show_error
unset_pgpassword_env

#!/bin/bash
OPERATION=$1
MODE="non-debug"
CAVGEN_PIDFILE=$NS_WDIR/.tmp/.cavgen.pid
G_CAVGEN_PID=""
CAVGEN_BIN=""
msg()
{
  echo "$1"
  #exit
}

get_cavgen_pid()
{
  if [ -f $CAVGEN_PIDFILE ]; then
    PID=`cat $CAVGEN_PIDFILE`
    if [ "XX$PID" != "XX" ];then
      ps -o cmd= -p $PID|grep nsu_cavgen > /dev/null
      if [ "$?" -eq 0 ]; then
        if [ "XX$1" != "XX" ];then 
          #CAVGEN_PID=`pstree -lap $PID|eval "grep -v grep|grep -w $1"|cut -d"," -f2|cut -d" " -f 1`
          G_CAVGEN_PID=`pstree -lap $PID|eval "grep -v grep|grep -w $1"|cut -d"," -f2|cut -d" " -f 1`
        else         
          #CAVGEN_PID=`pstree -lap $PID|cut -d"," -f2|cut -d" " -f 1`
          G_CAVGEN_PID=`pstree -lap $PID|cut -d"," -f2|cut -d" " -f 1`
        fi
      else
       msg "PID $PID doesn't match with binary"
      fi
    else
     msg "$CAVGEN_PIDFILE" " is Empty!!!"
    fi
  else
   msg "$CAVGEN_PIDFILE" " is not available!!!"
  fi
  #msg "$CAVGEN_PID" 
  #msg "$G_CAVGEN_PID" 
}

get_cavgen_mode()
{
  #local CAVGEN_PID=`get_cavgen_pid "cavgen.debug"`
  get_cavgen_pid "cavgen.debug"
  #msg "get_cavgen_mode CAVGEN_PID = $G_CAVGEN_PID"
  #if [ "XX$CAVGEN_PID" != "XX" ]; then
  if [ "XX$G_CAVGEN_PID" != "XX" ]; then
    echo "debug"
  else
    echo "non-debug"
  fi
}

start_cavgen_mon()
{
  #echo "In start_cavgen_mon"
  if [ "$MODE" == "debug" ]; then
    CAVGEN_BIN="cavgen.debug"
  else
    CAVGEN_BIN="cavgen"
  fi
  cd $NS_WDIR
  BIN_PATH=$NS_WDIR/bin/$CAVGEN_BIN
  #echo "BIN_PATH= " "$BIN_PATH"
  while :
  do
    #local CAVGEN_PID=`get_cavgen_pid "$CAVGEN_BIN"`
    get_cavgen_pid $CAVGEN_BIN
    #echo "G_CAVGEN_PID = " "$G_CAVGEN_PID"
    #if [ "XX$CAVGEN_PID" == "XX" ]; then
    if [ "XX$G_CAVGEN_PID" == "XX" ]; then
      #./${CAVGEN_BIN}
      nohup $BIN_PATH >/dev/null 2>&1 &
    fi
    sleep 60
  done
}

start_func()
{
  #local CAVGEN_PID=`get_cavgen_pid`
  #if [ "XX${CAVGEN_PID}" != "XX" ]; then
  get_cavgen_pid
  if [ "XX${G_CAVGEN_PID}" != "XX" ]; then
    msg "cavgen is already running"
    exit
  fi
  #start_cavgen_mon & 
  start_cavgen_mon >/dev/null 2>&1 & 
  echo $! > $CAVGEN_PIDFILE
  msg "cavgen started successfully"
}

stop_func()
{
  #local CAVGEN_PID=`get_cavgen_pid`
  get_cavgen_pid
  #if [ "XX${CAVGEN_PID}" == "XX" ]; then
  if [ "XX${G_CAVGEN_PID}" == "XX" ]; then
    msg "cavgen is not running"
    exit
  fi
  #kill -9 $CAVGEN_PID
  kill -9 $G_CAVGEN_PID
  rm $CAVGEN_PIDFILE
  msg "cavgen stopped successfully"
}

restart_func()
{ 
   
  #local CAVGEN_PID=`get_cavgen_pid`
  get_cavgen_pid
  #if [ "XX${CAVGEN_PID}" != "XX" ]; then
  if [ "XX${G_CAVGEN_PID}" != "XX" ]; then
    MODE=`get_cavgen_mode`
    #kill -9 $CAVGEN_PID
    kill -9 $G_CAVGEN_PID
  fi
  start_cavgen_mon &  
  echo $! > $CAVGEN_PIDFILE
  msg "cavgen restarted successfully"
}

status_func()
{
  #local CAVGEN_PID=`get_cavgen_pid`
  get_cavgen_pid 
  #if [ "XX${CAVGEN_PID}" == "XX" ]; then
  if [ "XX${G_CAVGEN_PID}" == "XX" ]; then
    msg "cavgen is not running"
  fi
  msg "cavgen is running"
}


function Usage()
{
  echo "Usage: nsu_cavgen {start|stop|restart|status|debug}" >&2
  echo "Where:"
  echo "  start            : To start CavGen service"
  echo "  stop             : To stop CavGen service"
  echo "  restart          : To stop and then start CavGen service"
  echo "  status           : To show CavGen service current status"
  echo "  debug            : To start CavGen service in debug mode"
  exit 1
}

##################################################################


case "$OPERATION" in
  "start") 
    start_func 
  ;;
  "stop")  
    stop_func 
  ;;
  "restart") 
    restart_func
  ;;
  "debug")
    MODE="debug" 
    start_func 
  ;;
  "status") 
    status_func
  ;;

  *)
    Usage
  ;;


esac

#! /bin/sh

BASE_DIR=""
#CSV_ARRAY="hat.csv  hrt.csv  pgt.csv  prc.csv  rpf.csv  spf.csv  src.csv  sst.csv  tcf.csv  trc.csv  trt.csv  upf.csv  urc.csv  urt.csv"
#MISSING_FILE=""
#LC_FLAG=0



#Do not delete the comments below, if any changes are made to table structure change the corresponding table structure here 
# >>>>> and in ndu_create_table file also

#actualservertable_TRNUM|testindex|servergroup|servername|serverport|serverlocation
#errorcodes_TRNUM|objecttype|errorcode|errorname
#logphasetable_TRNUM|phaseindex|groupname|phasetype|phasename
#pagerecord_TRNUM|testindex|pageindex|sessionindex|sessioninstance|transactionindex|childindex|txinstance|pageinstance|starttime|endtime|status|resptime|phaseindex|generatorid
#pagetable_TRNUM|testindex|pageindex|sessionindex|pagename
#recordedservertable_TRNUM|testindex|servergroup|serverindex|servername|serverport|selectionagenda|servertype
#runprofile_TRNUM|testindex|groupnum|userprofileindex|sessionprofileindex|pct
#sessionprofile_TRNUM|testindex|sessionprofileindex|sessionindex|pct|sessionprofilename
#sessionrecord_TRNUM|testindex|sessionindex|sessioninstance|userindex|runprofileindex|childindex|isrunphase|access|location|browser|freindex|machineindex|starttime|endtime|thinkduration|status|resptime|phaseindex|generatorid
#sessiontable_TRNUM|testindex|sessionindex|sessionname
#transactionrecord_TRNUM|testindex|transactionindex|sessionindex|sessioninstance|childindex|txinstance|starttime|endtime|thinkduration|status|resptime|phaseindex|generatorid
#transpagerecord_TRNUM|testindex|transactionindex|sessionindex|sessioninstance|childindex|txinstance|pageinstance|starttime|endtime|status|resptime|phaseindex|generatorid
#transactiontable_TRNUM|testindex|transactionindex|transactionname
#urlrecord_TRNUM|testindex|urlindex|sessionindex|sessioninstance|transactionindex|pageindex|childindex|txinstance|pageinstance|fetchedfrom|httsreqreused|conreused|urltype|starttime|dnsduration|connectduration|sslhandshakeduration|writecompleteduration|firstbytercdduration|requestcompleteduration|renderingduration|endtime|httpresponsecode|httppayloadbytessent|appbytessent|ethbytessent|httppayloadbytesrcd|appbytesrcd|ethbytesrcd|completionmode|status|connectionnumber|connectiontype|retries|flowpathinstance|resptime|phaseindex|generatorid
#urltable_TRNUM|testindex|urlindex|pageindex|urlname
#userprofile_TRNUM|testindex|userprofileindex|userprofilename|uptype|valueindex|pct|value
#generatortable_TRNUM|generatorname|generatorid|wdir|hostname|resolvedip|cmonport


function Usage()
{
  echo $*
  #echo "Usage: nsu_create_table <Test Run Number>"
  echo "Usage: nsu_create_table <Test Run Number>"
  echo "Example:"
  echo "  nsu_create_table 1234"
  exit -1
}

if [ $# -ne 1 ]; then
  Usage "Test run number argument is missing"
fi

#Checking if test number is numeric
echo $1 | egrep '^[0-9]+$' >/dev/null 2>&1
if [ "$?" -eq "1" ]; then
  Usage "Test run number is not numeric"
fi

#Checking Test number is valid or not
if [ -d $PWD/TR$1 ]; then
  BASE_DIR=$PWD
elif [ -d $NS_WDIR/logs/TR$1 ]; then
  BASE_DIR=$NS_WDIR/logs
else
  echo "Error: Test run number $1 is not a valid test run number"
  exit -1
fi

#count the total lines in csv files
#for csv in $CSV_ARRAY
#do	
#  if [ -f $BASE_DIR/TR$1/$csv  ]; then
#    LC=`wc -l $BASE_DIR/TR$1/$csv|awk '{print $1}'`
#    echo "Total lines in file $csv = $LC."
#  else 
#    MISSING_FILE=$csv
#    echo "Error: $MISSING_FILE file not found in the test run directory."
#  fi 
#done
#if [ "X$MISSING_FILE" != "X" ]; then
#  echo "Exiting because one or more csv file(s) not found in the test run directory."
#  exit -1 
#fi

#drop table NSPhase_$1;
#echo "Deleting existing tables and indexes, if any present and creating tables and indexes ..."
echo 
echo "nsu_create_table: Deleting existing indexes ..."
. nsu_drop_index $1
echo "nsu_create_table: ... Done deleting indexes."
echo
echo "nsu_create_table: Dropping existing tables and creating afresh for this test run ..."

nsu_drop_table $1
psql test cavisson <<+

create table PageDumpRecord_$1 (
   TestIndex int,
   StartTime bigint,
   EndTime bigint,
   Duration int,
   GeneratorId int,
   NvmId smallint,
   UserIndex int,
   SessionInstance int,
   PageIndex int,
   PageInstance smallint,
   PageStatus smallint,
   PageRespTime int,
   GroupNum  int,
   SessionIndex int,
   Partition bigint,
   TraceLevel smallint,
   ChildIdx smallint,
   DummyInt int,
   TxName TEXT,
   FetchedParams TEXT,
   FlowName VARCHAR(255),
   LogFileNameSfx VARCHAR(255),
   RespBodyOrigName VARCHAR(255),
   Parameters TEXT
);

create table RunProfile_$1 (
	TestIndex int,
	--RunProfileIndex smallint,
	--RunProfileIndex int,
	GroupNum int,
	--RunProfileName VARCHAR(128),
	--UserProfileIndex smallint,
	UserProfileIndex int,
	--SessionProfileIndex smallint,
	SessionProfileIndex int,
	Pct smallint,
	GroupName VARCHAR(512)
);

create table UserProfile_$1 (
	TestIndex int,
	--UserProfileIndex smallint,
	UserProfileIndex int,
	UserProfileName VARCHAR(128),
	UpType VARCHAR(32),
	--ValueIndex smallint,
	ValueIndex int,
	Pct smallint,
	Value VARCHAR (128)
);


create table SessionProfile_$1 (
	TestIndex int,
	--SessionProfileIndex smallint,
	SessionProfileIndex int,
	--SessionIndex smallint,
	SessionIndex int,
	Pct smallint,
	SessionProfileName VARCHAR(128)
);

create table SessionTable_$1 (
	TestIndex int,
	--SessionIndex smallint,
	SessionIndex int,
	SessionName VARCHAR(256)
);

create table PageTable_$1 (
	TestIndex int,
	PageIndex int,
	--SessionIndex smallint,
	SessionIndex int,
	--TransactionIndex smallint,
	--TransactionIndex int,
	PageName VARCHAR(4096),
        SessionPageNameLen int,
        SessionPageName VARCHAR(8192)
);

create table TransactionTable_$1 (
	TestIndex int,
	--TransactionIndex smallint,
	TransactionIndex int,
	TransactionName VARCHAR(256)
);
	
create table URLTable_$1 (
	TestIndex int,
	UrlIndex int,
	PageIndex int,
        HashID int,
        HashCode bigint,
        Len int,
	UrlName VARCHAR(4096),
        PageURLNameLen int,
        PageURLName VARCHAR(8192)
);

create table RecordedServerTable_$1 (
	TestIndex int,
	ServerGroup int,
	ServerIndex int,
	ServerName VARCHAR(128),
	ServerPort int,
	SelectionAgenda bool,
	ServerType smallint
);

create table ActualServerTable_$1 (
	TestIndex int,
	ServerGroup int,
	ServerName VARCHAR(128),
	ServerPort int,
	ServerLocation VARCHAR(128)
);

create table SessionRecord_$1 (
	TestIndex int,
	--SessionIndex smallint,
	SessionIndex int,
	SessionInstance int,	
	UserIndex int,	
	--RunProfileIndex smallint,
	RunProfileIndex int,    --This is actually the scenario group index
	ChildIndex int,
	isRunPhase bool,
	--AccessIndex smallint,
	--AccessIndex int,
	Access VARCHAR(64),
	--LocationIndex smallint,
	--Location int,
	Location VARCHAR(64),
	--BrowserIndex smallint,
	--BrowserIndex int,
        Browser VARCHAR(64),
	--FreIndex smallint,
	FreIndex int,
	--MachineIndex smallint,
	MachineIndex int,
	StartTime bigint,
	EndTime bigint,
	ThinkDuration int,
	Status smallint,
        RespTime int,
	PhaseIndex int,
        GeneratorId int
);

create table TransactionRecord_$1 (
	TestIndex int,
	TransactionIndex int,
	SessionIndex int,
	SessionInstance int,	
	ChildIndex int,
	TxInstance smallint,
	StartTime bigint,
	EndTime bigint,
	ThinkDuration int,
	Status smallint,
        RespTime int,
	PhaseIndex int,
        GeneratorId int
);
	
create table TransPageRecord_$1 (
        TestIndex int,
	TransactionIndex int,
	SessionIndex int,
	SessionInstance int,
 	ChildIndex int,
	TxInstance smallint,
	PageInstance smallint,
        StartTime bigint,
        EndTime bigint,
        Status smallint,
        RespTime int,
        PhaseIndex int,
        GeneratorId int
);
	
create table PageRecord_$1 (
	TestIndex int,
	--PageIndex smallint,
	PageIndex int,
	--SessionIndex smallint,
	SessionIndex int,
	SessionInstance int,	
	--TransactionIndex smallint,
	TransactionIndex int,
	ChildIndex int,
	TxInstance smallint,
	PageInstance smallint,
	StartTime bigint,
	EndTime bigint,
	Status smallint,
	RespTime int,
	PhaseIndex int,
        GeneratorId int
);
	
create table URLRecord_$1 (
	--TestIndex int,
	X_dynatrace_hdr text,
	UrlIndex int,
	SessionIndex int,
	SessionInstance int,	
	TransactionIndex int,
	PageIndex int,
	ChildIndex int,
	TxInstance smallint,
	PageInstance smallint,
	FetchedFrom smallint,
	HTTSReqReused bool,
	ConReused bool,
	UrlType smallint,
	StartTime bigint,
	DnsDuration int,
	ConnectDuration int,
	SSLHandshakeDuration int,
	WriteCompleteDuration int,
	FirstByteRcdDuration int,
	RequestCompleteDuration int,
	RenderingDuration int,
	EndTime bigint,
	HttpResponseCode smallint,
	HttpPayloadBytesSent int,
	AppBytesSent int,
	EthBytesSent int,
	HttpPayloadBytesRcd int,
	AppBytesRcd int,
	EthBytesRcd int,
	CompletionMode smallint,
	Status smallint,
	ConnectionNumber int,
	ConnectionType smallint,
	Retries smallint,
        FlowPathInstance bigint,
        RespTime int,
	PhaseIndex int,
        GeneratorId int
);

create table ErrorCodes_$1 (
        ObjectType int,
        ErrorCode int,
        ErrorName VARCHAR(256)
);

create table LogPhaseTable_$1 (
	PhaseIndex int,
	GroupName VARCHAR(64),
	Phasetype int,
	PhaseName VARCHAR(256)
);

create table GeneratorTable_$1 (
	GeneratorName varchar(256),
	GeneratorID int,
        WDIR varchar (256),
        HostName varchar(256),
        ResolvedIP varchar(16),
        CMONPort smallint
);

create table AlertHistory_$1 (
        Key            bigint, 
        Timestamp      bigint,
        Severity       smallint,
        PrevSeverity   smallint,
        Type           smallint,
        Status         smallint,
        State          smallint,
        RuleName       varchar(64),
        RuleId         smallint,
        AlertType      smallint,
        AlertValue     double precision,
        ThresholdValue double precision,
        AlertMessage   varchar(128),
        Tier           text, 
        Server         text, 
        Instance       text,
        ActionFlag     integer,
        Transaction    varchar(64),
        TimeWindow     int,
        Duration       int,  
        Baseline       varchar(64)
);

create table AlertActions_$1 (
        Key         bigint,
        Timestamp   bigint,
        Type        smallint,
        Policy      text,
        Summary     varchar(128)
);

+

TR_DIR_PATH=$NS_WDIR/logs/TR$1
#READER_RUN_MODE=`grep "READER_RUN_MODE" $TR_DIR_PATH/sorted_scenario.conf | cut -d' ' -f2`
#if [ $READER_RUN_MODE -eq 0 ];then
if [ -f $TR_DIR_PATH/.oracle_sql_report ];then
  nsu_orl_create_table $1 
elif [ -f $TR_DIR_PATH/common_files/.oracle_sql_report ];then
  nsu_orl_create_table $1
fi
#fi

echo "nsu_create_table: ... Done dropping and creating tables."

#!/bin/sh
#This Script is used to check the Connectivity for Ip and Gateway
# This script will show the client IP ranges which are not ping with the server IP ranges.
#Usage:
#   nsi_test_ip
#Author: Achint/Sanjay/Neeraj
    
#OUTPUT:
#    Client-Start-Ip|Client-Gateway|Server-Start-Ip|Server-Gateway|CGWStatus|SSIPStatus|SGWStatus   
#      3.1.1.1|3.1.1.1|1.1.1.1|1.1.1.1|1|1|1
#      4.2.2.2|4.2.2.2|0.0.0.0|4.2.2.2|0|0|1
#      5.3.3.3|5.3.3.3|3.3.3.3|5.3.3.3|0|0|1
#      6.4.4.4|6.4.4.4|0.0.0.0|6.4.4.4|1|0|1
#      12.1.1.1|12.1.1.1|12.1.1.1|12.1.1.1|1|1|0


if [ "XX" == "XX$NS_WDIR" ];then
  echo "NS_WDIR is not set."
  exit 1  
fi

#this is used to get NO admin ip
. $NS_WDIR/bin/ts_ip_lib

#ip entries file is now no longer Controller specific. Hence changing it to /home/cavisson/work
IP_ENTRIES=/home/cavisson/work/sys/ip_entries
TEMP_C_IP_ENTRIES=/tmp/c_tmp.ip_entries.$$
TEMP_S_IP_ENTRIES=/tmp/s_tmp.ip_entries.$$
>$TEMP_C_IP_ENTRIES
>$TEMP_S_IP_ENTRIES

test_ip ()
{
  cip=$1
  client_gateway=$2
  sip=$3
  server_gateway=$4
  cnid=$5
  snid=$6

  PING="ping -c 1 -W 1 -I "
  sstatus=0
  
  #check for client gateway
  if [ $client_gateway != '-' -a $client_gateway != '0.0.0.0' ];then
    $PING $cip $client_gateway 1>/dev/null 2>&1
    cgw_status=$?
  else
    cgw_status=0
  fi
 
  #check for server gateway
  if [ $server_gateway != '-' -a $server_gateway != '0.0.0.0' ];then
    NO_admin_ip=`get_NO_admin_ip` 
    if [ "XX$NO_admin_ip" == "XX" ];then
      echo "NetOcean Admin ip not found."
      exit 1
    fi 
    ssh $NO_admin_ip $PING $sip $server_gateway 1>/dev/null 2>&1
    sgw_status=$?
  else
    sgw_status=0
  fi
  
  #check for netid
  if [ \( $client_gateway != '-' -a $client_gateway != '0.0.0.0' \) -o  \( $cnid == $snid \) ];then
    $PING $cip $sip 1>/dev/null 2>&1
    sstatus=$? 
  else
    sstatus=0
  fi
  if [ $sstatus -ne 0 -o $sgw_status -ne 0 -o $cgw_status -ne 0 ];then
    echo "$cip|$client_gateway|$sip|$server_gateway|$cgw_status|$sstatus|$sgw_status"
  fi
}

#Reading IP Entries File
while read line
do
  #Extracting the Entity from IP Entries file and put the different entity lines in seperate files.
  ENTITY=`echo $line | cut -d "|" -f1`
  if [ $ENTITY == C ]; then
    #Write Client entries in seprate temprary file
    echo "$line" >> $TEMP_C_IP_ENTRIES
  else
    #Write Server entries in seprate temprary file
    echo "$line" >> $TEMP_S_IP_ENTRIES
  fi
done < $IP_ENTRIES

#echo header 
echo "Client-Start-Ip|Client-Gateway|Server-Start-Ip|Server-Gateway|CGWStatus|SSIPStatus|SGWStatus"


while read line
do
 #Extracting the Start IP Gateway .
  C_START_IP=`echo $line | cut -d "|" -f4`
  C_GATEWAY=`echo $line | cut -d "|" -f8`
  C_NETID=`echo $line | cut -d "|" -f2`
  while read var
  do
    S_START_IP=`echo $var | cut -d "|" -f4`
    S_GATEWAY=`echo $var | cut -d "|" -f8`
    S_NETID=`echo $line | cut -d "|" -f2`

    #Call test_ip function to test the connectivity between Client and Server IPs.
    test_ip $C_START_IP $C_GATEWAY $S_START_IP $S_GATEWAY $C_NETID $S_NETID
  done <$TEMP_S_IP_ENTRIES
done < $TEMP_C_IP_ENTRIES

rm -f $TEMP_S_IP_ENTRIES
rm -f $TEMP_C_IP_ENTRIES
exit 0

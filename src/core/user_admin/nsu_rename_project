#!/bin/sh

#----------------------------------------------------------------------
# Name    :    nsu_rename_project
# Author  :    ArunN
# Note    :    This command only can run by root
#              From GUI, admin user will run this command using Bean which runs as root
# Purpose :    This command will rename project/sub-project in scenarios and scripts directories
# Usage   :    nsu_rename_project -o <Project/Subproject> -n <Project/Subproject> -w <workspace>/<profile> 
# Modification History:
#   02/16/09:  ArunN - Initial Version
#   02/20/09:  Archana -  
#   02/27/09:  Archana - Ristrict renaming project or subproject as 'All' and 'default'
#----------------------------------------------------------------------

. $NS_WDIR/bin/ns_user_admin_lib

WORK_SPACE="admin"
PROFILE="default"

#To check uid call check_root_uid
#check_root_uid "nsu_rename_project"


# This method is to check if specified <project/sub-project> is already exist 
# in scenarios or scripts directory then give error and not add this project/sub-project
# Otherwise add this project/sub-project in scenarios and scripts directory
# Since this nsu_rename_project command running by root, So changing owner/group to netstorm/netstorm"
# And change mod as 775
update_user_default_projects()
{
  TMP_PROJ_FILE="/tmp/user_defualtt_projects.$$"
  cp $USER_DEFAULT_PROJECTS $TMP_PROJ_FILE 
  if [ "XX$NEW_SUB_PROJECT" == "XX" ];then
   cat $USER_DEFAULT_PROJECTS | awk -v new_proj=${NEW_PROJECT} -v old_proj=${OLD_PROJECT} -F"|" '{if(match($2, old_proj)) print $1"|"new_proj"|"$3 ; else print $0}' >$TMP_PROJ_FILE
  else
   eval "sed -e 's/\<$OLD_PROJECT|$OLD_SUB_PROJECT\>/$NEW_PROJECT|$NEW_SUB_PROJECT/g' $USER_DEFAULT_PROJECTS" >$TMP_PROJ_FILE
  fi
  mv $TMP_PROJ_FILE $USER_DEFAULT_PROJECTS
}

#'All' and 'default' project or subproject can not be use as new project or subproject.
check_if_All_default_project()
{
  if [ "XX$NEW_PROJECT" == "XXAll" -o "XX$NEW_SUB_PROJECT" == "XXAll" -o "XX$NEW_PROJECT" == "XXdefault" -o "XX$NEW_SUB_PROJECT" == "XXdefault" -o "XX$OLD_PROJECT" == "XXdefault" -o "XX$OLD_SUB_PROJECT" == "XXdefault" ];then
    if [ "XX$NEW_SUB_PROJECT" != "XX" ];then
      err_msgout "Error: 'default and All' is a reserved project name. So Project '$OLD_PROJECT/$OLD_SUB_PROJECT' cannot be renamed."
    else
      err_msgout "Error: 'default and All' is a reserved project name. So Project '$OLD_PROJECT' cannot be renamed."
    fi
    exit -1
  fi
}

check_and_rename_proj_subproj()
{
#Check old project exist or not
  if [ "XX$OLD_SUB_PROJECT" != "XX" ];then
    if [ \( ! -d "$NS_TA_DIR/$OLD_PROJECT/$OLD_SUB_PROJECT" \) ];then
      echo "Either '$OLD_SUB_PROJECT' or any of the Test Assets, does not exist in $NS_TA_DIR/$OLD_PROJECT directory"
      return 1
    fi
  else
    if [ ! -d $"$NS_TA_DIR/$OLD_PROJECT" ];then
      echo "This '$OLD_PROJECT' does not exist in $NS_TA_DIR directory"
      return 1
    fi
  fi

#Check new project exist or not, if not exist then rename
  if [ "XX$NEW_SUB_PROJECT" != "XX" ];then
    if [ -d $NS_TA_DIR/$NEW_PROJECT/$NEW_SUB_PROJECT ];then
      echo "This '$NEW_SUB_PROJECT' already exist in $NS_TA_DIR/$NEW_PROJECT directory"
      return 1
    fi
  fi
  if [ "XX$NEW_PROJECT" != "XX$OLD_PROJECT" ];then
    mv $NS_TA_DIR/$OLD_PROJECT $NS_TA_DIR/$NEW_PROJECT
    OLD_PROJECT=$NEW_PROJECT
    update_user_default_projects
    echo "Project '$OLD_PROJECT' has been successfully renamed as '$NEW_PROJECT'"
  fi
  if [ "XX$NEW_SUB_PROJECT" != "XX" -a "XX$NEW_SUB_PROJECT" != "XX$OLD_SUB_PROJECT" ];then
    mv $NS_TA_DIR/$OLD_PROJECT/$OLD_SUB_PROJECT $NS_TA_DIR/$OLD_PROJECT/$NEW_SUB_PROJECT
    update_user_default_projects
    echo "Project '$OLD_PROJECT/$OLD_SUB_PROJECT' has been successfully renamed as '$NEW_PROJECT/$NEW_SUB_PROJECT'"
  fi
}

display_help_and_exit()
{
  err_msgout "Usage: nsu_rename_project -o <Project/Subproject> -n <Project/Subproject> -w <workspace>/<profile>"
  err_msgout "Where:"
  err_msgout "  -o is used to specify 'Old Project' or 'Old Project/Old Subproject' Name"
  err_msgout "  -n is used to specify 'New Project' or 'Old Project/New Subproject' Name"
  err_msgout "  -w is used to specify 'workspace/profile' where Old 'Project/Old Subproject' are palced, default workspace/profile will be used if the option is not provided"
  exit 1
}

OFLAG=0
NFLAG=0
WFLAG=0
check_mandatory_options()
{
   OLD_PROJECT=`echo $OLD_PROJ_SUB_PROJ | awk -F'/' '{print $1}'`
   OLD_SUB_PROJECT=`echo $OLD_PROJ_SUB_PROJ | awk -F'/' '{print $2}'`
   NEW_PROJECT=`echo $NEW_PROJ_SUB_PROJ | awk -F'/' '{print $1}'`
   NEW_SUB_PROJECT=`echo $NEW_PROJ_SUB_PROJ | awk -F'/' '{print $2}'`

   if [ \( "XX$OLD_SUB_PROJECT" == "XX" -a "XX$NEW_SUB_PROJECT" != "XX" \) -o \( "XX$OLD_SUB_PROJECT" != "XX" -a "XX$NEW_SUB_PROJECT" == "XX" \) ];then
     echo "Error: <Project/Subproject> is not given in proper format with -o or -n option."
     exit 1 
   fi
   check_if_All_default_project
}

check_option()
{
  OPTION_FLAG=$1
  if [ $OPTION_FLAG -gt 0 ] ;then
    err_msgout "nsu_rename_project: $2 option cannot be specified more than once."
    display_help_and_exit
  fi
}

check_old_new_project_option()
{
  if [ $OFLAG == 0 -a $NFLAG == 0 ]; then
    display_help_and_exit
    exit -1
  elif [ $OFLAG == 0 -a $NFLAG == 1 ]; then
    err_msgout "To rename need -o <Project/Subproject> -n <Project/Subproject> option"
    exit -1
  elif [ $OFLAG == 1 -a $NFLAG == 0 ]; then
    err_msgout "To rename need -o <Project/Subproject> -n <Project/Subproject> option"
    exit -1
  elif [ $OFLAG == 1 -a $NFLAG == 1 ]; then
    check_mandatory_options
    check_and_rename_proj_subproj
  fi
}

while getopts o:n:w:? c
do
  case $c in
    o) check_option $OFLAG "-o"
       OFLAG=`expr $OFLAG + 1`
       OLD_PROJ_SUB_PROJ="$OPTARG";;
    n) check_option $NFLAG "-n"
       NFLAG=`expr $NFLAG + 1`
       NEW_PROJ_SUB_PROJ="$OPTARG";;
    w) 
       WFLAG=`expr $WFLAG + 1`
       WORK_PROFILE="$OPTARG"
       ;;
    ?) display_help_and_exit ;;
    *) display_help_and_exit ;;
  esac
done
#set relative test assets dir
NS_TA_DIR=`nsi_get_work_space_path.sh $WORK_PROFILE`
if [ ${WFLAG} == 0 ];then
  echo "As -w option is not specified, so default workspace and profile will be used"
fi
check_old_new_project_option

#msgout "----------------------------------------------------------------------"
exit 0

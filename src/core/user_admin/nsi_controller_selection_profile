#!/bin/bash
export HOME_DIR=/home/cavisson
USER_NAME=`whoami`

ctrl_count=0  #to count number of controller to be displayed
ctrl_string=""  #this string will hold name of controller separated by "|"
ctrl_list()   #funciton to show controller name 
{
  root_flag=$1
  #ctrl_count=0
  user_name=`whoami`
  controller_list=`cat $CONTROLLER_CONFIG_FILE |grep -v '^#' |awk -F'|' '{if(NR!=1)print $1}'`
  i=1
  ctrl_name=`echo $controller_list |awk '{print $1}'`
  while [ "X$ctrl_name" !=  "X" ];do
    grep "^$user_name|" $HOME_DIR/$ctrl_name/users/user_profiles.dat>>/dev/null
    if [ $? -eq 0 ] || [ $root_flag -eq 0 ];then
      ctrl_count=`expr $ctrl_count + 1`
      echo "[$ctrl_count] $ctrl_name"
      ctrl_string="$ctrl_string$ctrl_name|"
    fi
    i=`expr $i + 1`
    ctrl_name=`echo $controller_list |  awk -v "j=$i" '{print $j}'`
  done
}

#unset USERNAME
CONFIG=`egrep "^CONFIG" $HOME_DIR/etc/cav.conf 2>/dev/null| awk '{print $2}'`
if [ "XX$CONFIG" == "XX" ];then
  echo "Error: There is no value found for keyword 'CONFIG' in $HOME_DIR/etc/cav.conf file"
  return 
fi
if [ "X$CALLING_FROM_UPGRADE_SHELL" == "X" ];then
  CONTROLLER_CONFIG_FILE=$HOME_DIR/etc/cav_controller.conf
  if [ ! -f $CONTROLLER_CONFIG_FILE ];then
    return
  fi
 

  echo "Please enter the controller name which you want to use"
  if [ `id -u` -eq 0 ];then
    ctrl_list 0
    #cat $CONTROLLER_CONFIG_FILE | awk -F '|' '{print "*  "$1}'|grep -v "NAME"
  else
    ctrl_list 1
  fi
  echo " "
  #cat $CONTROLLER_CONFIG_FILE | awk -F '|' '{print "*  "$1}'|grep -v "NAME"
  echo " "
  ## Set trap for Signal Ctrl+C
  trap 'exit -1'  2
  read CTRL_NAME
  while [ "XX$CTRL_NAME" = "XX" ];do
    echo "Entered controller name does not exist"
    echo "please Re-enter controller name"
    read CTRL_NAME
  done
  echo $CTRL_NAME |grep '^[0-9]*$' >>/dev/null
  if [ $? -eq 0 ];then
    CTRL_NAME=`echo $ctrl_string | awk -v var=$CTRL_NAME -F '|' '{if(var<NF){print $(var)}else{print var}}'`
    #CTRL_NAME=`echo $ctrl_string |awk -v 'var=$CTRL_NAME' -f '|' '{if(NF=var)print $1 }'
  fi
  #echo $CTRL_NAME
  CHECK_CTRL_NAME=`cat $CONTROLLER_CONFIG_FILE | awk -F '|' '{print $1}'|grep -w "$CTRL_NAME"`
  while [ "XX$CHECK_CTRL_NAME" != "XX$CTRL_NAME" ]
  do
    echo "Entered controller name does not exist"
    echo "please Re-enter controller name"
    read CTRL_NAME
    echo $CTRL_NAME |grep '^[0-9]*$' >>/dev/null
    if [ $? -eq 0 ];then
      CTRL_NAME=`echo $ctrl_string | awk -v var=$CTRL_NAME -F '|' '{if(var<NF){print $(var)}else{print var}}'`
      #CTRL_NAME=`echo $ctrl_string |awk -v 'var=$CTRL_NAME' -f '|' '{if(NF=var)print $1 }'
    fi
    CHECK_CTRL_NAME=`cat $CONTROLLER_CONFIG_FILE | awk -F '|' '{print $1}'|grep -w "$CTRL_NAME"`
  done
else
  CTRL_NAME=$1
fi

## Reset the trap for Signal Ctrl+C
trap 2

SERVER=server
WORK=$CTRL_NAME
if [ "$CONFIG" == "NO" ];then
  if [ "XX$WORK" == "XXwork" -o "XX$WORK" == "XXwork2" -o "XX$WORK" == "XXwork3" ];then
    SERVER=serverNO
  fi
fi
ulimit -c unlimited
export NS_WDIR=$HOME_DIR/$CTRL_NAME

if [ ! -L $NS_WDIR/users ];then
  export NS_WDIR=/home/netstorm/$CTRL_NAME
  export TOMCAT_DIR=/$CTRL_NAME/apache-tomcat-7.0.59
fi

#### Changes as per Bug#10197 
PRODUCT=`$NS_WDIR/bin/nsi_show_config`
if [ $? != 0 ];then
  echo "Error: Product is not set in your $HOME_DIR/etc/cav.conf file"
  PRODUCT="NA"
fi

if [ "XX$PRODUCT" == "XXED" -a "XX$USER_NAME" != "XXroot" -a "XX$USER_NAME" != "XXadmin" -a "XX$USER_NAME" != "XXcavisson" ];then
   echo "You are not authorized to login to this system."
   echo -n "Please press enter."
   read temp
   exit -1
fi
####

#export TOMCAT_DIR=$NS_WDIR/apps/apache-tomcat-7.0.59
export TOMCAT_DIR=""
export HPD_ROOT=$NS_WDIR/hpd
export LPS_ROOT=$NS_WDIR/lps
export NDC_ROOT=$NS_WDIR/ndc
export HPD_CONTROLLER_NAME=$CTRL_NAME
if [ "XX$WORK" == "XXwork" ];then
    export TOMCAT_CMD=tomcat
    export NSSERVER_CMD=nsServer
    export HPD_CMD=hpd
    export LPS_CMD=lps
    export NDC_CMD=ndc
    export RSYNC_CMD=rsync_daemon
    export SCHEDULER_CMD=scheduler
    export STATSC_CMD=statsc
    export SERVER_XML=${SERVER}.xml
else
  export TOMCAT_CMD=tomcat_$CTRL_NAME
  export NSSERVER_CMD=nsServer_$CTRL_NAME
  export HPD_CMD=hpd_$CTRL_NAME
  export LPS_CMD=lps_$CTRL_NAME
  export NDC_CMD=ndc_$CTRL_NAME
  export RSYNC_CMD=rsync_daemon_$CTRL_NAME
  export SCHEDULER_CMD=scheduler_$CTRL_NAME
  export STATSC_CMD=statsc_$CTRL_NAME
  export SERVER_XML=${SERVER}_$CTRL_NAME.xml
fi
# Adding $HPD_ROOT/bin in path 
#export PATH=/usr/local/pgsql/bin:$NS_WDIR/bin:$NS_WDIR/tools:$HPD_ROOT/bin:$NDC_ROOT/bin:$LPS_ROOT/bin:$PATH

if [ "X$CALLING_FROM_UPGRADE_SHELL" == "X" ];then
  echo "NS_WDIR is set to $NS_WDIR"
  echo "HPD_ROOT is set to $HPD_ROOT"
  echo "LPS_ROOT is set to $LPS_ROOT"
  cd $NS_WDIR
fi

. $NS_WDIR/etc/netstorm.env

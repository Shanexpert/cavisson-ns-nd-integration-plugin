#!/bin/sh
#----------------------------------------------------------------------
# Name    :    nsi_update_user_test_times
# Author  :    Archana
# Purpose :    This file is to create/update user_test_times.dat file, this file will keep test run details.
# Format of user_test_times.dat file:
# User Name|Total Test Execution time|Number of Test Executions|Last Test Execution Time
# ut_test1|00:00:47|3|1/27/09  18:07:22
# ut_test|00:01:24|6|1/27/09  18:09:55
# netstorm|00:00:02|1|1/27/09  18:10:32
# Where:
#   'Total Test Execution time' field will keep (currently how long test execution time + last test executed time)(HH:MM:SS)
#   'Number of Test Executions' field will keep number of test run that has been executed (1, 2, ...)
#   'Last Test Execution Time' field will keep what was last date-time(MM/DD/YY HH:MM:SS) when test run stop.
#Modification History:
#   01/27/09:  Archana - Initial Version
#----------------------------------------------------------------------


. $NS_WDIR/bin/ns_user_admin_lib

TOTAL_TEST_EXECUTION_TIME=0
NUMBER_OF_TEST_EXECUTIONS=0
LAST_TEST_EXECUTION_TIME="NA"

#This method to add currently how long test execution time and last test executed time (in HH:MM:SS)
#Since 'Total Test Execution time' = currently how long test execution time + last test executed time (in HH:MM:SS)
get_total_test_time()
{
  OLD_TEST_TIME=`egrep -w ^$USER_NAME $USER_TEST_TIMES |cut -d"|"  -f2`
  OLD_TEST_TIME_h=`echo $OLD_TEST_TIME | cut -d':' -f1`
  OLD_TEST_TIME_m=`echo $OLD_TEST_TIME | cut -d':' -f2`
  OLD_TEST_TIME_s=`echo $OLD_TEST_TIME | cut -d':' -f3`

  CUR_TEST_TIME_h=`echo $CUR_TEST_TIME | cut -d':' -f1`
  CUR_TEST_TIME_m=`echo $CUR_TEST_TIME | cut -d':' -f2`
  CUR_TEST_TIME_s=`echo $CUR_TEST_TIME | cut -d':' -f3`

  TOTAL_h=`expr $OLD_TEST_TIME_h + $CUR_TEST_TIME_h`
  TOTAL_m=`expr $OLD_TEST_TIME_m + $CUR_TEST_TIME_m`
  TOTAL_s=`expr $OLD_TEST_TIME_s + $CUR_TEST_TIME_s`

  if [ $TOTAL_s -gt 59 ]; then
    REM=`expr $TOTAL_s / 60`
    TOTAL_s=`expr $TOTAL_s % 60`
    TOTAL_m=`expr $TOTAL_m + $REM`
  fi
  if [ $TOTAL_m -gt 59 ]; then
    REM=`expr $TOTAL_m / 60`
    TOTAL_m=`expr $TOTAL_m % 60`
    TOTAL_h=`expr $TOTAL_h + $REM`
  fi
  TOTAL_h=`printf "%02d" $TOTAL_h`
  TOTAL_m=`printf "%02d" $TOTAL_m`
  TOTAL_s=`printf "%02d" $TOTAL_s`

  TOTAL_TEST_TIME="$TOTAL_h:$TOTAL_m:$TOTAL_s"
  TOTAL_TEST_EXECUTION_TIME=$TOTAL_TEST_TIME
  echo "Total test time  $TOTAL_TEST_TIME"
}

get_total_num_test()
{
  TOTAL_NUM_TEST=`egrep -w ^$USER_NAME $USER_TEST_TIMES |cut -d"|"  -f3`
  TOTAL_NUM_TEST=`expr $TOTAL_NUM_TEST + 1`
  NUMBER_OF_TEST_EXECUTIONS=$TOTAL_NUM_TEST
}

get_field_value()
{
  CURRENT_TEST_EXECUTION_TIME="12:00:59"
  get_total_test_time $USER_NAME $CURRENT_TEST_EXECUTION_TIME
  get_total_num_test $USER_NAME
}

#This method is to create user_test_times.dat file, this file will keep test run details.
create_update_user_test_times()
{
  if [ -s $USER_TEST_TIMES ];then
    get_field_value $USER_NAME
    TMP_USER_PROFILE=/tmp/user_profile.$$ 
    eval sed -e '/^$USER_NAME\|/d' $USER_TEST_TIMES >$TMP_USER_PROFILE
    cp $TMP_USER_PROFILE $USER_TEST_TIMES
    echo "$USER_NAME|$TOTAL_TEST_EXECUTION_TIME|$NUMBER_OF_TEST_EXECUTIONS|$LAST_TEST_EXECUTION_TIME" >>$USER_TEST_TIMES
    rm -f $TMP_USER_PROFILE
  fi
  msgout "Test run details of user '$USER_NAME' has been successfully added in $USER_TEST_TIMES."
}

USER_NAME=$1
CUR_TEST_TIME=$2
LAST_TEST_EXECUTION_TIME=$3

#This is done to make sure user test time file is created with netstorm onwer at upgrade time
if [ "$USER_NAME" == "CreateEmptyFileIfNotExisting" ];then
  if [ ! -s $USER_TEST_TIMES ];then
    echo "User Name|Total Test Execution time|Number of Test Executions|Last Test Execution Time" >$USER_TEST_TIMES
    chmod 664 $USER_TEST_TIMES
  fi
else
  create_update_user_test_times
fi

exit 0

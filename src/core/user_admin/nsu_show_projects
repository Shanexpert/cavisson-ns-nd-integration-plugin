#!/bin/sh

#----------------------------------------------------------------------
# Name    :    nsu_show_projects
# Author  :    Archana
# Purpose :    This file is to show existing user default project 
#              details of active users only.
# Usage   :
#  nsu_show_projects [-A | -u <User Name>]
# where
#  -A : For all project/sub-project details that present in scenarios directory (Default)
#  -u : User Name (to show project/sub-project details of specified user)
# Format of Output:
#  User Name|Project|Subproject
# Modification History:
#  02/05/09:  Archana - Initial Version
#----------------------------------------------------------------------

. $NS_WDIR/bin/ns_user_admin_lib

#SCENARIO_PATH=$NS_WDIR/scenarios
WORKSPACE_PATH=$NS_WDIR/workspace/
ERROR_FILE=/tmp/nsu_show_projects.$$
#************************************************************************************************
#default workspace
DW="admin"
#default profile
DP="default"
SYSTEM="system"
WORKSPACE=""
PROFILE=""
#WORK_PROFILE ==> WORKSPACE + PROFILE
WORK_PROFILE=""
NS_TA_DIR=""
NS_RTA_DIR="workspace"

#check for workspace/profile name and RetlativeTestAsset Dir
check_and_set_workspace_profile()
{
  #if empty aregument passed
  if [ \( "X${1}" == "X" \) -o \( "X${1}" == "X/" \) -o \( "X${1}" == "${DW}/${DP}" \) ];then
   WORKSPACE=$DW
   PROFILE=$DP
   WORK_PROFILE=${DW}/${DP}
   return 1
  fi

  #if default workspace/profile
   
  WORKSPACE=`echo "$1" | cut -d"/"  -f1`
  PROFILE=`echo "$1" | cut -d"/"  -f2`

  #<workspace> i.e. profile no given
  #<workspace>/ i.e. profile no given
  #/<profile> i.e. profile no given
  if [ "X$WORKSPACE" == "X" ];then
     #set default value
     WORKSPACE=$DW
  fi

  #if [ "X$PROFILE" == "X" ];then
   #  set default value
    # PROFILE=$DP
  #fi
  #if WORKSPACE is NOT default workspace
  if [ $WORKSPACE != $DW ];then
     #check if workspace exists
     if [ ! -d ${NS_WDIR}/${NS_RTA_DIR}/$WORKSPACE ];then
       #set to default workspace
       WORKSPACE=$DW
     fi
  fi
  
  if [ "X$PROFILE" != "X" ];then
   #check if profile exists
   if [ ! -d ${NS_WDIR}/${NS_RTA_DIR}/$WORKSPACE/$PROFILE ];then
       #set to default workspace
       PROFILE=$DP
   fi
  fi
  #set workspace and profile path
  if [ "X$PROFILE" != "X" ];then 
    WORK_PROFILE=${WORKSPACE}/${PROFILE}
  else 
    WORK_PROFILE=${WORKSPACE}
  fi
}

#set relative test assets dir
set_rta_dir()
{
  NS_RTA_DIR="workspace/$1/$2/cavisson"
}

#************************************************************************************************

check_presence_proj_subproj()
{
  PROFILE=$1
  PROJ=$2
  SUB_PROJ=$3
  if [ ! -d $WORKSPACE_PATH/$PROFILE/cavisson/$PROJ/$SUB_PROJ ];then
    return 1
  fi
}

#This method to show only for active users project/sub-project details
show_all_user_proj_detail()
{
 
  WORKSPACE=$1
  PROFILE=$2
  PROFILE_NAME=$2
  PROFILE_PATH="."
  TEMP_SCENARIO_DETAILS=/tmp/scenario_details.$$
  TEMP_SCENARIO_DETAIL=/tmp/scenario_detail.$$
  WORKSPACE_PATH=$NS_WDIR/workspace/$WORKSPACE
  
  cd $WORKSPACE_PATH
  base_name=""
  #get target dir name incase of default profile
  if [ "${PROFILE}" == ${DP} -o "${PROFILE}" == "$SYSTEM" ];then
    PROFILE_L=`readlink ${PROFILE}`
    # system ->   <>/admin/system
    # default -> <Any_Profile_for_user>
    if [ "X$PROFILE_L" != "X" ];then
     PROFILE=$PROFILE_L
     base_name=`basename ${PROFILE}`
     PROFILE=$base_name
    fi
    #-w user/system
    if [ "${PROFILE_NAME}" == "$SYSTEM" -a "$WORKSPACE" != "admin" ];then
      WORKSPACE_PATH="$NS_WDIR/workspace/admin"
      PROFILE_PATH="${PROFILE}"
    else
      PROFILE_PATH="./${PROFILE}"
    fi
  fi 
  
  if [ "X${PROFILE}" != "X" -a "${base_name}" != "$SYSTEM" ];then
    PROFILE_PATH="./${PROFILE}"
  fi
  
   export PROFILE 
  # cd ${PROFILE_PATH}/cavisson; find . -type d -name scenarios | grep -v ^./\\.>$TEMP_SCENARIO_DETAILS 2>$ERROR_FILE
   cd ${PROFILE_PATH}/cavisson; find . -maxdepth 3 -mindepth 3 -type d | awk -F '/' '($4=="scripts"||$4=="scenarios"||$4=="checkprofile"||$4=="ReplayAccessLogs"||$4=="replay_profiles"||$4=="scenario_profiles"||$4=="testcases"||$4=="testsuites") {print  ".|"ENVIRON["PROFILE"]"|"$2"|"$3}'| awk '!seen[$1]++'>$TEMP_SCENARIO_DETAIL
  #find -L ${PROFILE_PATH} -type d -name scenarios | grep -v ^./\\.>$TEMP_SCENARIO_DETAILS 2>$ERROR_FILE
  #cat $TEMP_SCENARIO_DETAILS
  #echo "******"
  #if [ "$PROFILE_PATH" == "./${PROFILE}" ];then
   #cat $TEMP_SCENARIO_DETAILS | awk -F "/" '{print $1"|"$2"|"$4"|"$5}' | grep -v "|$" | sort -u >$TEMP_SCENARIO_DETAIL
  #else
   #cat $TEMP_SCENARIO_DETAILS | awk -F "/" '{print $6"|"$7"|"$9"|"$10}' | grep -v "|$" | sort -u >$TEMP_SCENARIO_DETAIL
  #fi
  #rm -f $TEMP_SCENARIO_DETAILS
  print_all_user_proj_detail $TEMP_SCENARIO_DETAIL 
  rm -f $TEMP_SCENARIO_DETAIL
}

print_all_user_proj_detail()
{
  TMP_USER_PROJ_DETAILS=$1
  #PROFILE=$2
  TMP_PROJ_DETAILS=/tmp/temp_proj_details.$$
  while read line
  do
    echo $line | grep "^#" >/dev/null
    if [ $? -eq 0 ]; then
      continue
    elif [ "XX$line" == "XX"  ];then
      continue
    else
      PROFILE=`echo "$line" | cut -d"|"  -f2`
      PROJ=`echo "$line" | cut -d"|"  -f3`
      SUB_PROJ=`echo "$line" | cut -d"|"  -f4`
      check_presence_proj_subproj $PROFILE $PROJ $SUB_PROJ
      if [ $? != 1 ];then 
        if [ $PROFILE == "default" ];then
          base_name=`readlink $PROFILE`
          base_name=`basename $base_name` 
          PROFILE=$base_name
        fi
        echo "$USER_NAME|$PROFILE|$PROJ|$SUB_PROJ" >>$TMP_PROJ_DETAILS
      fi
    fi
  done < $TMP_USER_PROJ_DETAILS
  rm -f $TMP_USER_PROJ_DETAILS
  #sort -t "|" +1 -2 $TMP_PROJ_DETAILS
  sort -k3,3 -k4,4 -t '|' -u $TMP_PROJ_DETAILS
  rm -f $TMP_PROJ_DETAILS
}

print_default_user_proj_detail()
{
  TMP_USER_PROJ_DETAILS=$1
  TMP_PROJ_DETAILS=/tmp/temp_proj_details.$$
  while read line
  do
    echo $line | grep "^#" >/dev/null
    if [ $? -eq 0 ]; then
      continue
    elif [ "XX$line" == "XX"  ];then
      continue
    else
      PROFILE=`echo "$line" | cut -d"|"  -f1`
      PROJ=`echo "$line" | cut -d"|"  -f3`
      SUB_PROJ=`echo "$line" | cut -d"|"  -f4`
      check_presence_proj_subproj $PROFILE $PROJ $SUB_PROJ
      if [ $? != 1 ];then
        if [ $PROFILE == "default" ];then
          base_name=`readlink $PROFILE`
          base_name=`basename $base_name` 
          PROFILE=$base_name
        fi
        echo "$USER_NAME|$PROFILE|$PROJ|$SUB_PROJ" >>$TMP_PROJ_DETAILS
      fi
    fi
  done < $TMP_USER_PROJ_DETAILS
  rm -f $TMP_USER_PROJ_DETAILS
  sort -t "|" +1 -2 $TMP_PROJ_DETAILS
  rm -f $TMP_PROJ_DETAILS
}

#This method to show specified user project/sub-project details
show_user_proj_detail()
{
  WORKSPACE_NAME=$1
  USER_PROJ_DETAILS=/tmp/user_proj_details.$$
  egrep -w ^$USER_NAME $USER_DEFAULT_PROJECTS | sort -t "|" +1 -2  >$USER_PROJ_DETAILS
  #  To show All default project details for netstorm and admin
  #  if [ "XX$USER_NAME" == "XXroot" -o "XX$USER_NAME" == "XXadmin" -o "XX$USER_NAME" == "XXnetstorm" ];then
  if [ $EFLAG == 1 ];then
    while read line
    do
      echo $line | grep "^#" >/dev/null
      if [ $? -eq 0 ]; then
        continue
      elif [ "XX$line" == "XX"  ];then
        continue
      else
        IPROJ=`echo "$line" | cut -d"|"  -f2`
        ISUB_PROJ=`echo "$line" | cut -d"|"  -f3`
        if [ $IPROJ == "All" -a $ISUB_PROJ == "All" ];then
          show_all_user_proj_detail ${DEFAULT_PROFILE}
        elif [ $ISUB_PROJ == "All" ];then
          TEMP_SCENARIO_DETAILS=/tmp/proj_details.$$
          TEMP_SCENARIO_DETAIL=/tmp/scenario_detail.$$
          ls -1d $WORKSPACE_PATH/$IPROJ/* >$TEMP_SCENARIO_DETAILS
          cat $TEMP_SCENARIO_DETAILS | awk -F "/" '{print $6"|"$7}' | grep -v "|$" | sort -u >$TEMP_SCENARIO_DETAIL
          rm -f $TEMP_SCENARIO_DETAILS
          print_default_user_proj_detail $TEMP_SCENARIO_DETAIL
          rm -f $TEMP_SCENARIO_DETAIL
        elif [ $IPROJ != "All" -a $ISUB_PROJ != "All" ];then
          #USER_PROJ_DETAIL=/tmp/user_proj_detail.$$
          #grep -v All $USER_PROJ_DETAILS > $USER_PROJ_DETAIL
          #sort -u $USER_PROJ_DETAIL
          echo "$USER_NAME|$IPROJ|$ISUB_PROJ"
          rm -f $USER_PROJ_DETAIL
         rm -f $USER_PROJ_DETAILS
          #exit 0
        fi
      fi
    done < $USER_PROJ_DETAILS
  else
    sort -t "|" +1 -2 $USER_PROJ_DETAILS
  fi
  rm -f $USER_PROJ_DETAILS
}

#This method to give error Usage message and exit
display_help_and_exit()
{
  err_msgout "$1"
  err_msgout "Usage: nsu_show_projects [-A | -e | -u <User Name> | -w <workspace>/<profile>]"
  err_msgout "Where:"
  err_msgout "  -A is used to show all project/sub-project details that present in default profile"
  err_msgout "  -e is used to show expended default project/sub-project of specified User Name"
  err_msgout "  -u is used to show default project/sub-project of specified User Name"
  err_msgout "  -w : To provide <workspace>/<profile>. Default workspace and profile will be used, if not provided"  
  exit -1
}

AFLAG=0
EFLAG=0
UFLAG=0
WFLAG=0
check_option()
{
  OPTION_FLAG=$1
  if [ $OPTION_FLAG -gt 0 ] ;then
    display_help_and_exit "nsu_show_projects: $2 option cannot be specified more than once."
  fi
}

#This method to check options if used more 
check_if_AU_option()
{
  if [ $AFLAG -eq 1 -o $UFLAG -eq 1 ];then
    display_help_and_exit "nsu_show_projects: -A can not be use with -u option."
  fi
}

#This method to check options if used more 
check_if_AE_option()
{
  if [ $AFLAG -eq 1 -o $EFLAG -eq 1 ];then
    display_help_and_exit "nsu_show_projects: -A can not be use with -e option."
  fi
}

debug=0
debug_log()
{
  if [ $debug == 1 ];then
    echo $*
  fi
}
__exit()
{
  debug=1;
  debug_log $* 
  exit -1
}

ALL_USERS=1
USER=1
while getopts Aeu:w:? c
do
  case $c in
    A) check_option $AFLAG "-A"; check_if_AU_option; check_if_AE_option;
       AFLAG=`expr $AFLAG + 1` ; 
       USER=0
       USER_NAME="NA"
       ;;
    e) check_option $EFLAG "-e"; check_if_AE_option; 
       EFLAG=`expr $EFLAG + 1` ; 
       ;;
    u) check_option $UFLAG "-u"; check_if_AU_option;
       UFLAG=`expr $UFLAG + 1` ;
       ALL_USERS=0
       USER_NAME="$OPTARG" 
       check_user_is_active_cavisson_user $USER_NAME "nsu_show_projects" ;;
    w)check_option $WFLAG "-w";
      WFLAG=`expr $WFLAG + 1` ;
      WORK_PROFILE="$OPTARG"
      #USER_NAME="$OPTARG"
      USER_NAME=`echo "$OPTARG" | cut -d"/"  -f1`
      ;;
    ?) display_help_and_exit ;;
    *) display_help_and_exit ;;
  esac
done

#************************************************************************************************
check_and_set_workspace_profile "$WORK_PROFILE/"
set_rta_dir $WORKSPACE $PROFILE
#set absolute test assets path
NS_TA_DIR=$NS_WDIR/$NS_RTA_DIR
#************************************************************************************************

echo "User Name|WorkProfile|Project|Subproject"
#show all  projs/subprojs related to  a specific workspace
show_all_user_proj_detail "${WORKSPACE}"  "${PROFILE}"

#remove error file if empty
if [ ! -s "$ERROR_FILE" ];then
 rm -f $ERROR_FILE
fi
#err_msgout "----------------------------------------------------------------------"
exit 0

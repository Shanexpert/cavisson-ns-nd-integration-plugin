#!/bin/sh

#----------------------------------------------------------------------
# Name    :    nsu_delete_project
# Author  :    Archana
# Note    :    This command only can run by root
#              From GUI, admin user will run this command using Bean which runs as root
# Purpose :    This command will delete project/sub-project from scenarios and scripts directories
# Usage   :    nsu_delete_project -p <Project/Subproject> [-S gui|cli] [-f] 
# where   :
#  -p <project/subproject>: Project and sub-project name
#  -S gui|cli (default cli)
#  -f forcefully delete
# Modification History:
#   02/16/09:  Archana - Initial Version
#----------------------------------------------------------------------

. $NS_WDIR/bin/ns_user_admin_lib

#Bug 52051:: remove check of root to delete ssp file
#check_root_uid "nsu_delete_scenario_profile"

SCENARIO_PROFILE_PATH=$NS_WDIR/workspace
#SCENARIO_PROFILE_PATH=$NS_WDIR/scenario_profiles
#flag to check if scenario profile deleted
#SCEN_PROF_DELETED=0

#This method to check format of project and subproject, it should be "workspace/profile/project/subproject/scenario_profile"
check_format_of_proj_subproj()
{
    WORKSPACE=`echo $PROJ_SUB_PROJ_SCENARIO_PROFILE | awk -F'/' '{print $1}'`
    PROFILE=`echo $PROJ_SUB_PROJ_SCENARIO_PROFILE | awk -F'/' '{print $2}'`
    PROJECT=`echo $PROJ_SUB_PROJ_SCENARIO_PROFILE | awk -F'/' '{print $3}'` 
    SUB_PROJECT=`echo $PROJ_SUB_PROJ_SCENARIO_PROFILE | awk -F'/' '{print $4}'`
    SCENARIO_PROFILE=`echo $PROJ_SUB_PROJ_SCENARIO_PROFILE | awk -F'/' '{print $5}'` 
    if [ "$PROJECT" == "" -a "$SUB_PROJECT" == "" -a "$SCENARIO_PROFILE" == "" ];then
      err_msgout "-F <workspace/profile/Project/Subproject/scenario_profile> is not given in proper format."
      exit -1
    fi
    if [ "$WORKSPACE" == "" ];then
      WORKSPACE=admin
    fi

    if [ "$PROFILE" == "" ];then
      PROFILE=default
    fi
}

#This method is to delete project, if all subproject has been deleted and project dir is empty
delete_if_project_is_empty()
{
  #Relative Test Assets Dir 
  RTA_DIR=$WORKSPACE/$PROFILE/cavisson
  # If scenario_profile project is not present, treat it as empty
  EMPTY_SCENARIO_PROFILE_PROJ=0
  if [ -d $SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT ]; then
    EMPTY_SCENARIO_PROFILE_PROJ=`ls -1 $SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT/ |wc -l`
  fi


  if [ $EMPTY_SCENARIO_PROFILE_PROJ == 0 ];then
    rm -rf $SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT
    SCEN_PROF_DELETED=1
  fi 
}

# This method is for when run from CLI, to check if specified <project/sub-project> is not empty
# in scenarios and scripts directory then check if not forcefully then show y/n option 
# If press 'y/Y' then delete specified project/sub-project from scenario_profiles directory
# if forcefully then delete specified project/sub-project from scenario_profiles directory
intractive_cli_delete()
{
  SCENARIO_PROFILE_DIR="$1"
  
  EMPTY_SCENARIO_PROFILE=0
  if [ -f $SCENARIO_PROFILE_DIR ]; then
    EMPTY_SCENARIO_PROFILE=`ls -1 $SCENARIO_PROFILE_DIR | wc -l`
  fi

  if [ $EMPTY_SCENARIO_PROFILE != 0 ];then
      if [ "XX$SUB_PROJECT" != "XX" ];then
        echo -n "Project $PROJECT/$SUB_PROJECT/"scenario_profiles" is not empty for scenario_profiles. Do you want to delete scenario_profiles(y/n) ?"
      fi
      read input
      if [ "XX$input" == "XXY" -o "XX$input" == "XXy" ];then
        tmp_file="/tmp/ndp.$$"
        nsu_show_used_profiles_in_scenarios -f $PROJ_SUB_PROJ_SCENARIO_PROFILE 1>$tmp_file 2>/dev/null
        if [ $? -ne 0 ]; then
          echo "Some error occured while removing scenario profile"
          exit -1
        fi
        cat $tmp_file
        if [ `wc -l $tmp_file|cut -d" " -f1` -gt 1 ];then
          echo "$SCENARIO_PROFILE_DIR can't be deleted" 
        else
          echo "As nobody using $SCENARIO_PROFILE_DIR, hence deleting" 
          rm -f $SCENARIO_PROFILE_DIR
        fi
      else
        exit -1
      fi
    else
      rm -f $SCENARIO_PROFILE_DIR
    fi
  rm -f  $tmp_file
}

# This method is for when run from GUI, to check if specified <project/sub-project/scenario_profile> is not empty
# in scenario_profile directory then do not delete specified project/subproject/scenario_profile, 

intractive_gui_delete()
{
  SCENARIO_PROFILE_DIR="$1"
  EMPTY_SCENARIO_PROFILE=0
  if [ -f $SCENARIO_PROFILE_DIR ]; then
    EMPTY_SCENARIO_PROFILE=`ls -1 $SCENARIO_PROFILE_DIR | wc -l`
  fi

  if [ $EMPTY_SCENARIO_PROFILE != 0 ];then
      tmp_file="/tmp/ndp.$$"
      nsu_show_used_profiles_in_scenarios -f $PROJ_SUB_PROJ_SCENARIO_PROFILE 1>$tmp_file 2>/dev/null
      if [ $? -ne 0 ]; then
        echo "Some error occured while removing scenario profile"
        exit -1
      fi
      if [ `wc -l $tmp_file|cut -d" " -f1` -gt 1 ];then
        cat $tmp_file
      else
        cat $tmp_file
        rm -f $SCENARIO_PROFILE_DIR
      fi
   else
#    rm -rf $SCENARIO_PROFILE_DIR
     rm -f $SCENARIO_PROFILE_DIR
  fi
  rm -f  $tmp_file
}

update_user_default_projects()
{
  TMP_FILE="/tmp/user_defualt_projects.$$"
  cp $USER_DEFAULT_PROJECTS $TMP_FILE 
  grep -v "$PROJECT|$SUB_PROJECT" $USER_DEFAULT_PROJECTS > $TMP_FILE
  cp $TMP_FILE $USER_DEFAULT_PROJECTS
  rm -f $TMP_FILE
}

check_and_del_proj_subproj()
{

  #Relative Test Assets Dir 
  RTA_DIR=$WORKSPACE/$PROFILE/cavisson
  if [ ! -d $SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT ];then
    echo "This '$PROJECT' does not exist in $SCENARIO_PROFILE_PATH/$RTA_DIR directory"
    return 1
  fi

  if [ "XX$SUB_PROJECT" != "XX" ];then
    if [ ! -d $SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT/$SUB_PROJECT ]; then
      echo "This '$SUB_PROJECT' does not exist in $SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT directory"
      return 1
    fi
  fi

  if [ "XX$INVOKER" == "XXcli" ];then
    intractive_cli_delete "$SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT/$SUB_PROJECT/"scenario_profiles"/$SCENARIO_PROFILE"
  elif [ "XX$INVOKER" == "XXgui" ];then
    intractive_gui_delete "$SCENARIO_PROFILE_PATH/$RTA_DIR/$PROJECT/$SUB_PROJECT/"scenario_profiles"/$SCENARIO_PROFILE"
  fi 
  #update_user_default_projects
}

display_help_and_exit()
{
  err_msgout "$1"
  err_msgout "Usage: nsu_delete_scenario_profile -f <workspace/profile/Project/Subproject/Scenario_profile> [-S gui|cli]"
  err_msgout "Where:"
  err_msgout "  -f is used to delete <workspace/profile/Project/Subproject>"
  err_msgout "  -S is used to specify who run this command. Default is cli."
  err_msgout "     cli is used when command is run from CLI."
  err_msgout "     gui is used when command is run from GUI."
  exit 1
}

fFLAG=0
SFLAG=0
check_mandatory_options()
{
 if [ $fFLAG -eq 0 ];then
    err_msgout "nsu_delete_scenario_profile: -f option is mandatory"
    display_help_and_exit
 fi

}

check_option()
{
  OPTION_FLAG=$1
  if [ $OPTION_FLAG -gt 0 ] ;then
    err_msgout "nsu_delete_scenario_profile: $2 option cannot be specified more than once."
    display_help_and_exit
  fi
}

if [ "X$*" = "X" ]; then
  display_help_and_exit
fi

INVOKER="cli"
#FORCE="no"

while getopts f:S:? c
do
  case $c in
    f) check_option $fFLAG "-f"
       fFLAG=`expr $fFLAG + 1`
       PROJ_SUB_PROJ_SCENARIO_PROFILE="$OPTARG"
       #PROJ_SUB_PROJ=`echo $PROJ_SUB_PROJ_SCENARIO_PROFILE | cut -d '/' -f 1,2`
       check_format_of_proj_subproj "$PROJ_SUB_PROJ_SCENARIO_PROFILE" ;;
    S) check_option $SFLAG "-S"
       SFLAG=`expr $SFLAG + 1`
       INVOKER="$OPTARG" 
       if [ $INVOKER != "cli" -a $INVOKER != "gui" ];then
         err_msgout "-S option can be use by cli/gui only"
         exit -1
       fi
       ;; 
    ?) display_help_and_exit ;;
    *) display_help_and_exit ;;
  esac
done
check_mandatory_options

check_and_del_proj_subproj

#msgout "----------------------------------------------------------------------"
exit 0

#!/bin/sh

# nsu_show_test_schedule –j <job_id> or –j ALL –g


PIPED="\t"
JOBID="ALL"
entry=""
DISTRO=`nsi_get_linux_release_ex -d`
TMP_AT_CMD_ENTRY_FILE=/tmp/entry.tmp.$$

display_help_and_exit()
{
  echo "ERROR: Incorrect usage"
  echo "Usage:"
  echo "nsu_show_test_schedule -j <job_id> or -j ALL -g"
  echo " Note:"
  echo "        -g for GUI only"
  #echo "    e.g.  nsu_start_test TestScenario or nsu_start_test TestScenario -master"
  exit 1
}

VALID_AT_ENTRY=/tmp/atentry.tmp.$$

get_entry()
{
  >$TMP_AT_CMD_ENTRY_FILE
  >$VALID_AT_ENTRY
  numentry=0
  mon="Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"
  
  if [ "`uname -a | grep -i fc14`" -o "X$DISTRO" = "XUbuntu" ];then #FC-14 machine
    if [ $JOBID != "ALL" ];then
      at -q n -l | awk -v jobid=$JOBID '{if($1==jobid){print $1"|"$5"|"$4"-"$3"-"$6"|"$8} }' >$TMP_AT_CMD_ENTRY_FILE
    else
      at -q n -l | awk '{print $1"|"$5"|"$4"-"$3"-"$6"|"$8 }'>$TMP_AT_CMD_ENTRY_FILE
    fi
    while read line
    do
      numentry=1
      temptime=`echo $line|cut -d'|' -f2 | cut -d":" -f1,2`
      tempmonth=`echo $line|cut -d'|' -f3 | cut -d"-" -f2`
      nummonth=`echo $mon | awk -v monc=$tempmonth '{for(i=1;i<=NF;i++){if($i==monc) printf("%02d", i) }}'`
      tempid=`echo $line|cut -d'|' -f1`
      tempdate=`echo $line | cut -d'|' -f3|cut -d'-' -f1`
      tempdate=`echo $tempdate | awk '{ printf("%02d", $1) }'`
      tempyear=`echo $line | cut -d'|' -f3| cut -d'-' -f3`
      tempdate=`echo $nummonth`-$tempdate``-$tempyear``
      #tempdate=`echo $line | cut -d'|' -f3|cut -d'-' -f1`-$nummonth-`echo $line | cut -d'|' -f3|cut -d'-' -f3`
      #tempdate=`echo $line | cut -d'|' -f3|cut -d'-' -f3`-$nummonth-`echo $line | cut -d'|' -f3|cut -d'-' -f1`
      tempuser=`echo $line | cut -d'|' -f4`
      echo $tempid"|"$temptime"|"$tempdate"|"$tempuser >>$VALID_AT_ENTRY
      #echo $tempid"|"$temptime"|"$tempdate"|"$tempuser
    done <$TMP_AT_CMD_ENTRY_FILE

    if [ $numentry -ne 0 ];then
      entry=`cat $VALID_AT_ENTRY`
    fi

    rm -f $TMP_AT_CMD_ENTRY_FILE
    rm -f $VALID_AT_ENTRY

  elif [ "`uname -a | grep -i fc9`" ];then
    if [ $JOBID != "ALL" ];then
      entry=`at -q n -l | awk -v jobid=$JOBID '{if($1==jobid){print $1"|"$3"|"$2"|"$5}}'`
    else
      entry=`at -q n -l | awk '{print $1"|"$3"|"$2"|"$5}'`
    fi

  fi 
}

id=`whoami`
# if [ $id != "netstorm" ]; then
#     echo "You can only run this command with netstorm id"
#     exit 1
# fi

while getopts j:g? c
do
    case $c in
        j) JOBID="$OPTARG" ;;
        g) PIPED="|" ;;
        ?) display_help_and_exit ;;
    esac
done

get_entry
if [ $JOBID == "ALL" ]; then

    echo -e "JobID${PIPED}Scenario${PIPED}Test Name${PIPED}Start Time${PIPED}Start Date${PIPED}Timeout${PIPED}Retry Count${PIPED}Retry Interval${PIPED}User${PIPED}Wait time${PIPED}Wait Action"

    for i in $entry
    do
      jid=`echo $i | cut -d"|" -f1`
      time=`echo $i | cut -d"|" -f2`
#     date=`echo $i | cut -d"|" -f3`
      date=`echo $i | cut -d"|" -f3 | awk -F"-" '{print $1"/"$2"/"$3}'`
      temp=`at -q n -c $jid | grep nsu_start_test`
      TEST_NAME=`echo $temp | awk -F"\"" '{ print $2}'`
      TEST_NAME="\"$TEST_NAME\""
      Scenario=`echo $temp | awk '{ print $3}'`
      PRE_TEST_CHECK_RETRY_COUNT=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $2}'`
      PRE_TEST_CHECK_RETRY_INTERVAL=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $4}'`
      PRE_TEST_CHECK_TIMEOUT=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $6}'`
      USER=`echo $i | cut -d "|" -f 4`
      Wait_time=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $8}'`
      Wait_action=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $10}'`
      echo -e ${jid}${PIPED}${Scenario}${PIPED}${TEST_NAME}${PIPED}${time}${PIPED}${date}${PIPED}${PRE_TEST_CHECK_TIMEOUT}${PIPED}${PRE_TEST_CHECK_RETRY_COUNT}${PIPED}${PRE_TEST_CHECK_RETRY_INTERVAL}${PIPED}${USER}${PIPED}${Wait_time}${PIPED}${Wait_action}
    done
else
    
  echo -e "JobID${PIPED}Scenario${PIPED}Test Name${PIPED}Start Time${PIPED}Start Date${PIPED}Timeout${PIPED}Retry Count${PIPED}Retry Interval${PIPED}User${PIPED}Wait_time${PIPED}Wait Action"

  i=$entry
    
  if [ "XX $i XX" == "XX  XX" ];then
    echo "No job with id $JOBID scheduled".
    exit 2
  fi

  jid=`echo $i | cut -d"|" -f1`
  time=`echo $i | cut -d"|" -f2`
  #date=`echo $i | cut -d"|" -f3`
  date=`echo $i | cut -d"|" -f3 | awk -F"-" '{print $1"/"$2"/"$3}'`
  #date=`echo $i | cut -d"|" -f3 | awk -F"-" '{print $2"/"$3"/"$1}'`
  jid=`expr $jid + 2`
  temp=`at -q n -c $jid | grep nsu_start_test`
  TEST_NAME=`echo $temp | awk -F"\"" '{ print $2}'`
  TEST_NAME="\"$TEST_NAME\""
  Scenario=`echo $temp | awk '{ print $3}'`
  PRE_TEST_CHECK_RETRY_COUNT=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $2}'`
  PRE_TEST_CHECK_RETRY_INTERVAL=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $4}'`
  PRE_TEST_CHECK_TIMEOUT=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $6}'`
  USER=`echo $i | cut -d "|" -f 4`
  Wait_time=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $8}'`
  Wait_action=`echo $temp | awk -F"\"" '{ print $3}' | awk '{ print $10}'`
  echo -e ${jid}${PIPED}${Scenario}${PIPED}${TEST_NAME}${PIPED}${time}${PIPED}${date}${PIPED}${PRE_TEST_CHECK_TIMEOUT}${PIPED}${PRE_TEST_CHECK_RETRY_COUNT}${PIPED}${PRE_TEST_CHECK_RETRY_INTERVAL}${PIPED}${USER}${PIPED}${Wait_time}${PIPED}${Wait_action}
fi
    

#!/bin/sh
#######################################################################################################
# Name   : nsi_db_get_loc_acc_bro
# Syntax : nsi_db_get_loc_acc_bro --testrun <value> --object <value>
#
#   Author : Ankit Agarwal, Abhisehk Mittal
#   Date :   12 June 2012
#   Purpose : This shell will display the result in the following format based on the object type given
#             UrlId:SessionName:PageName:UrlName(for url)
#             PageId:SessionName:PageName(for page)
#             TransId:TansactionName(for transaction)
#             SessionId:SessionName(for session) 
# Example : nsi_db_get_obj_name_ids --testrun 11642 --object 0
#
#
#########################################################################################################


######################################################################
#                     Variables and init settings
#####################################################################


TRNUM=""
OBJECT=""
SELECT="SELECT"
FROM="FROM"
ORDER="ORDER BY"
FILE_TYPE=""
GET_COUNT=0
#Including nsi_db_utils
. $NS_WDIR/bin/nsi_db_utils

########################################################################
#                       Functions's Definitions
#######################################################################

#Function for displaying usage
usage()
{
 echo "$*"
 echo "Usage:"
 echo "$0 --testrun <value> --object <value>"
 echo ""
 echo "Where"
 echo "  --testrun is test run number, which is mandatory argument."
 echo "  --object is object selection(0-URL, 1-Page, 2-Transaction, 3-Session), which is mandatory argument."
 exit 1
}

#Function for checking mandatory argument
chk_args()
{
 
  if [ "X$TRNUM" == "X" ]; then
    usage "Test run argument is missing"
  fi
  if [ "X$OBJECT" == "X" ]; then
    usage "Object type is missing"
  fi
}



#################################################################
#                      Calling functions
#################################################################

#Parsing the arguments
if [ "X$*" = "X" ];then
usage
fi
init $*
RUNNING=$?

#Checking Mandatory arguments
chk_args

# Setting query files
set_query_files $TRNUM


if [ $OBJECT -eq 3 ];then
  SELECT="$SELECT SessionIndex,SessionName"
  FROM="$FROM SessionTable_$TRNUM"
  ORDER="$ORDER SessionName"
  FILE_TYPE="sess_ids.dat"
elif [ $OBJECT -eq 2 ];then
  SELECT="$SELECT TransactionIndex,TransactionName" 
  FROM="$FROM TransactionTable_$TRNUM" 
  ORDER="$ORDER TransactionName"
  FILE_TYPE="tx_ids.dat"
elif [ $OBJECT -eq 1 ];then
  SELECT="$SELECT PageIndex,SessionName, PageName" 
  FROM="$FROM PageTable_$TRNUM, SessionTable_$TRNUM"
  WHERE="WHERE PageTable_$TRNUM.SessionIndex = SessionTable_$TRNUM.SessionIndex"
  ORDER="$ORDER SessionName, PageName"
  FILE_TYPE="pg_ids.dat"
elif [ $OBJECT -eq 0 ];then
  #SELECT="$SELECT UrlIndex,SessionName, PageName, UrlName"
  #FROM="$FROM UrlTable_$TRNUM, PageTable_$TRNUM, SessionTable_$TRNUM"
  #WHERE="WHERE UrlTable_$TRNUM.PageIndex = PageTable_$TRNUM.PageIndex AND 
  #             PageTable_$TRNUM.SessionIndex = SessionTable_$TRNUM.SessionIndex"
  #ORDER="$ORDER  SessionName, PageName, UrlName"
  SELECT="$SELECT ARRAY_AGG(UrlIndex) as urlindex, UrlName"
  FROM="$FROM UrlTable_$TRNUM"
  GROUP="GROUP BY UrlName"
  ORDER="$ORDER UrlName"

  if [ "X$PAGE" != "X" ]; then
    WHERE="WHERE PageTable_$TRNUM.pageIndex = UrlTable_$TRNUM.PageIndex"
    WHERE="$WHERE $NEWLINE  AND PageTable_$TRNUM.PageName = '$PAGE'"
    FROM="$FROM, PageTable_$TRNUM"
  fi

  if [ "X$SCRIPT" != "X" ]; then
    if [ "X$PAGE" = "X" ]; then
      WHERE="WHERE PageTable_$TRNUM.pageIndex = UrlTable_$TRNUM.PageIndex"
      FROM="$FROM, PageTable_$TRNUM"
    fi

    WHERE="$WHERE $NEWLINE  AND SessionTable_$TRNUM.SessionIndex = PageTable_$TRNUM.SessionIndex"
    WHERE="$WHERE $NEWLINE  AND SessionTable_$TRNUM.SessionName = '$SCRIPT'"
    FROM="$FROM, SessionTable_$TRNUM"
    
  fi
  
  FILE_TYPE="url_ids.dat"
# added generator with object id 21 to show data in filters
elif [ $OBJECT -eq 21 ]; then
  SELECT="$SELECT GeneratorID,GeneratorName"
  FROM="$FROM GeneratorTable_$TRNUM"
  ORDER="$ORDER GeneratorName"
  FILE_TYPE="generator_ids.dat"
else
  echo "Unknown object type ($OBJECT), expected object types : 0/1/2/3/21"
  exit 1
fi

if [ "X$LIMIT" != "X" ]; then
  LIMIT="LIMIT $LIMIT"
fi

if [ "X$OFFSET" != "X" ]; then
  OFFSET="OFFSET $OFFSET"
fi

#RET value 0 -if file already cached and test is not running, 1- if file not cached and test is not running ,              2- if test is running
#if [ $RUNNING -ne 2 ];then
#  check_cached $FILE_TYPE
#  RET=$?
#else
#  RET=2
#fi

#if [ $RET -eq 2 -o $RET -eq 1 ];then
  if [ $GET_COUNT -eq 0 ];then
    ns_run_query
  else
    FROM="FROM $NEWLINE  ($NEWLINE  $SELECT $NEWLINE$FROM $NEWLINE$WHERE $NEWLINE$GROUP $NEWLINE  ) As \"Total\" "
    SELECT="SELECT $NEWLINE  Count(*) As \"Rows\" "
    WHERE=""
    GROUP=""
    ORDER=""
    ns_run_query
  fi
#fi
#show_query_result
if [ $OBJECT -eq 0 ];then
  # In case of url, we will remove the { and } from the urlid fields.
  show_query_result_colon_sep | sed -r "s/\{//g" | sed -r "s/\}//g" > $DBQ_CACHE_DIR/$FILE_TYPE
else 
  show_query_result_colon_sep > $DBQ_CACHE_DIR/$FILE_TYPE
fi

cat $DBQ_CACHE_DIR/$FILE_TYPE 

exit 0

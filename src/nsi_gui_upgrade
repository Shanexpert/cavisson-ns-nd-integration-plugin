#! /bin/sh

cd $NS_WDIR/webapps
if [ `pwd` != "$NS_WDIR/webapps" ];then
  msgout_both "You must be in $NS_WDIR/webapps to execute upgrade cmd"
  exit 1
fi

RELEASE_CMD="nsi_get_linux_release_ex"
DISTRO=`$RELEASE_CMD -d`
RELEASE=`$RELEASE_CMD -r`
CavService=$HOME_DIR/bin/cav_service

if [ -d $TOMCAT_DIR/webapps ];then
  rm -rf $TOMCAT_DIR/webapps
fi

msgout_both "Removing directories of old version"
rm -rf netvision nettest realTimeGraph recorder analyze controller help netstorm netfunction netocean clientAPIdocs domainadmin ROOT csibank.war csibank .tomcat harviewer gui*.tar.gz vjdbc.war vjdbc SpringRemotingProxy.war nsecom.war nsecom OTVSpringHttpInvokerServer.war OTVSpringHttpInvokerServer admin headerfooter  netdiagnostics ipMgmt profiles/WEB-INF IntegratedServer DashboardServer PerfDashboard dashboard nvsm webdashboard netcloud scheduler reports/WEB-INF common ProductUI RunCommand WEB-DDR configUI CommitDataFiles

msgout_both "Uncompressing tar file - $GZ"
tar xvzf $NS_WDIR/.rel/$GZ >> $LOG_FILE_NAME
if [ "$?" != 0 ];then
  msgout_both "Error: Error in uncompressing the $GZ"
  exit 1
fi

CONTROLLER_TYPE=`nsi_show_config -t`

#handling for NT subtype
SUB_TYPE=`nsi_show_config -s| sed -n '2p'`
if [ "X$SUB_TYPE" != "X" ];then
  echo "Product sub type - ${SUB_TYPE}"
fi


IS_NV_ENABLE=0
if [[ "$CONTROLLER_TYPE" == "NV" || "$SUB_TYPE" == "ALL" ]];then
  IS_NV_ENABLE=1 
fi

#TODO change == to =   and put " "
if [ "NS" = "$CONTROLLER_TYPE" -o "NS>NO" = "$CONTROLLER_TYPE" ];then  
  rm -rf netfunction netocean  NFCApi NFTutorial NFGuide nvsm
  if [ "NT" != "$SUB_TYPE" ];then
    rm -rf nettest
  fi 
elif [ "NS+NO" = "$CONTROLLER_TYPE"  ];then
  rm -rf nvsm nettest
elif [ "NO" = "$CONTROLLER_TYPE" ];then
  rm -rf help  nvsm nettest
elif [ "NF" = "$CONTROLLER_TYPE" ];then
  rm -rf help  netocean nvsm nettest
elif [ $IS_NV_ENABLE -eq 1 ];then
  rm -rf help  netfunction netocean NFCApi NFTutorial NFGuide clientAPIdocs nvsm nettest
elif [ "NDE" = "$CONTROLLER_TYPE" ];then
  rm -rf netfunction netocean NFTutorial clientAPIdocs NFCApi NFGuide nettest
elif [ "ED" = "$CONTROLLER_TYPE" ];then
  rm -rf netfunction netocean NFTutorial clientAPIdocs NFCApi NFGuide nettest nvsm help 
fi

if [ $IS_NV_ENABLE -eq 0 ];then
  rm -rf netvision
fi
 
msgout_both "Making softlink of thirdparty jar files..."
if [ ! -d $NS_WDIR/thirdparty/gui_signed_jars ];then
  msgout_both " "
  msgout_both "Error: Directory gui_signed_jars doesn't exist on the path $NS_WDIR/thirdparty/. First install thirdparty and then upgrade the gui build."
    msgout_both "GUI upgradation failed."
  exit 1
fi

if [ ! -f netstorm/WEB-INF/lib/used_jars.list ];then
  msgout_both " "
  msgout_both "Error: File doesn't exist on the path $NS_WDIR/webapps/netstorm/WEB-INF/lib/."
  msgout_both "GUI upgradation failed."
  exit 1
fi
while read line
do
  jar_name=`echo $line | awk -F'|' '{printf $1" "}'`

  #trim jar name
  jar_name=`echo $jar_name | sed 's/\s+//g'`

  if [ "X`echo $jar_name | cut -c -1`" = "X#" ];then
    echo "Ignoring line $line." >>$LOG_FILE_NAME
    continue
  fi

  echo "Making softlink jar: $jar_name" >>$LOG_FILE_NAME
  if [ ! -z $jar_name ];then 
  if [ ! -f $NS_WDIR/thirdparty/gui_signed_jars/$jar_name ];then
    msgout_both " "
    msgout_both "Error: jar: $NS_WDIR/thirdparty/gui_signed_jars/$jar_name doesn't exist."
    msgout_both "GUI upgradation failed."
    exit 1
  fi
  fi

  if [ "cdi-api-1.0.jar" == $jar_name -o "com.fasterxml.jackson.databind.jar" == $jar_name -o "hk2-api-2.4.0-b31.jar" == $jar_name -o "hk2-locator-2.4.0-b31.jar" == $jar_name -o "hk2-utils-2.4.0-b31.jar" == $jar_name -o "jackson-annotations-2.1.2.jar" == $jar_name -o "jackson-core-2.0.0.jar" == $jar_name -o "jackson-jaxrs-base-2.2.3.jar" == $jar_name -o "jackson-jaxrs-json-provider-2.0.2.jar" == $jar_name -o "javax.annotation-api-1.2.jar" == $jar_name -o "javax.inject-2.4.0-b31.jar" == $jar_name -o "javax.json-1.0.2.jar" == $jar_name -o "javax.servlet-api-3.0.1.jar" == $jar_name -o "javax.ws.rs-api-2.0.1.jar" == $jar_name -o "jersey-client.jar" == $jar_name -o "jersey-common.jar" == $jar_name -o "jersey-container-servlet-core.jar" == $jar_name -o "jersey-guava-2.22.1.jar" == $jar_name -o "jersey-media-json-jackson-2.13.jar" == $jar_name -o "jersey-server.jar" == $jar_name -o "jettison-1.3.jar" == $jar_name -o "org.apache.oltu.oauth2.authzserver-0.31.jar" == $jar_name -o "org.apache.oltu.oauth2.client-1.0.0.jar" == $jar_name -o "org.apache.oltu.oauth2.common-0.31.jar" == $jar_name -o "slf4j-simple-1.6.1.jar" == $jar_name -o "validation-api-1.1.0.Final.jar" == $jar_name ];then
    if [ -d netvision/WEB-INF/lib -a ! -f netvision/WEB-INF/lib/$jar_name ];then
      ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name netvision/WEB-INF/lib/. >> $LOG_FILE_NAME
    fi
  fi
 
  if [ "j2ee_api.jar" != $jar_name -a "javaee-api-5.0.3.jar" != $jar_name -a "servlet-api.jar" != $jar_name -a "jakarta-poi-2.5.jar" != $jar_name -a "jcs-1.3.jar" != $jar_name -a "concurrent.jar" != $jar_name ];then 
    if [ ! -f netstorm/WEB-INF/lib/$jar_name ];then 
      ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name netstorm/WEB-INF/lib/. >> $LOG_FILE_NAME
      if [ "$?" != 0 ];then
        msgout_both "Error: Error in making softlink of thirdparty jar files. Could not make softlink of $jar_name."
        msgout_both "GUI upgradation failed."
        exit 1
      fi
    fi
  fi

  #handle to copy jar for scheduler
  if [ "j2ee_api.jar" != $jar_name -a "javaee-api-5.0.3.jar" != $jar_name -a "servlet-api.jar" != $jar_name -a "jcs-1.3.jar" != $jar_name -a "concurrent.jar" != $jar_name ];then
      if [ ! -f scheduler/WEB-INF/lib/$jar_name ];then
        ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name scheduler/WEB-INF/lib/. >> $LOG_FILE_NAME
        if [ "$?" != 0 ];then
          msgout_both "Error: Error in making softlink thirdparty jar files into scheduler/WEB-INF/lib/. Could not make softlink of $jar_name."
          msgout_both "GUI upgradation failed."
          exit 1
        fi
      fi
   fi


   #handle to copy jar for template, it will copy some jars which are available in thirdparty
  
   if [[ $DISTRO == "Ubuntu" &&  $RELEASE -eq 1204 ]];then
   if [ "json_simple-1.1.jar" == $jar_name -o "commons-codec-1.6.jar" == $jar_name -o "commons-dbcp-1.4.jar" == $jar_name -o "commons-pool-1.6.jar" == $jar_name -o "poi-3.14.jar" == $jar_name -o "poi-ooxml-3.14.jar" == $jar_name -o "postgresql-9.1-901.jdbc4.jar" == $jar_name -o "commons-jexl-2.1.1.jar" == $jar_name -o "jcl-over-slf4j-1.7.12.jar" == $jar_name -o "jxls-2.4.1.jar" == $jar_name -o "logback-classic-1.1.3.jar" == $jar_name -o "poi-ooxml-schemas-3.14.jar" == $jar_name -o "jackson-all-1.9.0.jar" == $jar_name -o "jxl-2.6.10.jar" == $jar_name -o "jxls-poi-1.0.13.jar" == $jar_name -o "logback-core-1.1.3.jar" == $jar_name -o "slf4j-api-1.7.12.jar" == $jar_name];then
    if [ ! -f reports/WEB-INF/lib/$jar_name ];then
      ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name reports/WEB-INF/lib/. >> $LOG_FILE_NAME
      if [ "$?" != 0 ];then
        msgout_both "Error: Error in making softlink thirdparty jar files into reports/WEB-INF/lib/. Could not make softlink of $jar_name."
        msgout_both "GUI upgradation failed."
        exit 1
      fi
    fi
  fi
fi

    if [[ $DISTRO == "Ubuntu" &&  $RELEASE -eq 1604 || $DISTRO == "Redhat" ]];then
   if [ "json_simple-1.1.jar" == $jar_name -o "commons-codec-1.6.jar" == $jar_name -o "commons-dbcp-1.4.jar" == $jar_name -o "commons-pool-1.6.jar" == $jar_name -o "poi-3.14.jar" == $jar_name -o "poi-ooxml-3.14.jar" == $jar_name -o "postgresql-42.0.0.jre7.jar" == $jar_name -o "commons-jexl-2.1.1.jar" == $jar_name -o "jcl-over-slf4j-1.7.12.jar" == $jar_name -o "jxls-2.4.1.jar" == $jar_name -o "logback-classic-1.1.3.jar" == $jar_name -o "poi-ooxml-schemas-3.14.jar" == $jar_name -o "jackson-all-1.9.0.jar" == $jar_name -o "jxl-2.6.10.jar" == $jar_name -o "jxls-poi-1.0.13.jar" == $jar_name -o "logback-core-1.1.3.jar" == $jar_name -o "slf4j-api-1.7.12.jar" == $jar_name ];then
    if [ ! -f reports/WEB-INF/lib/$jar_name ];then
      ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name reports/WEB-INF/lib/. >> $LOG_FILE_NAME
      if [ "$?" != 0 ];then
        msgout_both "Error: Error in making softlink thirdparty jar files into reports/WEB-INF/lib/. Could not make softlink of $jar_name."
        msgout_both "GUI upgradation failed."
        exit 1
      fi
    fi
  fi
fi


  #TODO: Use WEB-INF/lib in all java GUI
  if [ ! -f netstorm/lib/$jar_name ];then
    ln -sf ../../../thirdparty/gui_signed_jars/$jar_name netstorm/lib/. >> $LOG_FILE_NAME
    if [ "$?" != 0 ];then
      msgout_both "Error: Error in making softlink of thirdparty jar files. Could not make softlink of $jar_name."
      msgout_both "GUI upgradation failed."
      exit 1
    fi
  fi

  if [ "NDE" == "$CONTROLLER_TYPE" -o "NS" == "$CONTROLLER_TYPE" -o "NS>NO" == "$CONTROLLER_TYPE" -o "NS+NO" == "$CONTROLLER_TYPE" -o "NO" == "$CONTROLLER_TYPE" -o "NF" == "$CONTROLLER_TYPE" -o $IS_NV_ENABLE -eq 1 -o "ED" == "$CONTROLLER_TYPE" ];then
    #Chekcing jar already exist 
    if [ ! -f netdiagnostics/lib/$jar_name ];then 
      if [ -d netdiagnostics/lib/ ];then ln -sf ../../../thirdparty/gui_signed_jars/$jar_name netdiagnostics/lib/.; else mkdir -p netdiagnostics/lib/; ln -sf ../../../thirdparty/gui_signed_jars/$jar_name netdiagnostics/lib/.; fi  >> $LOG_FILE_NAME
      if [ "$?" != 0 ];then
        msgout_both "Error: Error in making softlink thirdparty jar files into netdiagnostics/lib/. Could not make softlink of $jar_name."
        msgout_both "GUI upgradation failed."
        exit 1
      fi
    fi

    if [ "j2ee_api.jar" != $jar_name -a "javaee-api-5.0.3.jar" != $jar_name -a "servlet-api.jar" != $jar_name -a "jakarta-poi-2.5.jar" != $jar_name -a "jcs-1.3.jar" != $jar_name -a "concurrent.jar" != $jar_name ];then
      if [ ! -f netdiagnostics/WEB-INF/lib/$jar_name ];then 
        ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name netdiagnostics/WEB-INF/lib/. >> $LOG_FILE_NAME
        if [ "$?" != 0 ];then
          msgout_both "Error: Error in making softlink thirdparty jar files into netdiagnostics/WEB-INF/lib/. Could not make softlink of $jar_name."
          msgout_both "GUI upgradation failed."
          exit 1
        fi
      fi
    fi
  fi

  if [ $IS_NV_ENABLE -eq 1 ];then 
    if [ "j2ee_api.jar" != $jar_name -a "javaee-api-5.0.3.jar" != $jar_name -a "servlet-api.jar" != $jar_name -a "jakarta-poi-2.5.jar" != $jar_name -a "harlib-jackson-1.0b10.jar" != $jar_name -a "itext-paulo-154.jar" != "$jar_name" -a "iText-common.jar" != "$jar_name" -a "commons-collections-3.2.1.jar" != "$jar_name" -a "commons-lang-2.6.jar" != "$jar_name" ];then
      if [ ! -f $NS_WDIR/webapps/netvision/WEB-INF/lib/$jar_name ];then
        ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name $NS_WDIR/webapps/netvision/WEB-INF/lib/. >> $LOG_FILE_NAME
        if [ "$?" != 0 ];then
          msgout_both "Error: Error in making softlink thirdparty jar files into netvision/WEB-INF/lib/. Could not make softlink of $jar_name."
          msgout_both "GUI upgradation failed."
          exit 1
        fi
      fi
    fi
  fi

 #-----------------------------------------copy jars to nettest/WEB-INF/lib------------------------------------------
 if [ "XNT" == "X$SUB_TYPE" ];then
   if [ "postgresql-9.1-901.jdbc4.jar" == $jar_name -o "commons-pool-1.6.jar" == $jar_name -o "commons-pool-1.6.jar" == $jar_name -o "commons-dbcp-1.4.jar" == $jar_name -o "httpclient-4.3.3.jar" == $jar_name -o "httpcore-4.3.2.jar" == $jar_name -o "org.apache.commons.beanutils.jar" == $jar_name -o "org-apache-commons-logging.jar" == $jar_name -o "servlet-api.jar" == $jar_name -o "commons-jexl-1.0.jar" == $jar_name -o "jxls-core-0.9.1.jar" == $jar_name -o "javax.json-1.0.2.jar" == $jar_name -o "javax.servlet-api-3.0.1.jar" == $jar_name -o "javax.ws.rs-api-2.0.1.jar" == $jar_name -o "jersey-client.jar" == $jar_name -o "jersey-common.jar" == $jar_name -o "jersey-container-servlet-core.jar" == $jar_name -o "jersey-guava-2.22.1.jar" == $jar_name -o "jersey-media-json-jackson-2.13.jar" == $jar_name -o "jersey-server.jar" == $jar_name -o "commons-codec-1.6.jar" == $jar_name -o "org.apache.oltu.oauth2.authzserver-0.31.jar" == $jar_name -o "org.apache.oltu.oauth2.client-1.0.0.jar" == $jar_name -o "slf4j-simple-1.6.1.jar" == $jar_name -o "json-simple-1.1.1.jar" == $jar_name -o "jsoup-1.8.3.jar" == $jar_name -o "gson-2.2.2.jar" == $jar_name -o "mchange-commons-java-0.2.15.jar" == $jar_name -o "hibernate-c3p0-4.3.11.Final.jar" == $jar_name -o "connection-pooling3.0-0.9.2.1.jar" == $jar_name ];then
    if [ -d $NS_WDIR/webapps/nettest/WEB-INF/lib -a ! -f $NS_WDIR/webapps/nettest/WEB-INF/lib/$jar_name ];then
      if [ -f $NS_WDIR/thirdparty/gui_signed_jars/$jar_name ];then
      ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name $NS_WDIR/webapps/nettest/WEB-INF/lib/. >> $LOG_FILE_NAME
      fi
    fi
  fi

    if [ "j2ee_api.jar" != $jar_name -a "javaee-api-5.0.3.jar" != $jar_name -a "servlet-api.jar" != $jar_name -a "slf4j-api-1.5.8.jar" != $jar_name -a "jakarta-poi-2.5.jar" != $jar_name -a "jcs-1.3.jar" != $jar_name -a "concurrent.jar" != $jar_name ];then
      if [ ! -f $NS_WDIR/webapps/nettest/WEB-INF/lib/$jar_name ];then
       if [ -f $NS_WDIR/thirdparty/gui_signed_jars/$jar_name ];then
         ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name $NS_WDIR/webapps/nettest/WEB-INF/lib/. >> $LOG_FILE_NAME
        fi
        if [ "$?" != 0 ];then
          msgout_both "Error: Error in making softlink thirdparty jar files into nettest/WEB-INF/lib/. Could not make softlink of $jar_name."
          msgout_both "GUI upgradation failed."
          exit 1
        fi
      fi
    fi
  fi

#-----------------------------------------------------------------------------------------------------------------
     
done < netstorm/WEB-INF/lib/used_jars.list
rm $NS_WDIR/webapps/netstorm/WEB-INF/lib/slf4j-api-1.5.8.jar
rm $NS_WDIR/webapps/netdiagnostics/WEB-INF/lib/slf4j-api-1.5.8.jar

if [ $IS_NV_ENABLE -eq 1 ];then
  # Remove old jars.
  rm -f $NS_WDIR/webapps/netvision/WEB-INF/lib/slf4j-api-1.5.8.jar; 
  rm -f $NS_WDIR/webapps/netvision/WEB-INF/lib/slf4j-log4j12-1.5.8.jar;
  rm -f $NS_WDIR/webapps/netvision/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar;
  rm -f $NS_WDIR/webapps/netvision/WEB-INF/lib/jersey-bundle-1.19.jar;
  NV_JARS=(dynamicreports-core-5.1.0.jar jasperreports-6.16.0.jar itext-2.1.7.js8.jar commons-collections4-4.2.jar commons-lang3-3.6.jar java-json-schema.jar commons-math3-3.2.jar jackson-annotations-2.9.1.jar jackson-core-2.9.1.jar jackson-databind-2.9.1.jar postgresql-9.4.1209.jre7.jar)
  for jar_name in ${NV_JARS[*]}; do
    if [ -f $NS_WDIR/thirdparty/gui_signed_jars/$jar_name ];then
      ln -sf ../../../../thirdparty/gui_signed_jars/$jar_name $NS_WDIR/webapps/netvision/WEB-INF/lib/. >> $LOG_FILE_NAME
    else
      echo "Error: $jar_name not present." >>$LOG_FILE_NAME
    fi
  done
fi

if [ "NF" = "$CONTROLLER_TYPE" ];then  
  ln -sf ../../../thirdparty/gui_signed_jars/jgraphx.jar netfunction/lib/. >> $LOG_FILE_NAME
  if [ "$?" != 0 ];then
    msgout_both "Error: Error in making softlink thirdparty jar files. Could not make softlink of jgraphx.jar in netfunction lib."
    msgout_both "GUI upgradation failed."
    exit 1
  fi
  ln -sf ../../../../thirdparty/gui_signed_jars/jgraphx.jar netfunction/WEB-INF/lib/. >> $LOG_FILE_NAME
  if [ "$?" != 0 ];then
    msgout_both "Error: Error in making softlink thirdparty jar files. Could not make softlink of jgraphx.jar in netfunction WEB-INF."
    msgout_both "GUI upgradation failed."
    exit 1
  fi
fi

mkdir -p $NS_WDIR/webapps/sys/drilldown_queries
cp -r $NS_WDIR/webapps/netstorm/analyze/drill_down_queries/ddrq_samples/*.ddrq $NS_WDIR/webapps/sys/drilldown_queries >> $LOG_FILE_NAME

if [ "$?" != 0 ];then
  msgout_both "Error: Error in copying system defined queries files from analyze/drill_down_queries/ddrq_samples to drill_down_queries"
  exit 1
fi

mkdir -p /home/cavisson/cloud/aws
cp -r $NS_WDIR/webapps/sys/generic_ui_config/region_mapping.properties /home/cavisson/cloud/aws/

msgout_both "Making softlink of help directories into webapps directory"
if [ -d /home/cavisson/help ];then
  if [ -d /home/cavisson/help/help ];then
    ln -s /home/cavisson/help/help $NS_WDIR/webapps/. >> $LOG_FILE_NAME
  else
    msgout_both "Error: directory /home/cavisson/help/help does not exit."
    exit 1
  fi
  
  if [ "NF" = "$CONTROLLER_TYPE" -o "NO" = "$CONTROLLER_TYPE" -o "NS+NO" =  "$CONTROLLER_TYPE" ];then  
    if [ -d /home/cavisson/help/NFCApi ];then
      ln -s /home/cavisson/help/NFCApi $NS_WDIR/webapps/. >> $LOG_FILE_NAME
    else
      msgout_both "Error: directory /home/cavisson/help/NFCApi does not exit."
      exit 1
    fi
    if [ -d /home/cavisson/help/NFGuide ];then
      ln -s /home/cavisson/help/NFGuide $NS_WDIR/webapps/. >> $LOG_FILE_NAME
    else
      msgout_both "Error: directory /home/cavisson/help/NFGuide does not exit."
      exit 1
    fi
    if [ -d /home/cavisson/help/NFTutorial ];then
      ln -s /home/cavisson/help/NFTutorial $NS_WDIR/webapps/. >> $LOG_FILE_NAME
    else
      msgout_both "Error: directory /home/cavisson/help/NFTutorial does not exit."
      exit 1
    fi
  fi
else
  msgout_both "Error: /home/cavisson/help directory doesn't exist"
  exit 1
fi

rm -rf $NS_WDIR/webapps/netocean
# we need to make this dir with root because sometimes due to some permisson issue netstorm is failed to create dir

if [ "NO" = "$CONTROLLER_TYPE" -o "NS+NO" = "$CONTROLLER_TYPE" ];then
  mkdir -p $NS_WDIR/webapps/netocean
  chown -R cavisson:cavisson $NS_WDIR/webapps/netocean

  cp -r $NS_WDIR/webapps/netfunction/* $NS_WDIR/webapps/netocean >> $LOG_FILE_NAME
  cp -r $NS_WDIR/webapps/netstorm/analyze $NS_WDIR/webapps/netocean >> $LOG_FILE_NAME
  cp -r $NS_WDIR/webapps/netstorm/realTimeGraph $NS_WDIR/webapps/netocean >> $LOG_FILE_NAME
  cp -r $NS_WDIR/webapps/netstorm/WEB-INF/lib/* $NS_WDIR/webapps/netocean/WEB-INF/lib >> $LOG_FILE_NAME
  cp -r $NS_WDIR/webapps/netstorm/lib/* $NS_WDIR/webapps/netocean/lib >> $LOG_FILE_NAME
  if [ "$?" != 0 ];then
    msgout_both "Error: Error in copying files from netfunction to netocean"
    exit 1
  fi
fi

#Checking for availability of PerfDashboard
if [ -d "$NS_WDIR/webapps/PerfDashboard" ];then
  #Changing owner from root to netstorm.
  chown -R cavisson:cavisson $NS_WDIR/webapps/PerfDashboard/
  cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar PerfDashboard/WEB-INF/lib/
  ln -sf ../../../../thirdparty/gui_signed_jars/commons-io-2.2.jar PerfDashboard/WEB-INF/lib/
fi

#Checking for availability of ProductUI by amit rai
if [ -d "$NS_WDIR/webapps/ProductUI" ];then
  #Changing owner from root to netstorm.
  chown -R cavisson:cavisson $NS_WDIR/webapps/ProductUI/
#  ln -s $NS_WDIR/thirdparty/gui_signed_jars/commons-io-2.2.jar ProductUI/WEB-INF/lib/
if [ ! -d "$NS_WDIR/data_files" ];then
  # Making data directory 
  mkdir -p $NS_WDIR/data_files
fi
fi

#Checking for availability of ProductUI by amit rai
if [ -d "$NS_WDIR/webapps/RunCommand" ];then
  #Changing owner from root to netstorm.
  chown -R cavisson:cavisson $NS_WDIR/webapps/RunCommand/
fi

if [ -d "$NS_WDIR/webapps/CommitDataFiles" ];then
  #Changing owner from root to netstorm.
  chown -R cavisson:cavisson $NS_WDIR/webapps/CommitDataFiles/
fi

#Checking for availability of WEB-DDR
if [ -d "$NS_WDIR/webapps/WEB-DDR" ];then
  #Changing owner from root to netstorm.
  chown -R cavisson:cavisson $NS_WDIR/webapps/WEB-DDR/
fi

#Creating Netcloud Project in webapps
if [ "NC" = "$CONTROLLER_TYPE" ];then
  mkdir -p "$NS_WDIR/webapps/netcloud"
  chown -R cavisson:cavisson $NS_WDIR/webapps/netcloud/
  cp -r $NS_WDIR/webapps/netstorm/* $NS_WDIR/webapps/netcloud/
fi

#Creating nodeapps if not available.
if [ ! -d "$NS_WDIR/nodeapps" ];then
  mkdir $NS_WDIR/nodeapps
fi

#Removing the old nodeapps server directory.
if [ -d "$NS_WDIR/nodeapps/IntegratedNodeServer" ];then
  rm -rf $NS_WDIR/nodeapps/IntegratedNodeServer
fi

#Now copying tar to nodeapps from webapps.
mv $NS_WDIR/webapps/nodeapps/nodeapps.tar.gz $NS_WDIR/nodeapps

#Extracting TAR.
tar -xvzf $NS_WDIR/nodeapps/nodeapps.tar.gz -C $NS_WDIR/nodeapps

#Now checking the configuration folder of multiDC.
if [ ! -d "$NS_WDIR/webapps/sys/multiDC" ];then
  mkdir -p $NS_WDIR/webapps/sys/multiDC/conf
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/nodeapps/IntegratedNodeServer/conf/* $NS_WDIR/webapps/sys/multiDC/conf
elif [ ! -f "$NS_WDIR/webapps/sys/multiDC/conf/config.json" ]
then    
  cp $NS_WDIR/nodeapps/IntegratedNodeServer/conf/config.json $NS_WDIR/webapps/sys/multiDC/conf
fi

#Now checking the presence of file "WhiteGroupList.json" in the desired folder of Multi-DC
if [ ! -f "$NS_WDIR/webapps/sys/multiDC/conf/WhiteGroupList.json" ]
then  
  cp $NS_WDIR/nodeapps/IntegratedNodeServer/conf/WhiteGroupList.json $NS_WDIR/webapps/sys/multiDC/conf
fi

#Copy file "cacheRequests.json" in the desired folder of Multi-DC
cp $NS_WDIR/nodeapps/IntegratedNodeServer/conf/cacheRequests.json $NS_WDIR/webapps/sys/multiDC/conf

#Now checking the presence of file "SAASConfig.json" in the desired folder of Multi-DC
if [ ! -f "$NS_WDIR/webapps/sys/multiDC/conf/SAASConfig.json" ]
then
  cp $NS_WDIR/nodeapps/IntegratedNodeServer/conf/SAASConfig.json $NS_WDIR/webapps/sys/multiDC/conf
fi

if [ ! -f "$NS_WDIR/webapps/sys/multiDC/conf/bootconfig.js" ]
then
cp $NS_WDIR/nodeapps/IntegratedNodeServer/conf/bootconfig.js $NS_WDIR/webapps/sys/multiDC/conf
fi


#Copying cert directory if not available
if [ ! -d "$NS_WDIR/webapps/sys/multiDC/cert" ];then
 cp -r $NS_WDIR/nodeapps/IntegratedNodeServer/cert $NS_WDIR/webapps/sys/multiDC
fi

#Now removing the default configuration folder coming with build.
rm -rf $NS_WDIR/nodeapps/IntegratedNodeServer/conf
mv $NS_WDIR/nodeapps/IntegratedNodeServer/cert $NS_WDIR/nodeapps/IntegratedNodeServer/cert-default

#Creating softlink for config file from sys/multiDC.
ln -sf ../../webapps/sys/multiDC/conf $NS_WDIR/nodeapps/IntegratedNodeServer/
ln -sf ../../webapps/sys/multiDC/cert $NS_WDIR/nodeapps/IntegratedNodeServer/

#Removing TAR File
rm -rf $NS_WDIR/nodeapps/nodeapps.tar.gz
chown -R cavisson.cavisson $NS_WDIR/nodeapps/

#Removing nodeapps from webapps if exist.
if [ -d "$NS_WDIR/webapps/nodeapps" ];then
    rm -rf $NS_WDIR/webapps/nodeapps
fi

#create .script_lib directory in thirdparty directory
if [ ! -d "$NS_WDIR/../thirdparty/.script_lib" ]; then
  mkdir -p "$NS_WDIR/../thirdparty/.script_lib"
fi

#Creting RDT folder
if [ -d "$NS_WDIR/webapps/JavaTypeScriptFramework" ];then
  if [ -d "$NS_WDIR/RDT" ];then
    if [ -e "$NS_WDIR/RDT/config/RDTConfig.dat" ];then
      cp $NS_WDIR/RDT/config/RDTConfig.dat $NS_WDIR/RDT
      rm -rf $NS_WDIR/RDT/config/
      rm -rf $NS_WDIR/RDT/lib/
      mv $NS_WDIR/webapps/JavaTypeScriptFramework/RTDConfig.tar.gz $NS_WDIR/RDT
      tar -xvzf $NS_WDIR/RDT/RTDConfig.tar.gz -C $NS_WDIR/RDT
      if [ -d "$NS_WDIR/webapps/RDT/tessdata" ];then
        rm -rf $NS_WDIR/webapps/RDT/tessdata
      fi
      tar -xvzf $NS_WDIR/RDT/tessdata.tar.gz -C $NS_WDIR/RDT
      rm -rf $NS_WDIR/RDT/RTDConfig.tar.gz
      rm -rf $NS_WDIR/RDT/tessdata.tar.gz
#     mv $NS_WDIR/RDT/config/RDTConfig.dat $NS_WDIR/RDT/config/RDTConfig.dat_bak
      mv $NS_WDIR/RDT/RDTConfig.dat $NS_WDIR/RDT/config/RDTConfig.dat_bak
    else
      mkdir -p $NS_WDIR/RDT
      mv $NS_WDIR/webapps/JavaTypeScriptFramework/RTDConfig.tar.gz $NS_WDIR/RDT
      tar -xvzf $NS_WDIR/RDT/RTDConfig.tar.gz -C $NS_WDIR/RDT
      tar -xvzf $NS_WDIR/RDT/tessdata.tar.gz -C $NS_WDIR/RDT
      rm -rf $NS_WDIR/RDT/RTDConfig.tar.gz
      rm -rf $NS_WDIR/RDT/tessdata.tar.gz
    fi
  else
    mkdir -p $NS_WDIR/RDT
    mv $NS_WDIR/webapps/JavaTypeScriptFramework/RTDConfig.tar.gz $NS_WDIR/RDT
    tar -xvzf $NS_WDIR/RDT/RTDConfig.tar.gz -C $NS_WDIR/RDT
    tar -xvzf $NS_WDIR/RDT/tessdata.tar.gz -C $NS_WDIR/RDT
    rm -rf $NS_WDIR/RDT/RTDConfig.tar.gz
    rm -rf $NS_WDIR/RDT/tessdata.tar.gz
  fi
  chown -R cavisson:cavisson $NS_WDIR/RDT
fi
#creating link for RDT jars in RDT/lib directory.
if [ ! -f $NS_WDIR/RDT/lib/rdtlib.info ];then
  msgout_both "Error: File doesn't exist on the path $NS_WDIR/RDT/lib/."
  msgout_both "RDT upgradation failed."
  exit 1
fi

while read line
do
  jar_name=`echo $line | awk -F'|' '{printf $1" "}'`

if [ "X`echo $jar_name | cut -c -1`" = "X#" ];then
    msgout_both "Ignoring line $line." >>$LOG_FILE_NAME
    continue
fi
if [ "rdtUtils.jar" == $jar_name -o "seleniumHarBuilder.jar" == $jar_name ];then
    if [ ! -f $NS_WDIR/RDT/lib/$jar_name ];then
      ln -sf ../../webapps/netstorm/lib/$jar_name $NS_WDIR/RDT/lib/. >> $LOG_FILE_NAME
      if [ "$?" != 0 ];then
        msgout_both "Error: Error in making softlink of netstorm jar files. Could not make softlink of $jar_name."
        msgout_both "RDT GUI upgradation failed."
        exit 1
      fi
    fi
   
  elif [ "ISExtBundle.jar" == $jar_name -o "jersey-bundle-1.19.jar" == $jar_name -o "commons-codec-1.6.jar" == $jar_name ];then
    if [ ! -f $NS_WDIR/RDT/lib/$jar_name ];then
      ln -sf ../../webapps/DashboardServer/WEB-INF/lib/$jar_name $NS_WDIR/RDT/lib/. >> $LOG_FILE_NAME
      if [ "$?" != 0 ];then
        msgout_both "Error: Error in making softlink of DashboardServer jar files. Could not make softlink of $jar_name."
        msgout_both "RDT GUI upgradation failed."
        exit 1
      fi
    fi

  else 
  if [ ! -f $NS_WDIR/RDT/lib/$jar_name ];then
      ln -sf ../../thirdparty/gui_signed_jars/$jar_name $NS_WDIR/RDT/lib/. >> $LOG_FILE_NAME
      if [ "$?" != 0 ];then
        msgout_both "Error: Error in making softlink of thirdparty jar files. Could not make softlink of $jar_name."
        msgout_both "RDT GUI upgradation failed."
        exit 1
      fi
    fi
fi
	done < $NS_WDIR/RDT/lib/rdtlib.info  
 



#Creating Dashboard Server and Copying Jars.
#Delete Project If Already Exist During Upgrade
if [ -d "$NS_WDIR/webapps/DashboardServer" ];then
  rm -rf $NS_WDIR/webapps/DashboardServer
fi

#Creating Common folder for download Files
mkdir -p "$NS_WDIR/webapps/common"
chown -R cavisson:cavisson $NS_WDIR/webapps/common/

#Creating DashboardServer Project in webapps.
mkdir -p "$NS_WDIR/webapps/DashboardServer/WEB-INF/lib"
mkdir -p "$NS_WDIR/webapps/DashboardServer/view"

#Changing owner from root to netstorm.
chown -R cavisson:cavisson $NS_WDIR/webapps/DashboardServer/

#Copying web.xml in server directory
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/web.xml DashboardServer/WEB-INF/

#Copying log configuration file in server directory
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/dashboardserverlog.properties DashboardServer/WEB-INF/
#Copying ED TierInfo file in server view directory
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/TierInfo.jsp DashboardServer/view/
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/KPIInfo.jsp DashboardServer/view/
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/compareInfo.jsp DashboardServer/view/
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/serverTimeInfo.jsp DashboardServer/view/

#Copying PD JSP file in server view directory
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/PDJsonData.jsp DashboardServer/view/

#Copying PD update JSP file in server view directory
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/PDUpdate.jsp DashboardServer/view/
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/Report.jsp DashboardServer/view/

cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/changeModuleDebugLevel.jsp DashboardServer/view/
cp $NS_WDIR/webapps/netstorm/realTimeGraph/server/OfflineCache.jsp DashboardServer/view/

#Copying and linking Jars.
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/jersey-bundle-1.19.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/jersey-bundle-1.19.jar IntegratedServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar IntegratedServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/tdigest-0.0.1-SNAPSHOT.jar IntegratedServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/tdigest-0.0.1-SNAPSHOT.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/advisory.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/runlogic.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/advisory/advisory_resource.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/PerfDashboard/WEB-INF/lib/perfBean.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/snmp4j-1.11.3.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/spring-2.5.6.SEC01.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/esper-4.0.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-logging-1.1.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/cglib-nodep-2.2.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/antlr-runtime-3.2.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-1.2.16.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/apache-log4j-extras-1.2.17.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/evalutor.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/javax.mail-1.5.4.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-io-2.2.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-fileupload-1.3.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-compress-1.20.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/itext-paulo-154.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/dashboardserver.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/access-control-list.jar DashboardServer/WEB-INF/lib/
#Added for alert digest report
ln -sf ../../../../thirdparty/gui_signed_jars/jxls-poi-1.0.13.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jxls-2.4.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-jexl-2.1.1.jar DashboardServer/WEB-INF/lib/

ln -sf ../../../../thirdparty/gui_signed_jars/javassist-3.18.1-GA.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/antlr-2.7.7.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jboss-transaction-api_1.2_spec-1.0.0.Final.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jboss-logging-3.1.3.GA.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jandex-1.1.0.Final.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/hibernate-jpa-2.1-api-1.0.0.Final.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/hibernate-commons-annotations-4.0.5.Final.jar DashboardServer/WEB-INF/lib/

ln -sf ../../../../thirdparty/gui_signed_jars/hibernate-core-4.3.11.Final.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/ehcache-core-2.4.3.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/hibernate-ehcache-4.3.11.Final.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/javax.persistence-2.1.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/dom4j-1.6.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/gson-2.2.2.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-dbcp-1.4.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-pool-1.6.jar DashboardServer/WEB-INF/lib/
if [ "X$POSTGRESQL_VERSION" == "X12" ] ; then
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-42.0.0.jre7.jar DashboardServer/WEB-INF/lib/
else
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar DashboardServer/WEB-INF/lib/
fi
cp $NS_WDIR/webapps/netstorm/lib/netstorm_servletClient.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-codec-1.6.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/topology.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/scheduler/WEB-INF/lib/scheduler_bean.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_servlet.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/json_simple-1.1.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/genson-1.3.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/mongo-java-driver-3.12.8.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/webdashboard/WEB-INF/lib/web-dashboard-bean.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/IntegratedServer/WEB-INF/lib/ISExtBundle.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/IntegratedServer/WEB-INF/lib/ISExtBundle.jar netstorm/WEB-INF/lib/
cp $NS_WDIR/webapps/IntegratedServer/WEB-INF/lib/ISExtBundle.jar netdiagnostics/WEB-INF/lib/
ln -sf ../../../IntegratedServer/WEB-INF/lib/ISExtBundle.jar netocean/WEB-INF/lib/ >>/dev/null 2>&1
ln -sf ../../../../thirdparty/gui_signed_jars/jackson-all-1.9.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/kryo-2.23.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/kryo-2.23.0.jar IntegratedServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/exp4j-0.4.8.jar  DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/exp4j-0.4.8.jar  IntegratedServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/poi-3.14.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/poi-ooxml-3.14.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/poi-ooxml-schemas-3.14.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jcommon-1.0.17.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jfreechart-1.0.14.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/java-json.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/slf4j-api-1.5.8.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/slf4j-log4j12-1.5.8.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/xmlbeans-2.6.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-lang-2.6.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/velocity-1.7-dep.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/velocity-1.7.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/batik-all-1.7.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/rhino-1.7R2.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/xml-apis-ext.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/cfr_0_119.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/procyon-decompiler-0.5.30.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/weka.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../netstorm/WEB-INF/lib/ddr_bean.jar DashboardServer/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/batik-all-1.7.jar DashboardServer/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/rhino-1.7R2.jar DashboardServer/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/xml-apis-ext.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jackson-all-1.9.0.jar DashboardServer/WEB-INF/lib/
#making link for mapdb jars in DashboardServer
ln -sf ../../../../thirdparty/gui_signed_jars/lz4-1.2.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/mapdb-3.0.5.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/kotlin-runtime-1.1.4-3.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/guava-23.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/elsa-3.0.0-M5.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/kotlin-stdlib-1.0.7.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/eclipse-collections-7.1.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/eclipse-collections-api-7.1.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/eclipse-collections-forkjoin-7.1.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/xstream-1.4.8.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/okhttp-3.9.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/okio-1.13.0.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/connection-pooling3.0-0.9.2.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/hibernate-c3p0-4.3.11.Final.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/mchange-commons-java-0.2.15.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/base64.jar DashboardServer/WEB-INF/lib/

#making link for CabMailSender using thymeleaf
ln -sf ../../../../thirdparty/gui_signed_jars/attoparser-2.0.1.RELEASE.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/groovy-2.4.6.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/ognl-3.1.10.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/thymeleaf-3.0.2.RELEASE.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/thymeleaf-expression-processor-1.1.2.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/unbescape-1.1.4.RELEASE.jar DashboardServer/WEB-INF/lib/

#making link for Cavisson Extensions jars in DashboardServer
#cp $NS_WDIR/webapps/CavExtensionsDependencies/lib/cav_extension_dependencies.jar DashboardServer/WEB-INF/lib/
#cp $NS_WDIR/webapps/CavExtensions/lib/cav_alert_extension.jar.jar DashboardServer/WEB-INF/lib/"
ln -sf ../../../CavExtensionsDependencies/lib/cav_extension_dependencies.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../CavExtensions/lib/cav_alert_extension.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../CavMailSender/lib/cav_mail_sender.jar DashboardServer/WEB-INF/lib/
#making link for log4j2 jars in DashboardServer
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-api-2.12.1.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-core-2.12.1.jar DashboardServer/WEB-INF/lib/

#making link for thirdparty jar in ProoductUI
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/jersey-bundle-1.19.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/advisory.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/advisory/advisory_resource.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/spring-2.5.6.SEC01.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/esper-4.0.0.jar ProductUI/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/commons-logging-1.1.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/cglib-nodep-2.2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/antlr-runtime-3.2.jar ProductUI/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/log4j-1.2.16.jar ProductUI/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/apache-log4j-extras-1.2.17.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/evalutor.jar ProductUI/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/javax.mail-1.5.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-io-2.2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-fileupload-1.3.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-compress-1.5.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/itext-paulo-154.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/gson-2.2.2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-dbcp-1.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-pool-1.6.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/esapi-2.0.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/hamcrest-core-1.3.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/joda-time-2.2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/not-yet-commons-ssl-0.3.9.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/opensaml-2.6.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/openws-1.5.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/xmlsec-1.5.7.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/xmltooling-1.4.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-lang-2.6.jar ProductUI/WEB-INF/lib/


if [ "X$POSTGRESQL_VERSION" == "X12" ] ; then
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-42.0.0.jre7.jar ProductUI/WEB-INF/lib/
elif [ "X$POSTGRESQL_VERSION" == "X9.4" ] ; then
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar ProductUI/WEB-INF/lib/
else
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.1-901.jdbc4.jar ProductUI/WEB-INF/lib/
fi
cp $NS_WDIR/webapps/netstorm/lib/netstorm_servletClient.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/runlogic.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/swingx-all-1.6.4.jar ProductUI/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/commons-codec-1.6.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/lib/topology.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_servlet.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/json_simple-1.1.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/genson-1.3.jar ProductUI/WEB-INF/lib/
cp $NS_WDIR/webapps/IntegratedServer/WEB-INF/lib/ISExtBundle.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/kryo-2.23.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/exp4j-0.4.8.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/poi-3.14.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/poi-ooxml-3.14.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/poi-ooxml-schemas-3.14.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-jexl-2.1.1.jar ProductUI/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/jcl-over-slf4j-1.7.12.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jxls-poi-1.0.13.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jxls-2.4.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jcommon-1.0.17.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jfreechart-1.0.14.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/java-json.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/xmlbeans-2.6.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/asm-all-4.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-codec-1.6.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-httpclient-3.0.1.jar ProductUI/WEB-INF/lib/
#ln -s $NS_WDIR/thirdparty/gui_signed_jars/commons-logging-1.1.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/groovy-2.0.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/groovy-xml-2.0.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/httpclient-4.3.3.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/javax.mail-1.5.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jcl-over-slf4j-1.7.12.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-1.2.16.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/apache-log4j-extras-1.2.17.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/slf4j-api-1.7.12.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/soa-model-core-1.4.1.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/apache-commons-lang.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/bcprov-jdk15-144.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-beanutils-1.7.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-cli-1.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-logging-1.1.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/httpclient-4.1.1.jar ProductUI/WEB-INF/lib/
#ln -sf ../../../../thirdparty/gui_signed_jars/httpcore-4.1.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/httpcore-4.4.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/javax.jms-1.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/junit-4.9b2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-1.2.14.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/proxy-vole-20131209.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/rsyntaxtextarea-2.5.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/soapui-5.0.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/wsdl4j-1.6.2-fixed.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/animal-sniffer-annotations-1.14.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/cal10n-api-0.7.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-io-2.4.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/commons-lang3-3.6.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/guava-23.0.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/j2objc-annotations-1.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jackson-annotations-2.9.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jackson-core-2.9.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jackson-databind-2.9.5.jar  ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jackson-dataformat-yaml-2.9.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jsr305-1.3.9.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/slf4j-ext-1.6.3.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/snakeyaml-1.18.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-annotations-2.0.0-rc2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-core-2.0.0-rc2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-models-2.0.0-rc2.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-parser-2.0.0-rc1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-parser-core-2.0.0-rc1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-parser-v2-2.0.0-rc1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-parser-v2-converter-2.0.0-rc1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/swagger-parser-v3-2.0.0-rc1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/validation-api-1.1.0.Final.jar ProductUI/WEB-INF/lib/

#making link for log4j2 jars in ProductUI
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-api-2.12.1.jar ProductUI/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-core-2.12.1.jar ProductUI/WEB-INF/lib/

# updating postgresql jdbc jar version 9.1 to 9.4 for netdiagnostics and netstorm
if [ -f $NS_WDIR/webapps/netstorm/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar ];then
  rm $NS_WDIR/webapps/netstorm/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar
  ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar netstorm/WEB-INF/lib/
else
  ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar netstorm/WEB-INF/lib/
fi

if [ -f $NS_WDIR/webapps/netdiagnostics/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar ];then
  rm $NS_WDIR/webapps/netdiagnostics/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar
  ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar netdiagnostics/WEB-INF/lib/
else
  ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar netdiagnostics/WEB-INF/lib/
fi

#making link for log4j2 jars in netstorm
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-api-2.12.1.jar netstorm/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-core-2.12.1.jar netstorm/WEB-INF/lib/
#making link for log4j2 jars in netdiagnostics
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-api-2.12.1.jar netdiagnostics/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-core-2.12.1.jar netdiagnostics/WEB-INF/lib/

if [ "NC" = "$CONTROLLER_TYPE" ];then
  cp $NS_WDIR/webapps/IntegratedServer/WEB-INF/lib/ISExtBundle.jar netcloud/WEB-INF/lib/
  if [ -f $NS_WDIR/webapps/netcloud/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar ];then
    rm $NS_WDIR/webapps/netcloud/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar
    ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar netcloud/WEB-INF/lib/
  else
    ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar netcloud/WEB-INF/lib/
  fi
fi
#Commenting because we need override favorite and layouts for webdashboard 

 #checking for webdashboard directory.
 if [ ! -d "$NS_WDIR/webapps/sys/webdashboard" ];then
   mkdir $NS_WDIR/webapps/sys/webdashboard
 fi

  #checking for config  directory.
 if [ ! -d "$NS_WDIR/webapps/sys/config" ];then
   mkdir $NS_WDIR/webapps/sys/config
 fi

 #checking for layouts directory.
 if [ ! -d "$NS_WDIR/webapps/sys/webdashboard/layouts" ];then
   cp -r $NS_WDIR/webapps/webdashboard/layouts $NS_WDIR/webapps/sys/webdashboard/
 fi

  #checking for system directory exist or not. If it  exist then delete it and from webdashboard copy it.
 if [  -d "$NS_WDIR/webapps/sys/webdashboard/layouts/system" ];then
   rm -rf $NS_WDIR/webapps/sys/webdashboard/layouts/system
   cp -r $NS_WDIR/webapps/webdashboard/layouts/system $NS_WDIR/webapps/sys/webdashboard/layouts/
 else
  cp -r $NS_WDIR/webapps/webdashboard/layouts/system $NS_WDIR/webapps/sys/webdashboard/layouts/
 fi

 #checking for custom directory if it does not exist then create it. 
 if [ ! -d "$NS_WDIR/webapps/sys/webdashboard/layouts/custom" ];then
   mkdir $NS_WDIR/webapps/sys/webdashboard/layouts/custom 
 fi
 
 #Checking for web dashboard multiDCFavorites directory.
 if [ ! -d "$NS_WDIR/webapps/sys/webdashboard/multiDCFavorites/" ];then
  mkdir $NS_WDIR/webapps/sys/webdashboard/multiDCFavorites
 fi

 #Checking for Mobile View Favorites directory
# if [ ! -d "$NS_WDIR/webapps/sys/webdashboard/MobileView" ];then
#   mkdir $NS_WDIR/webapps/sys/webdashboard/MobileView 
# fi
 
 #Copying  Favorites.
 cp -r $NS_WDIR/webapps/webdashboard/multiDCFavorites/* $NS_WDIR/webapps/sys/webdashboard/multiDCFavorites/

 #Copying MobileView favorites.
# cp -r $NS_WDIR/webapps/webdashboard/MobileView/* $NS_WDIR/webapps/sys/webdashboard/MobileView/
 
 #Checking for web dashboard favorites directory.
 if [ ! -d "$NS_WDIR/webapps/sys/webdashboard/favorites/" ];then
  mkdir $NS_WDIR/webapps/sys/webdashboard/favorites
 fi

 #checking for Web Dashboard Favorite system Directory.
 if [ -d "$NS_WDIR/webapps/sys/webdashboard/favorites/system" ];then
  rm -rf $NS_WDIR/webapps/sys/webdashboard/favorites/system
 fi

#checking for Web Dashboard Favorite system Directory.
if [ ! -d "$NS_WDIR/webapps/sys/webdashboard/favorites/mssqlfavorites" ];then
mkdir $NS_WDIR/webapps/sys/webdashboard/favorites/mssqlfavorites
fi


 #Copying System Favorites.
 cp -r $NS_WDIR/webapps/webdashboard/favorites/system $NS_WDIR/webapps/sys/webdashboard/favorites/

#Checking for configuration files of Webdashboard.
if [ -d "$NS_WDIR/webapps/webdashboard/config" ];then
 cp $NS_WDIR/webapps/webdashboard/config/category_graph_threshold.json $NS_WDIR/webapps/sys/webdashboard/category_graph_threshold.json
 cp $NS_WDIR/webapps/webdashboard/config/graphRankAndScoreMetaData.json $NS_WDIR/webapps/sys/webdashboard/graphRankAndScoreMetaData.json

if [ ! -f $NS_WDIR/webapps/sys/webdashboard/drillDownMenuDef.json ];then
   cp $NS_WDIR/webapps/webdashboard/config/drillDownMenuDef.json $NS_WDIR/webapps/sys/webdashboard/drillDownMenuDef.json
 else
   mv $NS_WDIR/webapps/sys/webdashboard/drillDownMenuDef.json $NS_WDIR/webapps/sys/webdashboard/drillDownMenuDef.json_`date +"%Y%m%d_%H%M%S"`
   cp $NS_WDIR/webapps/webdashboard/config/drillDownMenuDef.json $NS_WDIR/webapps/sys/webdashboard/drillDownMenuDef.json
 fi
fi

#check if configuredfiles.properties file exists
if [ ! -f "$NS_WDIR/webapps/sys/configuredfiles.properties" ]
then
  msgout_both "Copying configuredfiles.properties file in webapps/sys/"
  cp $NS_WDIR/webapps/dashboard/config/configuredfiles.properties $NS_WDIR/webapps/sys/
fi


#Checking Non ND Tier JSON Configuration file for ED
#If file already exists, user could have made some local changes, so create backup.
if [ -f $NS_WDIR/webapps/sys/tierStatus.json ];then
 msgout_both "tierStatus.json found. Creating backup."
 mv  $NS_WDIR/webapps/sys/tierStatus.json $NS_WDIR/webapps/sys/tierStatus.json.bkup
fi

if [ -d "$NS_WDIR/webapps/dashboard/config" ];then
 #Create copy of original file as tierStatus.json
 if [ -f $NS_WDIR/webapps/dashboard/config/tierStatus.json.orig ];then
  msgout_both "tierStatus.json.orig found. Copying it as tierStatus.json"
  cp  $NS_WDIR/webapps/dashboard/config/tierStatus.json.orig $NS_WDIR/webapps/sys/tierStatus.json
 fi
fi

#Checking configUIADFilters.txt file for ConfigUI
#This file is used to filter packages name on AD screen of ConfigUI module
#If file already exists, user could have made some local changes, so create backup.
if [ -f $NS_WDIR/instrprof/configUIADFilters.txt ];then
 msgout_both "configUIADFilters.txt found. Creating backup."
 mv  $NS_WDIR/instrprof/configUIADFilters.txt $NS_WDIR/instrprof/configUIADFilters.txt.bkup
fi

if [ -d "$NS_WDIR/webapps/dashboard/config" ];then
 #Create copy of original file as configUIADFilters.txt
 if [ -f $NS_WDIR/webapps/dashboard/config/configUIADFilters.txt ];then
  msgout_both "configUIADFilters.txt found. Copying it as configUIADFilters.txt"
  cp  $NS_WDIR/webapps/dashboard/config/configUIADFilters.txt $NS_WDIR/instrprof/configUIADFilters.txt
 fi
fi


#Checking and changing the permissions.
chown -R cavisson:cavisson $NS_WDIR/webapps/sys/webdashboard

#Checking for PD.
if [ -d "$NS_WDIR/webapps/PerfDashboard" ];then
#  ln -s $NS_WDIR/webapps/PerfDashboard/WEB-INF/lib/cmon_client_utils.jar DashboardServer/WEB-INF/lib/
  ln -sf ../../../PerfDashboard/WEB-INF/lib/CmonLib.jar DashboardServer/WEB-INF/lib/
fi

#Copy favorite in build for all products
if [ ! -d "$NS_WDIR/webapps/.favorites" ];then
   mkdir $NS_WDIR/webapps/.favorites
fi
if [ ! -d "$NS_WDIR/webapps/.favorites/system" ]; then
   mkdir $NS_WDIR/webapps/.favorites/system
fi
cp -r $NS_WDIR/webapps/profiles/favorite/*.fav $NS_WDIR/webapps/.favorites/system/
chown -R cavisson:cavisson $NS_WDIR/webapps/.favorites
chmod -R 775 $NS_WDIR/webapps/.favorites
#END code for Copy favorite in build for all products



#this done for show help when user open classic recorder for script management GUI
#mkdir -p $NS_WDIR/webapps/netstorm/correlation'
#cp -r $NS_WDIR/webapps/netfunction/correlation/corrPageHelp.jsp $NS_WDIR/webapps/netstorm/correlation >> $LOG_FILE_NAME


# move businessdashobard directory which is created on source by dashboard directory
# copy the cavisson_bean.jar file on dashboard/WEB-INF/lib/ directory 
if [ -d "$NS_WDIR/webapps/dashboard" ];then
  #Changing owner from root to cavisson.
  chown -R cavisson:cavisson $NS_WDIR/webapps/dashboard/
  # rm -rf $NS_WDIR/webapps/dashboard
fi

ln -sf ../../../../thirdparty/gui_signed_jars/gson-2.2.2.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/json_simple-1.1.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/json_simple-1.1.jar IntegratedServer/WEB-INF/lib/.

#making link for log4j2 jars in IntegratedServer
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-api-2.12.1.jar IntegratedServer/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/log4j-core-2.12.1.jar IntegratedServer/WEB-INF/lib/.

ln -sf ../../../../thirdparty/gui_signed_jars/itext-paulo-154.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/poi-3.14.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/commons-io-2.2.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/exp4j-0.4.8.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/commons-fileupload-1.3.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/java-json.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/commons-codec-1.6.jar domainadmin/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/json_simple-1.1.jar domainadmin/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/commons-dbcp-1.2.1.jar dashboard/WEB-INF/lib/.

if [ "X$POSTGRESQL_VERSION" == "X12" ] ; then
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-42.0.0.jre7.jar dashboard/WEB-INF/lib/.
elif [ "X$POSTGRESQL_VERSION" == "X9.4" ] ; then 
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.4.1209.jre7.jar dashboard/WEB-INF/lib/.
else
ln -sf ../../../../thirdparty/gui_signed_jars/postgresql-9.1-901.jdbc4.jar dashboard/WEB-INF/lib/.
fi
ln -sf ../../../../thirdparty/gui_signed_jars/commons-pool-1.6.jar dashboard/WEB-INF/lib/.
ln -sf ../../../../thirdparty/gui_signed_jars/commons-codec-1.6.jar dashboard/WEB-INF/lib/.
 
if [ "NO" = "$CONTROLLER_TYPE" -o "NS+NO" = "$CONTROLLER_TYPE"  ];then  
 ln -sf ../../../../thirdparty/gui_signed_jars/commons-codec-1.6.jar netocean/WEB-INF/lib/. >>/dev/null 2>&1
 ln -sf ../../../../thirdparty/gui_signed_jars/json_simple-1.1.jar netocean/WEB-INF/lib/. >>/dev/null 2>&1
fi

if [ "NF" = "$CONTROLLER_TYPE" ];then  
  ln -sf ../../../../thirdparty/gui_signed_jars/commons-codec-1.6.jar netfunction/WEB-INF/lib/.
  ln -sf ../../../../thirdparty/gui_signed_jars/json_simple-1.1.jar netfunction/WEB-INF/lib/.
fi

# create nettest config dir.
if [ "XNT" == "X$SUB_TYPE" ];then
  if [ ! -d "$NS_WDIR/webapps/sys/nettest" ];then
     mkdir -p $NS_WDIR/webapps/sys/nettest/
  fi

  #copy netstorm jar to nettest
  cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar $NS_WDIR/webapps/nettest/WEB-INF/lib/
  #copy scheduler jar to nettest
  cp $NS_WDIR/webapps/scheduler/WEB-INF/lib/scheduler_bean.jar $NS_WDIR/webapps/nettest/WEB-INF/lib/

  #Used to create nettest tables
  if [ -d "$NS_WDIR/webapps/nettest/db" ];then
    $NS_WDIR/webapps/nettest/db/nt_create_table
  fi

  #used to copy nt.conf in scenarios dir 
  if [ -f "$NS_WDIR/webapps/nettest/config/nt.conf" ];then
   cp $NS_WDIR/webapps/nettest/config/nt.conf $NS_WDIR/scenarios/default/default/
  fi

  #Copying nettest.json in default.json (making nettest favorite as default Favorites).
  if [ -f "$NS_WDIR/webapps/sys/webdashboard/favorites/system/nettest.json" ];then
   cp  $NS_WDIR/webapps/sys/webdashboard/favorites/system/nettest.json $NS_WDIR/webapps/sys/webdashboard/favorites/system/default.json
  fi

fi


if [ $IS_NV_ENABLE -eq 1 ];then
  #Handle to copy icons for events
  if [ ! -d "$NS_WDIR/webapps/eventIcons" ];then
    mkdir -p "$NS_WDIR/webapps/eventIcons"
    chown -R cavisson:cavisson $NS_WDIR/webapps/eventIcons/
    cp -r $NS_WDIR/webapps/netvision/images/eventIcons/* $NS_WDIR/webapps/eventIcons/
  else
    chown -R cavisson:cavisson $NS_WDIR/webapps/eventIcons/
    cp -r $NS_WDIR/webapps/netvision/images/eventIcons/* $NS_WDIR/webapps/eventIcons/
  fi

  #Handle to copy nvConfig js to sys
  if [ ! -f "$NS_WDIR/webapps/sys/nvConfig.js" ];then
    cp $NS_WDIR/webapps/netvision/js/nvConfig.js $NS_WDIR/webapps/sys/
  fi

  #Handle to copy Standard customreports to webapps for netvision.
  #Note: This will copy only standard reports.
  if [ ! -d "$NS_WDIR/webapps/reports/customreports" ];then
    mkdir -p $NS_WDIR/webapps/reports/customreports/
    cp $NS_WDIR/webapps/netvision/customreports/*.crq $NS_WDIR/webapps/reports/customreports/
    chown -R cavisson:cavisson $NS_WDIR/webapps/reports/
  else
    rm $NS_WDIR/webapps/reports/customreports/*.crq
    cp $NS_WDIR/webapps/netvision/customreports/*.crq $NS_WDIR/webapps/reports/customreports/
    chown -R cavisson:cavisson $NS_WDIR/webapps/reports/customreports/
  fi

  #Handle to copy template reports
  if [ ! -d "$NS_WDIR/webapps/reports/templatereports" ];then
    mkdir -p $NS_WDIR/webapps/reports/templatereports/datamodel/
    mkdir -p $NS_WDIR/webapps/reports/templatereports/xls/
    cp $NS_WDIR/webapps/netvision/templatereports/datamodel/*.dmcrq $NS_WDIR/webapps/reports/templatereports/datamodel/
    cp $NS_WDIR/webapps/netvision/templatereports/xls/*.xls $NS_WDIR/webapps/reports/templatereports/xls/
    chown -R cavisson:cavisson $NS_WDIR/webapps/reports/templatereports
  else
    cp $NS_WDIR/webapps/netvision/templatereports/datamodel/*.dmcrq $NS_WDIR/webapps/reports/templatereports/datamodel/
    cp $NS_WDIR/webapps/netvision/templatereports/xls/*.xls $NS_WDIR/webapps/reports/templatereports/xls/
    chown -R cavisson:cavisson $NS_WDIR/webapps/reports/templatereports
  fi

   #Handle to copy configuration files of reports.
  if [ ! -d "$NS_WDIR/webapps/sys/netvision" ];then
    mkdir -p $NS_WDIR/webapps/sys/netvision/
  fi


  #copy everytime
  cp $NS_WDIR/webapps/netvision/samples/StandardReportConfig.json $NS_WDIR/webapps/sys/netvision/
  chown -R cavisson:cavisson $NS_WDIR/webapps/sys/netvision/


  #Handle to make genreports directory
  if [ ! -d "$NS_WDIR/webapps/reports/genreports" ];then
    mkdir -p $NS_WDIR/webapps/reports/genreports
    chown -R cavisson:cavisson $NS_WDIR/webapps/reports/genreports
  fi

  #Handle to copy cavisson bean jar for netvision
  cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar netvision/WEB-INF/lib/

  #Copy AutoAnalysisConfig.ini file from sampels to sys. It will be copied only if already not there.
  if [ ! -f $NS_WDIR/webapps/sys/AutoAnalysisConfig.ini ];then
    cp $NS_WDIR/webapps/netvision/samples/AutoAnalysisConfig.ini $NS_WDIR/webapps/sys/netvision/ 
  fi 
fi

check_pg()
{
  active=1
  postgresql_service=postgresql
  if [ "X$DISTRO" == "XRedhat" ];then
    postgresql_service=postgresql-12
  fi
  if [ "X$RELEASE" == "X1604" ];then
    pg_isready
    if [ $? -ne 0 ];then
      active=0
    fi
  else
    sudo service $postgresql_service status | grep -o '[0-9].*' >/dev/null
    if [ $? -ne 0 ];then
      active=0
    fi
  fi
}



  isPgRunning()
  {
    #Check for version.
    version=`psql --version | grep -o '[0-9].[0-9]'`
    #for 9.1 status text- 
    # Running clusters: 9.1/main
    #for 12 status text - 
    # ● postgresql.service - PostgreSQL RDBMS
    # Loaded: loaded (/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)
    # Active: active (exited) since Tue 2017-07-11 14:34:42 IST; 4min 5s ago
    # Process: 50530 ExecStart=/bin/true (code=exited, status=0/SUCCESS)
    # Main PID: 50530 (code=exited, status=0/SUCCESS)
    #
    # Jul 11 14:34:42 cavisson-ProLiant-ML10 systemd[1]: Starting PostgreSQL RDBMS...
    # Jul 11 14:34:42 cavisson-ProLiant-ML10 systemd[1]: Started PostgreSQL RDBMS.
    if [ "x$version" == "x9.1" ];then
      sudo service $postgresql_service status|grep -o '[0-9].*' >/dev/null
      if [ $? -eq 0 ]; then
        echo 0;
        return;
      fi
    else
      sudo service $postgresql_service status|grep "Active: "|grep ": active" >/dev/null
      if [ $? -eq 0 ];then
        echo 0;
        return;
      fi
      sudo service $postgresql_service status | grep ": online" >/dev/null ;
      if [ $? -eq 0 ];then
        echo 0;
        return;
      fi
    fi
    echo 1;
  }
  checkAndRestartPG()
  {
   check_pg 
   if [ $active -eq 0 ];then
   echo "Postgres is not running, restarting the same."
   sudo service $postgresql_service start
   for (( i=1 ; i<11 ; i++ ))
   do
	check_pg
	if [ $active -eq 1 ]
	then
		echo -e "Postgres has started successfully ..."
		break
	else
		echo -e "Postgres restart in progress ... retry count is = $i"
		sleep 5
	fi
    done
    check_pg
    if [ $active -eq 0 ]
    then
    	echo "Postgres is not running..."
    fi
   else
    echo "Postgres is running.No need to restart."
   fi
  }
  #used to set all the configuration related to scheduler
  #1.data base configuration
  #2.init.d configuration
  #3.restart scheduler
  init_scheduler()
  {
    SUFFIX=`echo $NS_WDIR |cut -d'/' -f4`

    # check if database is running or not
    #DB_STATUS=`isPgRunning`
    #if [ $DB_STATUS -ne 0 ];then
     # echo "Postgres is not running, restarting the same."
      #/etc/init.d/postgresql start
    #fi
    check_pg
    if [ $active -eq 0 ];then
      checkAndRestartPG
    else
      echo "pg_isready is not there hence will not check and restart postgres"
    fi 
    #again check the database status
    DB_STATUS=`isPgRunning`
    if [ $DB_STATUS -eq 0 ];then
      SUFFIX=`echo $NS_WDIR |cut -d'/' -f4`
      $NS_WDIR/webapps/scheduler/bin/nr_create_scheduler_table $SUFFIX
    else
      echo "Postgres startup failed."
      echo "Scheduler Table Configuration failed due to data base."
    fi

    $CavService $SUFFIX 1 scheduler

    if [ "XX$SUFFIX" == "XXwork" ];then
       cp /etc/init.d/scheduler $NS_WDIR/webapps/scheduler/bin/init_scheduler
#      sudo chmod +x /etc/init.d/scheduler
#      #restaring the scheduler
       /etc/init.d/scheduler restart
    else
#      sudo cp $NS_WDIR/webapps/scheduler/bin/init_scheduler /etc/init.d/scheduler_$SUFFIX
#      sudo sed -i "s/export NS_CONTROLLER_NAME=work/export NS_CONTROLLER_NAME=$SUFFIX/g" /etc/init.d/scheduler_$SUFFIX
#      sudo sed -i "s/export HPD_CONTROLLER_NAME=www/export HPD_CONTROLLER_NAME=$SUFFIX/g" /etc/init.d/scheduler_$SUFFIX
#      sudo sed -i "s/export HPD_CMD=hpd/export HPD_CMD=hpd_$SUFFIX/g" /etc/init.d/scheduler_$SUFFIX
#      sudo sed -i "s/export SCHEDULER_CMD=scheduler/export SCHEDULER_CMD=scheduler_$SUFFIX/g" /etc/init.d/scheduler_$SUFFIX
#      sudo cp /etc/init.d/scheduler_$SUFFIX $NS_WDIR/webapps/scheduler/bin/init_scheduler_$SUFFIX
#      rm $NS_WDIR/webapps/scheduler/bin/init_scheduler
#      sudo chmod +x /etc/init.d/scheduler_$SUFFIX
      #restaring the scheduler
       cp /etc/init.d/scheduler_$SUFFIX $NS_WDIR/webapps/scheduler/bin/init_scheduler
       /etc/init.d/scheduler_$SUFFIX restart
    fi
  }

  #init_scheduler

msgout_both "Updating GUI configuration files for the work dir"
$NS_WDIR/bin/nsi_work_setup

if [ "X$SERVER_XML" = "X" ];then
  if [ "$CONFIG" = "NO" ];then
    export SERVER_XML=serverNO.xml
  else
    export SERVER_XML=server.xml
  fi
fi

#if [ -f /etc/init.d/$TOMCAT_CMD ];then
#  /etc/init.d/$TOMCAT_CMD stop | tee -a $LOG_FILE_NAME
#fi

# Sourcing netstorm.env, because if sombody is making build fisrt time, with new java or tomcat or with both, then it will export the variable :Anuj
# Sourcing it after stopping tomcat ans nsServer so that there is no process is in execution with these tomcat and nsserver : Anuj

#COmment this code by Neeraj on May 12, 08 as it causes variables for work2 and work3 reset to work. Need to find a solution
#if [ -f $NS_WDIR/etc/netstorm.env ];then
#  . $NS_WDIR/etc/netstorm.env
#fi

msgout_both "Copying and setting permissions of files"
mkdir -p $NS_WDIR/webapps/sys
rm -rf $NS_WDIR/webapps/sys/WEB-INF
rm -rf $NS_WDIR/webapps/logs/WEB-INF
rm -rf $NS_WDIR/webapps/scripts/WEB-INF
cp -r $NS_WDIR/webapps/netstorm/WEB-INF $NS_WDIR/webapps/sys
cp -r $NS_WDIR/webapps/profiles/WEB-INF $NS_WDIR/webapps/logs
cp -r $NS_WDIR/webapps/profiles/WEB-INF $NS_WDIR/webapps/scripts

#if [ ! -f $NS_WDIR/webapps/sys/passwd ];then
#  msgout_both "Copying password file"
#  cp $NS_WDIR/webapps/netstorm/config/passwd $NS_WDIR/webapps/sys
#fi

if [ ! -f $NS_WDIR/webapps/sys/url.filters ];then
  msgout_both "Copying url.filters file"
  cp $NS_WDIR/webapps/netstorm/recorder/url.filters $NS_WDIR/webapps/sys
fi

#if [ ! -f $NS_WDIR/webapps/sys/key.swf ];then
 # msgout_both "Copying key.swf file"
 # cp $NS_WDIR/webapps/netstorm/USFlashMap/keys/key.swf $NS_WDIR/webapps/sys
#fi

#creating KPI directory for json files
if [ ! -d $NS_WDIR/webapps/sys/KPI ]; then 
  msgout_both "creating KPI directory"
  mkdir -p $NS_WDIR/webapps/sys/KPI
fi

#change build pre-kpi.json name if user copy exist
if [ -f $NS_WDIR/webapps/sys/KPI/pre-kpi.json ]; then
 msgout_both "User pre-kpi.json copy exist"
	if [ -f $NS_WDIR/webapps/netstorm/config/KPI/pre-kpi.json ]; then
		msgout_both "reanming build pre-kpi.json to pre-kpi.json.sample"
		mv $NS_WDIR/webapps/netstorm/config/KPI/pre-kpi.json $NS_WDIR/webapps/netstorm/config/KPI/pre-kpi.json.sample
	fi

fi

if [ ! -f $NS_WDIR/webapps/sys/nosqlConfiguration.properties ]; then
 msgout_both "nosqlConfiguration.properties copy exist"
        if [ -f $NS_WDIR/webapps/netstorm/config/nosqlConfiguration.properties ]; then
                msgout_both "copying nosqlConfiguration.properties from webapps/netstorm/config to webapps/sys."
                cp $NS_WDIR/webapps/netstorm/config/nosqlConfiguration.properties $NS_WDIR/webapps/sys/nosqlConfiguration.properties

	fi

fi

#copying KPI Json files, to draw the table in KPI
if [ -d $NS_WDIR/webapps/netstorm/config/KPI ]; then
  msgout_both "Copying KPI Json files"
  cp -rf $NS_WDIR/webapps/netstorm/config/KPI/. $NS_WDIR/webapps/sys/KPI
  chown -R cavisson.cavisson $NS_WDIR/webapps/sys/KPI
fi

CONTROLLER_TYPE=`nsi_show_config -t`

#handle to copy cache.ccf to sys
 if [ ! -f $NS_WDIR/webapps/sys/cache.ccf -a $IS_NV_ENABLE -eq 1 ];then
   echo "Copying cache.ccf file"
   cp $NS_WDIR/webapps/netstorm/config/cache.ccf $NS_WDIR/webapps/sys
 fi

if [ ! -f $NS_WDIR/webapps/sys/config.ini ];then
  msgout_both "Copying config.ini file"
  cp $NS_WDIR/webapps/netstorm/config/config.ini $NS_WDIR/webapps/sys
fi
if [ ! -f $NS_WDIR/webapps/sys/productConfig.ini ];then
  msgout_both "Copying productConfig.ini file"
  cp $NS_WDIR/webapps/netstorm/config/productConfig.ini $NS_WDIR/webapps/sys
fi
		
if [ -f $NS_WDIR/webapps/sys/webdashboard/eventViewerConfig.json.bkp ];then
   msgout_both "Removing eventViewerConfig.json.bkp file."
   rm -rf $NS_WDIR/webapps/sys/webdashboard/eventViewerConfig.json.bkp
fi

  msgout_both "Copying eventViewerConfig.json.bkp file"
  cp $NS_WDIR/webapps/ProductUI/config/eventViewerConfig.json.bkp $NS_WDIR/webapps/sys/webdashboard/
          
if [ ! -f $NS_WDIR/webapps/sys/webdashboard/eventViewerConfig.json ];then
  cp $NS_WDIR/webapps/sys/webdashboard/eventViewerConfig.json.bkp $NS_WDIR/webapps/sys/webdashboard/eventViewerConfig.json
fi

if [ -f $NS_WDIR/webapps/sys/dashboardConfig.properties.bkp ];then
   msgout_both "Removing dashboardConfig.properties.bkp file."
   rm -rf $NS_WDIR/webapps/sys/dashboardConfig.properties.bkp
fi

if [ -f $NS_WDIR/webapps/sys/msSqlConfig.properties.bkp ];then
   msgout_both "Removing msSqlConfig.properties.bkp file."
   rm -rf $NS_WDIR/webapps/sys/msSqlConfig.properties.bkp
fi

if [ ! -f $NS_WDIR/webapps/sys/rbuReportConfig.ini ];then
  msgout_both "Copying rbuReportConfig.ini file"
  cp $NS_WDIR/webapps/netstorm/config/rbuReportConfig.ini $NS_WDIR/webapps/sys
fi

if [ ! -f $NS_WDIR/webapps/sys/rbuEmailConfig.properties ];then
  msgout_both "Copying rbuEmailConfig.properties file"
  cp $NS_WDIR/webapps/netstorm/config/rbuEmailConfig.properties $NS_WDIR/webapps/sys
fi

  msgout_both "Copying dashboardConfig.properties.bkp file"
  cp $NS_WDIR/webapps/netstorm/config/dashboardConfig.properties.bkp $NS_WDIR/webapps/sys

  msgout_both "Copying msSqlConfig.properties.bkp file"
  cp $NS_WDIR/webapps/ProductUI/config/msSqlConfig.properties.bkp $NS_WDIR/webapps/sys

if [ ! -f $NS_WDIR/webapps/sys/msSqlConfig.properties ];then
  cp $NS_WDIR/webapps/sys/msSqlConfig.properties.bkp $NS_WDIR/webapps/sys/msSqlConfig.properties
fi

if [ -f $NS_WDIR/webapps/sys/dbMonitoringUI.json.bkp ];then
   msgout_both "Removing dbMonitoringUI.json.bkp file."
   rm -rf $NS_WDIR/webapps/sys/dbMonitoringUI.json.bkp
fi

  msgout_both "Copying dbMonitoringUI.json.bkp file"
  cp $NS_WDIR/webapps/ProductUI/config/dbMonitoringUI.json.bkp $NS_WDIR/webapps/sys
  cp $NS_WDIR/webapps/sys/dbMonitoringUI.json.bkp $NS_WDIR/webapps/sys/dbMonitoringUI.json

if [ -f $NS_WDIR/webapps/sys/waitTypeCategories.json ];then
   msgout_both "Removing waitTypeCategories.json file."
   rm -rf $NS_WDIR/webapps/sys/waitTypeCategories.json
fi

  msgout_both "Copying waitTypeCategories.json file"
  cp $NS_WDIR/webapps/ProductUI/config/waitTypeCategories.json $NS_WDIR/webapps/sys


if [ -f $NS_WDIR/webapps/sys/dbMonitoringQueries.json.bkp ];then
   msgout_both "Removing dbMonitoringQueries.json.bkp file."
   rm -rf $NS_WDIR/webapps/sys/dbMonitoringQueries.json.bkp
fi

  msgout_both "Copying dbMonitoringQueries.json.bkp file"
  cp $NS_WDIR/webapps/ProductUI/config/dbMonitoringQueries.json.bkp $NS_WDIR/webapps/sys
  cp $NS_WDIR/webapps/sys/dbMonitoringQueries.json.bkp $NS_WDIR/webapps/sys/dbMonitoringQueries.json

if [ -f $NS_WDIR/webapps/sys/TierGroupGraphMapping.JSON.bkp ];then
   msgout_both "Removing TierGroupGraphMapping.JSON.bkp file."
   rm -rf $NS_WDIR/webapps/sys/TierGroupGraphMapping.JSON.bkp
fi

  msgout_both "Copying TierGroupGraphMapping.JSON.bkp file"
  cp $NS_WDIR/webapps/netstorm/config/TierGroupGraphMapping.JSON.bkp $NS_WDIR/webapps/sys

if [ -f $NS_WDIR/webapps/sys/sqlConfiguration.json.bkp ];then
   msgout_both "Removing sqlConfiguration.json.bkp file."
   rm -rf $NS_WDIR/webapps/sys/sqlConfiguration.json.bkp
fi

  msgout_both "Copying sqlConfiguration.json.bkp file"
  cp $NS_WDIR/webapps/netstorm/config/sqlConfiguration.json.bkp $NS_WDIR/webapps/sys
  
if [ ! -f $NS_WDIR/webapps/sys/sqlConfiguration.json.bkp ];then
  cp $NS_WDIR/webapps/netstorm/config/sqlConfiguration.json.bkp $NS_WDIR/webapps/sys/sqlConfiguration.json
fi


   msgout_both "Copying hibernate.cfg.xml file."
   cp $NS_WDIR/webapps/netstorm/config/hibernate.cfg.xml $NS_WDIR/webapps/sys


if [ -f $NS_WDIR/webapps/sys/sqlHibernate.cfg.xml ];then
   msgout_both "Removing sqlHibernate.cfg.xml file."
   rm -rf $NS_WDIR/webapps/sys/sqlHibernate.cfg.xml
fi

  msgout_both "Copying sqlHibernate.cfg.xml file."
  cp $NS_WDIR/webapps/netstorm/config/sqlHibernate.cfg.xml $NS_WDIR/webapps/sys

if [ -f $NS_WDIR/webapps/sys/WDColor.JSON.bkp ];then
   msgout_both "Removing WDColor.JSON.bkp file."
   rm -rf $NS_WDIR/webapps/sys/WDColor.JSON.bkp
    msgout_both "Removing WDColor.JSON file."
   rm -rf $NS_WDIR/webapps/sys/WDColor.JSON
fi

 if [ -f $NS_WDIR/webapps/sys/validateURLs.json ];then
    msgout_both "Backup and removing of validateURLs.json ."
    #rm -rf $NS_WDIR/webapps/sys/validateURLs.json.bck
    cp $NS_WDIR/webapps/sys/validateURLs.json  $NS_WDIR/webapps/sys/validateURLs.json.bck
    rm -rf $NS_WDIR/webapps/sys/validateURLs.json
 fi
  
  msgout_both "Copying validateURLs.json  file"
  cp $NS_WDIR/webapps/netstorm/config/validateURLs.json  $NS_WDIR/webapps/sys
  
 if [ -f $NS_WDIR/webapps/sys/BypassURLs.json ];then
    msgout_both "Removing ByPassURLs.json file."
    rm -rf $NS_WDIR/webapps/sys/BypassURLs.json
 fi

  msgout_both "Copying ByPassUrls.json  file"
  cp $NS_WDIR/webapps/netstorm/config/BypassURLs.json  $NS_WDIR/webapps/sys

  msgout_both "Copying WDCOlor.JSON.bkp file"
  cp $NS_WDIR/webapps/netstorm/config/WDColor.JSON.bkp $NS_WDIR/webapps/sys

if [ ! -f $NS_WDIR/webapps/sys/productLog.xml ];then
   msgout_both "copying productLog.xml file."
   cp $NS_WDIR/webapps/netstorm/config/productLog.xml $NS_WDIR/webapps/sys
fi

if [ -f $NS_WDIR/webapps/sys/cavLog.xml ];then
   msgout_both "Removing cavLog.xml file."
   rm -rf $NS_WDIR/webapps/sys/cavLog.xml
fi

if [ ! -f $NS_WDIR/webapps/sys/cavLog.xml ];then
   msgout_both "copying cavLog.xml file."
   cp $NS_WDIR/webapps/netstorm/config/cavLog.xml $NS_WDIR/webapps/sys
fi

#Copying audit log configuration on controller
cp $NS_WDIR/webapps/netstorm/config/auditLogConfig.xml $NS_WDIR/webapps/sys

#Copying alert Extensions Configuration on controller
cp $NS_WDIR/webapps/netstorm/config/alertExtensionsConfig.json $NS_WDIR/webapps/sys

#This is to add vendor default alert rule and baseline configuration for alert
if [ ! -d "$NS_WDIR/webapps/.multiConditionAlert/config/vendor_default" ];then
  mkdir -p $NS_WDIR/webapps/.multiConditionAlert/config/vendor_default
  # Copying default configuration files into vendor_default.
  cp $NS_WDIR/webapps/netstorm/config/vendor_default/*.json $NS_WDIR/webapps/.multiConditionAlert/config/vendor_default
else
  if [ ! -f "$NS_WDIR/webapps/.multiConditionAlert/config/vendor_default/alertRules.json" ];then
    cp $NS_WDIR/webapps/netstorm/config/vendor_default/alertRules.json $NS_WDIR/webapps/.multiConditionAlert/config/vendor_default
  fi
  #copy vendor default baselineConfig if it is not available
  if [ ! -f "$NS_WDIR/webapps/.multiConditionAlert/config/vendor_default/baselineConfig.json" ];then
    cp $NS_WDIR/webapps/netstorm/config/vendor_default/baselineConfig.json $NS_WDIR/webapps/.multiConditionAlert/config/vendor_default
  fi
fi

#For alertExtension (Cisco sparks,ServiceNow etc)


#Now checking the configuration folder of ciscospark
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/ciscospark" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/ciscospark
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/ciscospark/* $NS_WDIR/webapps/sys/CavExtensionsConfig/ciscospark/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/ciscospark/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/ciscospark/* $NS_WDIR/webapps/sys/CavExtensionsConfig/ciscospark/
fi

#Now checking the configuration folder of servicenow
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/servicenow" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/servicenow
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/servicenow/* $NS_WDIR/webapps/sys/CavExtensionsConfig/servicenow/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/servicenow/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/servicenow/* $NS_WDIR/webapps/sys/CavExtensionsConfig/servicenow/
fi

#Now checking the configuration folder of pagerduty
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/pagerduty" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/pagerduty
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/pagerduty/* $NS_WDIR/webapps/sys/CavExtensionsConfig/pagerduty/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/pagerduty/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/pagerduty/* $NS_WDIR/webapps/sys/CavExtensionsConfig/pagerduty/
fi

#Now checking the configuration folder of slack
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/slack" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/slack
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/slack/* $NS_WDIR/webapps/sys/CavExtensionsConfig/slack/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/slack/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/slack/* $NS_WDIR/webapps/sys/CavExtensionsConfig/slack/
fi

#Now checking the configuration folder of bigpanda
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/bigpanda" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/bigpanda
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/bigpanda/* $NS_WDIR/webapps/sys/CavExtensionsConfig/bigpanda/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/bigpanda/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/bigpanda/* $NS_WDIR/webapps/sys/CavExtensionsConfig/bigpanda/
fi

#Now checking the configuration folder of kaizala
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/kaizala" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/kaizala
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/kaizala/* $NS_WDIR/webapps/sys/CavExtensionsConfig/kaizala/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/kaizala/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/kaizala/* $NS_WDIR/webapps/sys/CavExtensionsConfig/kaizala/
fi

#Now checking the configuration folder of microsoftteams
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/microsoftteams" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/microsoftteams
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/microsoftteams/* $NS_WDIR/webapps/sys/CavExtensionsConfig/microsoftteams/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/microsoftteams/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/microsoftteams/* $NS_WDIR/webapps/sys/CavExtensionsConfig/microsoftteams/
fi

#Now checking the configuration folder of microsoft
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/microsoft/teams" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/microsoft/teams
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/microsoft/teams/* $NS_WDIR/webapps/sys/CavExtensionsConfig/microsoft/teams/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/microsoft/teams/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/microsoft/teams/* $NS_WDIR/webapps/sys/CavExtensionsConfig/microsoft/teams/
fi

#Now checking the configuration folder of alertsender
if [ ! -d "$NS_WDIR/webapps/sys/CavExtensionsConfig/alertsender" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavExtensionsConfig/alertsender
  # Copying default configuration files if folder not available.
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/alertsender/* $NS_WDIR/webapps/sys/CavExtensionsConfig/alertsender/
elif [ ! -f "$NS_WDIR/webapps/sys/CavExtensionsConfig/alertsender/config.json" ];then
  cp $NS_WDIR/webapps/netstorm/config/CavExtensionsConfig/alertsender/* $NS_WDIR/webapps/sys/CavExtensionsConfig/alertsender/
fi

#Now checking the configuration folder of cavisson mail template for alert
msgout_both "copying CavMailTemplate file."
if [ ! -d "$NS_WDIR/webapps/sys/CavMailTemplate" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavMailTemplate
fi
if [ ! -d "$NS_WDIR/webapps/sys/CavMailTemplate/alert" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavMailTemplate/alert
  # Copying default configuration files if folder available.
fi

cp $NS_WDIR/webapps/netstorm/config/CavMailTemplate/alert/*.html $NS_WDIR/webapps/sys/CavMailTemplate/alert/

if [ ! -d "$NS_WDIR/webapps/sys/CavMailTemplate/alert/fragment" ];then
  mkdir -p $NS_WDIR/webapps/sys/CavMailTemplate/alert/fragment
   # Copying default configuration files if folder available.
fi

cp $NS_WDIR/webapps/netstorm/config/CavMailTemplate/alert/fragment/*.html $NS_WDIR/webapps/sys/CavMailTemplate/alert/fragment/


if [ ! -f $NS_WDIR/webapps/sys/cavMailSms.json ];then
   msgout_both "copying cavMailSms.json file."
   cp $NS_WDIR/webapps/netstorm/config/cavMailSms.json $NS_WDIR/webapps/sys
fi


if [ ! -f $NS_WDIR/webapps/sys/serverAccessLogField.json ];then
   msgout_both "Copying serverAccessLogField.prop file"
   cp $NS_WDIR/webapps/netstorm/config/serverAccessLogField.json $NS_WDIR/webapps/sys
fi

if [ ! -f $NS_WDIR/webapps/sys/jdbc_driver.json ];then
   msgout_both "Copying jdbc_driver.json file"
   cp $NS_WDIR/webapps/netstorm/config/jdbc_driver.json $NS_WDIR/webapps/sys
fi

if [ ! -f $NS_WDIR/webapps/sys/executionTree.prop ];then
  msgout_both "Copying executionTree.prop file"
  cp $NS_WDIR/webapps/netstorm/config/executionTree.prop $NS_WDIR/webapps/sys
fi

if [ ! -f $NS_WDIR/webapps/sys/moduleDebugLevel.properties ];then
  msgout_both "Copying moduleDebugLevel.properties file"
  cp $NS_WDIR/webapps/netstorm/config/moduleDebugLevel.properties $NS_WDIR/webapps/sys
fi

if [ -f $NS_WDIR/webapps/sys/.snmpMIBMapping.conf ];then
   msgout_both "Removing .snmpMIBMapping.conf file."
   rm -rf $NS_WDIR/webapps/sys/.snmpMIBMapping.conf
fi

if [ -f $NS_WDIR/webapps/sys/.snmpMcMIBMapping.conf ];then
   msgout_both "Removing .snmpMcMIBMapping.conf file."
   rm -rf $NS_WDIR/webapps/sys/.snmpMcMIBMapping.conf
fi

msgout_both "Copying .snmpMIBMapping.conf file"
cp $NS_WDIR/webapps/netstorm/config/snmpMIBMapping.conf $NS_WDIR/webapps/sys
cp $NS_WDIR/webapps/netstorm/config/snmpMcMIBMapping.conf $NS_WDIR/webapps/sys
cp $NS_WDIR/webapps/netstorm/config/log4j.properties $NS_WDIR/webapps/sys
cp $NS_WDIR/webapps/netstorm/config/YamlTemplate.yaml $NS_WDIR/webapps/sys
mv $NS_WDIR/webapps/sys/snmpMIBMapping.conf $NS_WDIR/webapps/sys/.snmpMIBMapping.conf
mv $NS_WDIR/webapps/sys/snmpMcMIBMapping.conf $NS_WDIR/webapps/sys/.snmpMcMIBMapping.conf

chown -R cavisson.cavisson $NS_WDIR/webapps/sys
chown -R cavisson.cavisson $NS_WDIR/webapps/logs/WEB-INF
chown -R cavisson.cavisson $NS_WDIR/webapps/scripts/WEB-INF
chown -R cavisson.cavisson $NS_WDIR/webapps/netstorm/WEB-INF

#copying topology and netstorm_bean for configUI
if [ ! -d $NS_WDIR/webapps/configUI/WEB-INF/lib ]; then
  mkdir -p $NS_WDIR/webapps/configUI/WEB-INF/lib/
fi
chown -R cavisson.cavisson $NS_WDIR/webapps/configUI
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar $NS_WDIR/webapps/configUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/topology.jar $NS_WDIR/webapps/configUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/gson-2.2.2.jar $NS_WDIR/webapps/configUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/CmonLib.jar $NS_WDIR/webapps/configUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/common-all-1.0.jar $NS_WDIR/webapps/configUI/WEB-INF/lib/
cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/common-all-1.0.jar $NS_WDIR/webapps/DashboardServer/WEB-INF/lib/

#creating softlink for commonlib(common-all) jar 
#if [ -e "/home/cavisson/monitors/lib/common-all-1.0.jar" ]; then
#  ln -s  /home/cavisson/monitors/lib/common-all-1.0.jar $NS_WDIR/webapps/netstorm/WEB-INF/lib/
#else
#  if [ -e "/home/cavisson/monitors/lib/commonlib-1.0.jar" ]; then
#    ln -s  /home/cavisson/monitors/lib/commonlib-1.0.jar $NS_WDIR/webapps/netstorm/WEB-INF/lib/
#  fi
#fi

# config UI temporary changes till memory issue verified
#su netstorm -c 'cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar $NS_WDIR/webapps/sampleApps/configUI/WEB-INF/lib/'
#su netstorm -c 'cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/topology.jar $NS_WDIR/webapps/sampleApps/configUI/WEB-INF/lib/'

cd $TOMCAT_DIR/conf;

configure_server_xml()
{

  msgout "Configuring SSL Certificate"

  serverXmlFile="$NS_WDIR/apps/apache-tomcat-9.0.50/conf/server.xml"

  echo -n "1 for Cloud Machine , 2 for Client Machine (Enter - for default)"

  ANS=`get_input`

  if [ "X$ANS" == "X1" ]; then
    certType="nc.keystore.ks";
  elif [ "X$ANS" == "X2" ];then
    certType="cl.keystore.ks";
  else
    certType="lc.keystore.ks";
  fi

  KEYSTORE=`cat $serverXmlFile | grep "keystoreFile" | cut -d '=' -f3 | cut -d '/' -f6 | cut -d '"' -f1`
  if [ "XKEYSTORE" != "X" ]; then 
  sed -i 's/'$KEYSTORE'/'$certType'/' $serverXmlFile
  fi
}

update_tomcat_connector_and_cert()
{
  #bug 80125
  #This is done in order to add URIEncoding and relaxedQueryChar in connector tag. 
  #We have checked only for URIEncoding because these both will be updated at a single time (if user has not manipulated it.)
  WEB_XML_FILE="${TOMCAT_DIR}/conf/web.xml" 
  SERVER_XML_FILE="${TOMCAT_DIR}/conf/server.xml"
  TOMCAT_VERSION=`basename ${TOMCAT_DIR} | cut -d '-' -f3`
  grep 'URIEncoding="UTF-8"' $SERVER_XML_FILE >/dev/null
  if [ $? == 1 ];then
    Input1=`grep '<Connector port=' $SERVER_XML_FILE | grep 'protocol="HTTP/1.1"'`
    Input2=`grep '<Connector SSLEnabled=' $SERVER_XML_FILE | grep ' protocol="HTTP/1.1"'`
    sed -i "s|$Input1|$Input1 URIEncoding=\"UTF-8\" relaxedQueryChars='[]\|{}^\&#x5c;\&#x60;\&quot;\&lt;\&gt;'|g" $SERVER_XML_FILE
    sed -i "s|$Input2|$Input2 URIEncoding=\"UTF-8\" relaxedQueryChars='[]\|{}^\&#x5c;\&#x60;\&quot;\&lt;\&gt;'|g" $SERVER_XML_FILE
  fi
 #bug-92302 adding audit filter logs to web.xml  
  sed -i 's|relaxedQueryChar=|relaxedQueryChars=|g' $SERVER_XML_FILE
  grep -w "RequestLoggingFilter" $WEB_XML_FILE >/dev/null
  if [ $? -ne 0 ];then
    sed -i 's|</web-app>| |g' $WEB_XML_FILE
    echo '    <!-- Filter used for audit logging with response time. -->' >>$WEB_XML_FILE
    echo '    <filter>' >>$WEB_XML_FILE
    echo '      <filter-name>RequestLoggingFilter</filter-name>' >>$WEB_XML_FILE
    echo '      <filter-class>org.cavisson.main.auditlogging.servlet.filters.RequestLoggingFilter</filter-class>' >>$WEB_XML_FILE
    echo '    </filter>' >>$WEB_XML_FILE
    echo ' ' >>$WEB_XML_FILE
    echo '    <filter-mapping>' >>$WEB_XML_FILE
    echo '      <filter-name>RequestLoggingFilter</filter-name>' >>$WEB_XML_FILE
    echo '      <url-pattern>/*</url-pattern>' >>$WEB_XML_FILE
    echo '    </filter-mapping>' >>$WEB_XML_FILE
    echo '</web-app>' >>$WEB_XML_FILE
  fi
#bug 92302 added this line from file nsi_update_web
#This sed command will replace the sandbox filter from web.xml useful for opening a pdf file in browser
  sed -i "s/sandbox allow-forms allow-same-origin allow-scripts allow-popups allow-modals//g" $WEB_XML_FILE


  #bug 89783
  # This command has been added to update the certificate for tomcat.
  # Previously all the controller's tomcat were using work controller's tomcat certificate. 
  # It will update the certificate name as well as path in server.xml. 
  if [ -f "$NS_WDIR/cert/cav-test.pfx" ]; then
    grep -w "cavissonwc.ks" $SERVER_XML_FILE >/dev/null
    if [ $? -eq 0 ]; then
      sed -i "s|cavissonwc.ks|cav-test.pfx|g" $SERVER_XML_FILE
    fi
  fi

  #bug 89783
  #In case of custom tomcat certificate, we won't update the path and certificate at the time of build upgrade. 
  #Otherwise, it will update the tomcat certificate accordingly.
  grep "keystoreFile=" $SERVER_XML_FILE | grep -w "cav-test.pfx" >/dev/null
  if [ $? -eq 0 ]; then
    sed -i "s|/home/netstorm/|/home/cavisson/|;s|/home/cavisson/work/|$NS_WDIR/|" $SERVER_XML_FILE
  fi
}

update_site_env()
{
  Tomcat_opts=`grep '^[[:blank:]]*[^[:blank:]#;]' $NS_WDIR/sys/site.env | grep "TOMCAT_OPTS" |awk -F "TOMCAT_OPTS=\"" '{print $2}' |awk -F "\"" '{print $1}'`

  Tomcat_opts=`echo $Tomcat_opts`

  sed -i 's/KohlsProd/<Topology Name>/' $NS_WDIR/sys/site.env >>/dev/null 2>&1
  sed -i -e '/^[^#].*TOMCAT_OPTS/d' $NS_WDIR/sys/site.env >>/dev/null 2>&1
  #grep "\-Xloggc" $NS_WDIR/sys/site.env | grep -v "#"
  echo $Tomcat_opts |grep "\-Xloggc" >>/dev/null 2>&1
  if [ $? -ne 0 ];then
    loggc_var=" -Xloggc:\$TOMCAT_DIR/logs/tomcat_gc_\$(date +%Y%m%d%H%M%S).log "
    #echo "export TOMCAT_OPTS=\"${Tomcat_opts}-Xloggc:${TOMCAT_DIR}/logs/tomcat_gc.log\"" >>$NS_WDIR/sys/site.env
  fi
  echo $Tomcat_opts |grep "\-XX:HeapDumpPath" >>/dev/null 2>&1
  if [ $? -ne 0 ];then
    heapdump_var=" -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=\$NS_WDIR/HeapDump_\$(date +%Y%m%d%H%M%S).hprof "
  fi
  echo $Tomcat_opts |grep "\-XX:MaxGCPauseMillis" >>/dev/null 2>&1
  if [ $? -ne 0 ];then
    GCPause_var=" -XX:MaxGCPauseMillis=500 "
  fi
  echo $Tomcat_opts |grep "\-Djava\.security\.egd" >>/dev/null 2>&1
  if [ $? -ne 0 ];then
    Java_se_var=" -Djava.security.egd=file:/dev/./urandom " 
  fi
  echo "export TOMCAT_OPTS=\"${Tomcat_opts}${GCPause_var}${Java_se_var}${loggc_var}${heapdump_var}\"" >>$NS_WDIR/sys/site.env
}

#For do this for standard work only. For controller, file should Not be copied as it is not kept in CVS
WORK=`basename $NS_WDIR`
# We are copying server.xml if upgrading build first time, dont copy it each time, as copying it every time will cause disturb ssl setup 
if [ "XX$WORK" == "XXwork" -o "XX$WORK" == "XXwork2" -o "XX$WORK" == "XXwork3" ];then
  if [ -d $NS_WDIR/apps/apache-tomcat-9.0.50 ];then
    grep appBase server.xml | grep -E "/home/cavisson|/home/netstorm"
    if [ $? -ne 0 ]; then
      #configure_server_xml
      mv server.xml server.xml.bak;
      cp $NS_WDIR/webapps/.tomcat/9.0.50/$SERVER_XML server.xml;
      #configure_web_xml
      mv web.xml web.xml.bak;
      cp $NS_WDIR/webapps/.tomcat/9.0.50/web.xml .;
    fi
  else
    grep appBase server.xml | grep -E "/home/cavisson|/home/netstorm"
    if [ $? -ne 0 ]; then
      #configure_server_xml
      mv server.xml server.xml.bak;
      cp $NS_WDIR/webapps/.tomcat/$SERVER_XML server.xml;
      #configure_web_xml
      mv web.xml web.xml.bak;
      cp $NS_WDIR/webapps/.tomcat/web.xml .;
    fi
  fi
fi

#Bug: 89783, 80125
update_tomcat_connector_and_cert
touch "$NS_WDIR/webapps/404.html"
grep "error-code" web.xml | grep 404
if [ $? -ne 0 ];then
  awk '$0 == "</web-app>" {print "   <error-page>\n     <error-code>404</error-code>\n     <location>/404.html</location>\n   </error-page>\n" RS $0 ;next} 1' web.xml > web.xml.$$
  mv web.xml.$$ web.xml
  chmod +x web.xml
fi

chmod +r server.xml
mv -f context.xml context.xml.bak;
if [ -d $NS_WDIR/apps/apache-tomcat-9.0.50 ];then
    cp $NS_WDIR/webapps/.tomcat/9.0.50/context.xml .;
elif [ -d $NS_WDIR/apps/apache-tomcat-9.0.43 ];then
    cp $NS_WDIR/webapps/.tomcat/9.0.43/context.xml .;
elif [ -d $NS_WDIR/apps/apache-tomcat-9.0.41 ];then
    cp $NS_WDIR/webapps/.tomcat/9.0.41/context.xml .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.105 ];then
    cp $NS_WDIR/webapps/.tomcat/7.0.105/context.xml .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.104 ];then
    cp $NS_WDIR/webapps/.tomcat/7.0.104/context.xml .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.99 ];then
    cp $NS_WDIR/webapps/.tomcat/7.0.99/context.xml .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.91 ];then
    cp $NS_WDIR/webapps/.tomcat/7.0.91/context.xml .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.59 ];then
    cp $NS_WDIR/webapps/.tomcat/7.0.59/context.xml .;
else
    cp $NS_WDIR/webapps/.tomcat/context.xml .;
fi

cd $TOMCAT_DIR/bin;
mv -f catalina.sh catalina.sh.bak;
if [ -d $NS_WDIR/apps/apache-tomcat-9.0.50 ];then
  cp $NS_WDIR/webapps/.tomcat/9.0.50/catalina.sh .;
elif [ -d $NS_WDIR/apps/apache-tomcat-9.0.43 ];then
  cp $NS_WDIR/webapps/.tomcat/9.0.43/catalina.sh .;
elif [ -d $NS_WDIR/apps/apache-tomcat-9.0.41 ];then
  cp $NS_WDIR/webapps/.tomcat/9.0.41/catalina.sh .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.105 ];then
  cp $NS_WDIR/webapps/.tomcat/7.0.105/catalina.sh .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.104 ];then
  cp $NS_WDIR/webapps/.tomcat/7.0.104/catalina.sh .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.99 ];then
  cp $NS_WDIR/webapps/.tomcat/7.0.99/catalina.sh .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.91 ];then
  cp $NS_WDIR/webapps/.tomcat/7.0.91/catalina.sh .;
elif [ -d $NS_WDIR/apps/apache-tomcat-7.0.59 ];then
  cp $NS_WDIR/webapps/.tomcat/7.0.59/catalina.sh .;
else
  cp $NS_WDIR/webapps/.tomcat/catalina.sh .;
fi

#rm -rf $TOMCAT_DIR/work/Catalina/localhost >/dev/null
#if [ $? -eq 0 ];then
#  echo "Removing $TOMCAT_DIR/work/Catalina/localhost" 
#fi

#This method replaces the old tomcat build files with the new ones for a controller
migrate_tomcat()
{
  grep "nsi_tomcat_control" /etc/init.d/$TOMCAT_CMD >/dev/null
  if [ $? -ne 0 ];then
   Controller_name=`cat /etc/init.d/$TOMCAT_CMD | egrep "^export NS_CONTROLLER_NAME" | cut -d"=" -f2`
   cp -f $NS_WDIR/webapps/.tomcat/tomcat /etc/init.d/$TOMCAT_CMD
   if [ $? -ne 0 ];then
     echo "Error while copying tomcat file"
     exit 1
   fi
   sed -i "s/export NS_CONTROLLER_NAME=work/export NS_CONTROLLER_NAME=$Controller_name/g" /etc/init.d/$TOMCAT_CMD
   sed -i "s/export HPD_CONTROLLER_NAME=www/export HPD_CONTROLLER_NAME=$Controller_name/g" /etc/init.d/$TOMCAT_CMD
   sed -i "s/export APPS_CONTROLLER_NAME=apps/export APPS_CONTROLLER_NAME=$Controller_name/g" /etc/init.d/$TOMCAT_CMD
   sed -i "s/export HPD_CMD=hpd/export HPD_CMD=hpd_$Controller_name/g" /etc/init.d/$TOMCAT_CMD
  fi 

  #Adding LSB headers to the init script so as to remove warning coming in build 
 # grep "### BEGIN INIT INFO" /etc/init.d/$TOMCAT_CMD >/dev/null 
 # if [ $? -ne 0 ];then
 #   echo -e "### BEGIN INIT INFO\n# Provides: $TOMCAT_CMD\n# Required-Start:\n# Required-Stop:\n# Default-Start:\n# Default-Stop:\n# Short-Description: start|stop|restart|force-reload $TOMCAT_CMD\n# Description: Starting Tomcat Server\n### END INIT INFO\n" >>/etc/init.d/$TOMCAT_CMD
 # fi
}

#if work, work2, work3
#if [ "XX$WORK" == "XXwork" -o "XX$WORK" == "XXwork2" -o "XX$WORK" == "XXwork3" ];then
#  sudo cp -f $NS_WDIR/webapps/.tomcat/$TOMCAT_CMD /etc/init.d
  #Adding LSB headers to the init script so as to remove warning coming in build 
 # echo -e "### BEGIN INIT INFO\n# Provides: $TOMCAT_CMD\n# Required-Start:\n# Required-Stop:\n# Default-Start:\n# Default-Stop:\n# Short-Description: start|stop|restart|force-reload $TOMCAT_CMD\n# Description: Starting Tomcat Server\n### END INIT INFO\n" >>/etc/init.d/$TOMCAT_CMD
#else
#  migrate_tomcat
#fi

#sudo chmod +x /etc/init.d/$TOMCAT_CMD
#sudo update-rc.d $TOMCAT_CMD defaults
#bug 91656 adding "-Xloggc:$TOMCAT_DIR/logs/tomcat_gc.log" keyword in site.env while upgrading build. 
update_site_env
msgout_both "Cleaning tomcat cache and restarting tomcat in background"
nohup $NS_WDIR/bin/nsi_gui_tomcat_restart >> $LOG_FILE_NAME &


#Softlink created for showing pagedump in netvision
msgout_both "Making softlink of HPD_ROOT"
cd $NS_WDIR/webapps;
rm -f ./hpd;
ln -s $HPD_ROOT

# copy nvsm files if controller type is NDE other wise no need to create 
if [ "NDE" = "$CONTROLLER_TYPE" ];then
  rsync -av --ignore-existing $NS_WDIR/webapps/netstorm/* $NS_WDIR/webapps/nvsm/ >> $LOG_FILE_NAME
  rsync -av --ignore-existing $NS_WDIR/webapps/netstorm/config/nvsmConfig/* $NS_WDIR/webapps/sys/config/ >> $LOG_FILE_NAME
  if [ $? -ne 0 ];then
    echo "Error occurred while copying directories from netstorm directory to nvsm directory."
    exit 1
  fi
fi

#We nee to copy all directory except ipMgmt directory
#It is taking time on build upgrade that's why we are not running it while build upgrade.Should be run manually.
#$NS_WDIR/bin/nsi_favoriteConverter
#chown -R 'netstorm:cavisson' $NS_WDIR/webapps/.favorites/

if [ "NDE" == "$CONTROLLER_TYPE" -o "NS" == "$CONTROLLER_TYPE" -o "NS>NO" == "$CONTROLLER_TYPE" -o "NS+NO" == "$CONTROLLER_TYPE" -o "NO" == "$CONTROLLER_TYPE" -o "NF" == "$CONTROLLER_TYPE" -o $IS_NV_ENABLE -eq 1 -o "ED" == "$CONTROLLER_TYPE" ];then  
 rsync -av --exclude=$NS_WDIR/webapps/netstorm/headerfooter $NS_WDIR/webapps/netstorm/* $NS_WDIR/webapps/netdiagnostics/ >> $LOG_FILE_NAME
  if [ $? -ne 0 ];then
    echo "Error occurred while copying directories from cavisson directory to netdiagnostics directory." 
    exit 1
  fi

  cp $NS_WDIR/webapps/netstorm/headerfooter/globalHeader.jspf $NS_WDIR/webapps/netdiagnostics/headerfooter
  if [ $? -ne 0 ];then
    echo "Error occurred while copying globalHeader.jspf to netdiagnostics directory."
    exit 1
  fi
 
fi

#copy all the system templates for export in NV
if [ $IS_NV_ENABLE -eq 1 ];then
   if [ ! -d "$NS_WDIR/webapps/netvision/samples/systemTemplates" ];then
       cp "$NS_WDIR/webapps/netvision/samples/systemTemplates/*" "$NS_WDIR/webapps/reports/templatereports/xls"
    fi
fi
 
# $NS_WDIR/bin/nsi_access_control
# if [ $? -ne 0 ];then
#	echo "An Error Occurred While Communicating With The PostgreSQL Database.Check that the server is running and that you have access priviliges to the requested database."
#exit 1
#fi

    
#handle templates directory inside webapps,create if not present
    if [ ! -d "$NS_WDIR/webapps/templates" ];then
       mkdir $NS_WDIR/webapps/templates
       chmod -R 775 $NS_WDIR/webapps/templates
    fi
#handle excel report templates directory ,create if not present
   if [ ! -d "$NS_WDIR/webapps/templates/excel_templates" ];then
       mkdir  $NS_WDIR/webapps/templates/excel_templates
       chmod -R 775 $NS_WDIR/webapps/templates/excel_templates
   fi
#handle alertDigestTemplates directory ,create if not present
   if [ ! -d "$NS_WDIR/webapps/templates/alertDigestTemplates" ];then
       mkdir  $NS_WDIR/webapps/templates/alertDigestTemplates
       chmod -R 775 $NS_WDIR/webapps/templates/alertDigestTemplates
   fi
#copy default template for alertdigestreport from templates/excel_templates to webapps/templates/alertDigestTemplates and remove templates/excel_templates 
   if [ -d "$NS_WDIR/templates/excel_templates/" ];then
      cp $NS_WDIR/templates/excel_templates/*.xls $NS_WDIR/webapps/templates/alertDigestTemplates
      chmod -R 775 $NS_WDIR/webapps/templates/alertDigestTemplates/*
      rm -rf $NS_WDIR/templates/excel_templates
   fi
#handle thresholdTemplates directory ,create if not present
   if [ ! -d "$NS_WDIR/webapps/templates/thresholdTemplates" ];then
       mkdir  -p $NS_WDIR/webapps/templates/thresholdTemplates
       chmod -R 775 $NS_WDIR/webapps/templates/thresholdTemplates
   fi
#Remove thresholdTemplateFormat.csv file if present
   if [ -e "$NS_WDIR/webapps/templates/thresholdTemplates/thresholdTemplateFormat.csv" ];then
      rm -f $NS_WDIR/webapps/templates/thresholdTemplates/thresholdTemplateFormat.csv
   fi
#Copy default threshold template
   if [ -d "$NS_WDIR/templates/thresholdTemplates/" ];then
      cp $NS_WDIR/templates/thresholdTemplates/*.csv $NS_WDIR/webapps/templates/thresholdTemplates
      chmod -R 775 $NS_WDIR/webapps/templates/thresholdTemplates/*
      rm -rf $NS_WDIR/templates/thresholdTemplates
   fi

#Creating soft link for executeReport.js for scheduler for bug 39532 this only for 4.1.10 release will remove in 4.1.11
if [ ! -d "$NS_WDIR/nodeapps" ];then
    mkdir $NS_WDIR/nodeapps
fi
#Intial there will be no excuteReport.js file in $NS_WDIR/nodeapps/
#if [ ! -e "$NS_WDIR/nodeapps/executeReport.js" ];then
#  cp $NS_WDIR/webapps/scheduler/js/executeReport.js $NS_WDIR/nodeapps/
#fi
#if /webapps/scheduler/js/executeReport.js exist make backup for new file
#if [ -e "$NS_WDIR/webapps/scheduler/js/executeReport.js" ];then
#    mv $NS_WDIR/webapps/scheduler/js/executeReport.js $NS_WDIR/webapps/scheduler/js/executeReport.js_orig
#fi
#Making soft link
#ln -s $NS_WDIR/nodeapps/executeReport.js $NS_WDIR/webapps/scheduler/js/executeReport.js
#Making soft link for dependencies 
if [ -d "$NS_WDIR/nodeapps/node_modules" ];then
    rm -rf $NS_WDIR/nodeapps/node_modules
fi
ln -sf ../webapps/scheduler/js/node_modules $NS_WDIR/nodeapps/
#Making soft link for reportUtil.js 
if [ -e "$NS_WDIR/nodeapps/reportUtil.js" ];then
    rm -f $NS_WDIR/nodeapps/reportUtil.js	 
fi
ln -sf ../webapps/scheduler/js/reportUtil.js $NS_WDIR/nodeapps/ 

if [ ! -d "$NS_WDIR/webapps/devtool" ];then
  if [ -d "$NS_WDIR/thirdparty/devtool" ];then
    ln -sf ../thirdparty/devtool $NS_WDIR/webapps/
  fi
fi

if [ ! -d "$NS_WDIR/webapps/devtool_v2.0" ];then
  if [ -d "$NS_WDIR/thirdparty/devtool_v2.0" ];then
    ln -sf ../thirdparty/devtool_v2.0 $NS_WDIR/webapps/
  fi
fi

#Copying tomcat catalina.properties from build
if [ -d "$NS_WDIR/apps/apache-tomcat-9.0.50/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/9.0.50/catalina.properties $NS_WDIR/apps/apache-tomcat-9.0.50/conf
fi

if [ -d "$NS_WDIR/apps/apache-tomcat-9.0.43/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/9.0.43/catalina.properties $NS_WDIR/apps/apache-tomcat-9.0.43/conf
fi

if [ -d "$NS_WDIR/apps/apache-tomcat-9.0.41/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/9.0.41/catalina.properties $NS_WDIR/apps/apache-tomcat-9.0.41/conf
fi

if [ -d "$NS_WDIR/apps/apache-tomcat-7.0.105/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/7.0.105/catalina.properties $NS_WDIR/apps/apache-tomcat-7.0.105/conf
fi

if [ -d "$NS_WDIR/apps/apache-tomcat-7.0.104/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/7.0.104/catalina.properties $NS_WDIR/apps/apache-tomcat-7.0.104/conf
fi

if [ -d "$NS_WDIR/apps/apache-tomcat-7.0.99/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/7.0.99/catalina.properties $NS_WDIR/apps/apache-tomcat-7.0.99/conf
fi

if [ -d "$NS_WDIR/apps/apache-tomcat-7.0.91/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/7.0.91/catalina.properties $NS_WDIR/apps/apache-tomcat-7.0.91/conf
fi

if [ -d "$NS_WDIR/apps/apache-tomcat-7.0.59/conf" ];then
   cp $NS_WDIR/webapps/.tomcat/7.0.59/catalina.properties $NS_WDIR/apps/apache-tomcat-7.0.59/conf
fi

#Copying Product Menu JSON to controller configuration
#Checking productConfig directory.
if [ ! -d "$NS_WDIR/webapps/sys/productConfig" ];then
    mkdir $NS_WDIR/webapps/sys/productConfig
fi

#Copying Menu JSON to product config directory.
if [ -d "$NS_WDIR/webapps/ProductUI/config" ];then
  cp $NS_WDIR/webapps/ProductUI/config/*_menu.json $NS_WDIR/webapps/sys/productConfig
fi

#Adding v2 services jar at their respectice places
cp $NS_WDIR/webapps/restservices/acl_rs.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/restservices/dashboard_rs.jar DashboardServer/WEB-INF/lib/
cp $NS_WDIR/webapps/configdb/ConfigDB.jar DashboardServer/WEB-INF/lib/

#removing restservices directory as it is not neede after copying all required jars
rm -rf $NS_WDIR/webapps/restservices

#Checking unifiedConfig directory.
if [ ! -d "$NS_WDIR/webapps/sys/unifiedConfig" ];then
    mkdir $NS_WDIR/webapps/sys/unifiedConfig
fi
#Creating CompareData Directory if not available.
if [ ! -d "$NS_WDIR/webapps/sys/unifiedConfig/compareData" ];then
    mkdir $NS_WDIR/webapps/sys/unifiedConfig/compareData
fi
#Creating CataLogues Directory if not available.
if [ ! -d "$NS_WDIR/webapps/sys/unifiedConfig/catalogueMangement" ];then
    mkdir $NS_WDIR/webapps/sys/unifiedConfig/catalogueMangement
fi

#Creating alert Directory if not available.
if [ ! -d "$NS_WDIR/webapps/sys/unifiedConfig/alert" ];then
    mkdir $NS_WDIR/webapps/sys/unifiedConfig/alert
fi

#Creating ddr Directory if not available.
if [ ! -d "$NS_WDIR/webapps/sys/unifiedConfig/ddr" ];then
    mkdir $NS_WDIR/webapps/sys/unifiedConfig/ddr
fi


#Creating dashboards Directory if not available.
 mkdir -p $NS_WDIR/webapps/sys/webdashboard/dashboards/system
 cp -r $NS_WDIR/webapps/UnifiedDashboard/config/dashboards/system/* $NS_WDIR/webapps/sys/webdashboard/dashboards/system/

if [ ! -d "$NS_WDIR/webapps/sys/webdashboard/dashboards/system/alert" ];then
    mkdir -p $NS_WDIR/webapps/sys/webdashboard/dashboards/system/alert
fi

if [ -d "$NS_WDIR/webapps/UnifiedDashboard/config/dashboards/system/alert" ];then
    cp -r $NS_WDIR/webapps/UnifiedDashboard/config/dashboards/system/alert/* $NS_WDIR/webapps/sys/webdashboard/dashboards/system/alert
fi

#Copy all contents of webapps/UnifiedDashboard/config/StoreView
 mkdir -p $NS_WDIR/webapps/sys/unifiedConfig/StoreView
 cp -r $NS_WDIR/webapps/UnifiedDashboard/config/StoreView/. $NS_WDIR/webapps/sys/unifiedConfig/StoreView

#Creating dashboard Mapping file if not available
if [ ! -f "$NS_WDIR/webapps/sys/webdashboard/dashboardMapping.json" ];then
 cp $NS_WDIR/webapps/UnifiedDashboard/config/dashboardMapping.json $NS_WDIR/webapps/sys/webdashboard/
fi



#Copying Menu JSON to unified config directory which is further used by UnifiedDashboard.
if [ -d "$NS_WDIR/webapps/UnifiedDashboard/config" ];then
  cp $NS_WDIR/webapps/UnifiedDashboard/config/*.json $NS_WDIR/webapps/sys/unifiedConfig
fi

#Copying Menu JSON to unified config directory for alert which is further used by UnifiedDashboard.
if [ -d "$NS_WDIR/webapps/UnifiedDashboard/config/alert" ];then
  cp $NS_WDIR/webapps/UnifiedDashboard/config/alert/*.json $NS_WDIR/webapps/sys/unifiedConfig/alert
fi

#Copying JSON to unified config directory for ddr which is used by UnifiedDashboard.
if [ -d "$NS_WDIR/webapps/UnifiedDashboard/config/ddr" ];then
  cp $NS_WDIR/webapps/UnifiedDashboard/config/ddr/*.json $NS_WDIR/webapps/sys/unifiedConfig/ddr
fi

#Copying TSDB jar into dashboard server.
cp $NS_WDIR/webapps/CavNewTSDB/WEB-INF/lib/CavNewTSDB-0.0.1.jar DashboardServer/WEB-INF/lib/

#Copying HttpClient jars for internal request to Alert Manager
ln -sf ../../../../thirdparty/gui_signed_jars/httpclient-4.5.5.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/httpcore-4.4.9.jar DashboardServer/WEB-INF/lib/
ln -sf ../../../../thirdparty/gui_signed_jars/jsch-0.1.55.jar DashboardServer/WEB-INF/lib/

echo "copying application properties file"
TSDB_CONF_FILE="$NS_WDIR/webapps/sys/application.properties"
if [ ! -f "$TSDB_CONF_FILE" ];then
echo "application properties is not present at the destination"
cp $NS_WDIR/webapps/CavNewTSDB/application.properties $NS_WDIR/webapps/sys/
fi
rm -rf $NS_WDIR/webapps/CavNewTSDB
ln -sf ../../../../thirdparty/gui_signed_jars/commons-pool2-2.8.1.jar DashboardServer/WEB-INF/lib/

#Replacing the NVURL tag with some path in index.html file(NETVISION)
echo "------------------------------------- Now Going to replace the NVURL tag in ProductUI/index.html file from the config.ini where KEYWORD is NVURL------------------------------"
CONF_FILE="$NS_WDIR/webapps/sys/config.ini"
if [ -f "$CONF_FILE" ];then
KEY_WORD=`cat $CONF_FILE | grep -w "^NV_URL"`
if [ "X$KEY_WORD" != "X" ];then
path=`echo "$KEY_WORD"| cut -d '=' -f 2 | tr -d ' '`
OLD_STR="#NVURL"
file="$NS_WDIR/webapps/ProductUI/index.html"
tempFile=/tmp/bk.txt
if [ -f "$file" ]; then
command=`cp $file $tempFile`
sed "s~$OLD_STR~$path~g" $tempFile > $file
rm $tempFile
echo "----------------------------------- NVURL Tag Has been replaced Succesfully in ProductUI/index.html----------------------------------------------------------------------------"
fi
fi
fi
#Removing jersey-bundle-1.19.jar from tomcat 9
if [ -d "$NS_WDIR/apps/apache-tomcat-9.0.50" -o -d "$NS_WDIR/apps/apache-tomcat-9.0.43" -o -d "$NS_WDIR/apps/apache-tomcat-9.0.41" ];then
	rm -f $NS_WDIR/webapps/ProductUI/WEB-INF/lib/jersey-bundle-1.19.jar
	rm -f $NS_WDIR/webapps/DashboardServer/WEB-INF/lib/jersey-bundle-1.19.jar
	rm -f $NS_WDIR/webapps/IntegratedServer/WEB-INF/lib/jersey-bundle-1.19.jar
	rm -f $NS_WDIR/webapps/netstorm/WEB-INF/lib/jersey-bundle-1.19.jar
	rm -f $NS_WDIR/webapps/netdiagnostics/WEB-INF/lib/jersey-bundle-1.19.jar
	rm -f $NS_WDIR/webapps/nvsm/WEB-INF/lib/jersey-bundle-1.19.jar
	rm -f $NS_WDIR/webapps/netcloud/WEB-INF/lib/jersey-bundle-1.19.jar
fi



#AlertManager deployment
if [ ! -d "$NS_WDIR/AlertManager" ];then
    mkdir $NS_WDIR/AlertManager
fi

rm -rf $NS_WDIR/AlertManager/AlertManager-0.0.1-SNAPSHOT.war
cp -r $NS_WDIR/webapps/AlertManager/* $NS_WDIR/AlertManager
rm -rf $NS_WDIR/webapps/AlertManager

#Updating configdb manager service
#sudo cp -f $NS_WDIR/webapps/configdb/bin/configdb_manager /etc/init.d/
#echo "configdb_manager copied successfully!!!!"
#sudo chmod 775 /etc/init.d/configdb_manager
#sudo cp -f $NS_WDIR/webapps/configdb/bin/mongod.conf /etc
#echo "mongod.conf copied successfully!!!!"
#sudo chmod 775 /etc/mongod.conf
#update-rc.d configdb_manager defaults >/dev/null 2>&1

#sudo $CavService $BASENAME 5 configdb_manager

#Updating alert_manager service
sudo $CavService $BASENAME 5 alert_manager

#Updating tomacat and scheduler service
sudo $CavService $BASENAME 5 scheduler
sudo $CavService $BASENAME 5 tomcat



java -cp $NS_WDIR/webapps/ProductUI/WEB-INF/lib/productUI-server.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/netstorm_bean.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/log4j-1.2.14.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/log4j-1.2.16.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/apache-log4j-extras-1.2.17.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/slf4j-api-1.7.12.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/slf4j-ext-1.6.3.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/log4j-core-2.12.1.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/log4j-api-2.12.1.jar com.cavisson.productui.summary.main.CavConfigApplication 

java -cp $NS_WDIR/webapps/DashboardServer/WEB-INF/lib/commons-io-2.2.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/gson-2.2.2.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/dashboardserver.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/netstorm_bean.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/web-dashboard-bean.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/kryo-2.23.0.jar com.cavisson.gui.server.webdashboard.utils.FavoriteLayoutUpdaterTool all 2 0


# Purpose : The purpose of this shell code is to call java binary which is
#           responsible to update mjson while NS build upgrade

if [ ! -f "$NS_WDIR/.migration" ];then
        msgout_both "migration file not exist. So going for create hidden migration file."  

        touch $NS_WDIR/.migration

        DATE=$(date +'%Y%m%d%H%M%S')

        msgout_both "Making gui.mprof.$DATE.tar file for backup."

	tar -cvf $NS_WDIR/gui.mprof.$DATE.tar -C $NS_WDIR mprof/

        JAR_DIR=$NS_WDIR/webapps/ProductUI/WEB-INF/lib
        CLASSPATH=$JAR_DIR/gson-2.2.2.jar:$JAR_DIR/json_simple-1.1.jar:$JAR_DIR/productUI-server.jar:.

	java -cp $CLASSPATH com.cavisson.monitor.main.cm_upgrade_mjson >>$LOG_FILE_NAME 2>&1
	
	if [ $? -ne 0 ];then
            msgout_both "Error occur while executing mjson migration code."
        else
	    msgout_both "Migration code execute successfully."
        fi

else
        msgout_both "Already exist latest mjson, Hence skipping migration for mjson."
fi


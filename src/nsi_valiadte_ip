#!/bin/sh
# Name: nsi_validate_ip
# Author: Sanjay/Achint
#
# Takes input in the format 
#	nsi_validate_ip start_ip:num_up ..
# returns matching IP range entries for client , if matching ip range is 
# not found, NULL is returned in the format:
#      start_ip num_ip Start Start IP:mataching_rsange_start_ip Max IP: Matching_range_num_ip
# Modification History:
#   05/01/06  Initial version
#ip entries file is now no longer Controller specific. Hence changing it to /home/cavisson/work
IP_ENTRIES=/home/cavisson/work/sys/ip_entries
if [ "$num_args" -lt 1 ];then
  echo "Usage: nsi_validate_ip start_ip:num-ip..."
  exit 1
fi

#Create list of input ranges into start_ip[] and num_ip[] arrays
#List index starts from 1 and has num_args entries
num_inputs=$#
for j in `seq 1 $num_inputs`
do
    #Check format - IP:num_ip
    out=`nsi_check_format -X $1`
    if [ $? -ne 0 ];then
	echo "ERROR: Input ($1)  format  not OK" 
	exit 1
    fi
  
    #Extract Starting IP and Number of IPs given by the User.
    start_ip[$k]=`echo "$1" | cut -d":" -f1`
    num_ip[$k]=`echo "$1" | cut -d":" -f2`

    #Get Numeric IP's
    numeric_ip=`echo "$out" | cut -d" " -f1`
    numeric_start_ip[$k]=$numeric_ip
    numeric_end_ip[$k]=`expr $numeric_ip + ${num_ip[$k]} - 1`

    shift
done

#Create list of available ranges into avail_start_ip[] and avail_num_ip[] arrays
#Also convert to numeric start and end IP's
#List index starts from 1 and has num_avail entries
k=1
$NS_WDIR/work/nsu_show_address >/tmp/nsi_validate_ip.$$
while read ip num
do
    if [ $ip = "Admin" ];then
      avail_start_ip[$k]=`echo "$num" | cut -d":" -f2`
      avail_num_ip[$k]=1
    elif [ $ip = "Additional" -o $ip = "Start" ];then
	continue
    else
      avail_start_ip[$k]=$ip
      avail_num_ip[$k]=i$num
    fi
    numeric_avail_start_ip[$k]=`nsi_check_format -I ${avail_start_ip[$k]}`
    numeric_avail_end_ip[$k]=`expr ${numeric_avail_start_ip[$k]} + ${avail_num_ip[$k]} - 1`
    k=`expr $k + 1`
done </tmp/nsi_vakidate_ip.$$
rm /tmp/nsi_validate_ip.$$
num_avail_entries=`expr $k -1`


#For each input range check the matching available range
#print the matching available range
#If no available range, print NULL fro that input range
for i in `seq 1 $num_inputs`
do 
    matched=0
    A=${numeric_start_ip[$i]}
    B=${numeric_end_ip[$i]}
    for j in `seq 1 $num_avail_entries`
    do
    	X=${numeric_avail_start_ip[$k]}
    	Y=${numeric_avail_end_ip[$k]}
	# A-B is inclusive in range X-Y
	#IS_INCLUSIVE(A,B, X, Y) ((A >= X && A <= Y) && (B >= X && B <= Y))
	if [ \( $A -ge $X -a $A -le $Y \) -a \( $B -ge $X -a $B -le $Y \) ];then
	    matched=1
	    break
	fi
	if [ $matched -eq 1 ];then
	    #Input entry matached at index i with avail_entry at indext k
            echo "${start_ip[$i]} ${num_ip[$i]} Start IP:$avail_start_ip[$j]} Max IP:$avail_num_ip[$j]}"
	else
	    #No match ifor Input entry at index i
    	    echo "${start_ip[$i]} ${num_ip[$i]} NULL "
	fi
    done
done

exit 0

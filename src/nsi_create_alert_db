#!/bin/bash

##############################################################################################
# Purpose :                                                                                  #
# Use of This tool is to create alert database that will be used by AlertManager for storing #
# Active alert/alert history and alert action history                                        #
##############################################################################################

if [ "X$NS_WDIR" == "X" ];then
  echo "NS_WDIR must be set"
  exit
fi

CNTLR_NAME=`echo $NS_WDIR | cut -d '/' -f 4`

init_var()
{ 
  DB_IP="127.0.0.1"
  DB_PORT="5432"
  DB_SAAS_MODE=""
  DB_NAME="alert"
  DB_USER="postgres"
  DB_PWD="postgres"
  DB_PASSWORD="cavisson"
  DB_USERNAME="cavisson"
}

set_pgpassword_env()
{
 export PGPASSWORD="$DB_PWD"
}

unset_pgpassword_env()
{
  if [ "X$DB_PWD" != "X" ];then
    unset PGPASSWORD
  fi
}

show_error()
{
  echo $Error | grep "ERROR" >$NS_WDIR/.nsi_create_alert_db
  if [ $? == 0  ]; then
    echo $Error
  fi
}

checkForDb() 
{
  init_var
  set_pgpassword_env

  echo "psql -U $DB_USER -h $DB_IP -p $DB_PORT -d $DB_NAME"
  echo "Going to create alert database used by AlertManager."
  if psql -U $DB_USER -h $DB_IP -p $DB_PORT -lqt | cut -d \| -f 1 | grep -w $DB_NAME ; then
    echo "$DB_NAME is already present in db";
  else  
    if [ "X${DB_NAME}" == "Xalert" ]; then
  	Error=`psql -U $DB_USER -h "$DB_IP" -p "$DB_PORT" <<-EOF
		CREATE DATABASE "$DB_NAME";
		EOF`
        echo "${DB_NAME} database created"
     else
        if psql -U $DB_USER -h $DB_IP -p $DB_PORT -lqt | cut -d \| -f 1 | grep -w "alert" ; then
	     	Error=`psql -U $DB_USER -h "$DB_IP" -p "$DB_PORT" <<-EOF
            	SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'alert' AND pid <> pg_backend_pid();
	    	CREATE DATABASE "$DB_NAME";
        	EOF`
        	echo "${DB_NAME} database created"
	else 
        	Error=`psql -U $DB_USER -h "$DB_IP" -p "$DB_PORT" <<-EOF
           	CREATE DATABASE "$DB_NAME";
        	EOF`
        	echo "${DB_NAME} database created"
	fi
     fi
  fi
 }

# Including nsi_db_utils
. $NS_WDIR/bin/nsi_db_utils

checkForDb

if psql -U $DB_USER -h $DB_IP -p $DB_PORT -lqt | cut -d \| -f 1 | grep -wE "alert|alert_${CNTLR_NAME}" ; then
	echo "alert database is created in database"
else
	echo "unable to create alert database"
fi

unset_pgpassword_env

#!/bin/bash

##############################################################################################
# Purpose :                                                                                  #
# Use of This tool is to 								     #
#   1. Create a new controller specific access_control database 			     #
#   2. Migrate access_control database to specific contoller access_control database	     #
#   3. To delete access_control database					 	     #
#   4. To Create a new access_control database 						     #
##############################################################################################

create_db=0
db_name=""

if [ "X$NS_WDIR" == "X" -a "X$controller_add" != "X2" ];then
  tput setaf 1
  echo "NS_WDIR must be set"
  tput sgr0
  exit 1
fi

CNTRLR_NAME=`echo $NS_WDIR | cut -d '/' -f4`

show_error()
{
  echo $Error | grep "ERROR" >/dev/null
  if [ $? == 0  ]; then
    echo $Error
    exit 1
  fi
}

usage()
{
  tput setaf 1
  echo "Usage"
  echo "-m : For Migrating access_control database with controller wise access_control database" 
  echo "-f : For creating a fresh controller_wise access control database"
  echo "-d : For Deleting access_control database"
  tput sgr0
  exit 1
}

###############################################Deletion of controller_specific_access_control_database############################################
ctrl_specific_access_control_del()
{
    local controller_name=$1
    
    if  psql -lqt | cut -d \| -f 1 | grep -w "access_control_${controller_name}"  ; then
    Error=`psql -U postgres <<-EOF
    SELECT pg_terminate_backend (pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'access_control_${controller_name}' AND pid <> pg_backend_pid();
    drop database "access_control_${controller_name}";
	EOF`
    show_error
  else
    echo "access_control_${controller_name} database not exist"
  fi
  unset controller_name
}

################################################Creating access_control database####################################################################

create_access_control_db()
{
  echo "Going to create table for access control."
  if psql -lqt | cut -d \| -f 1 | grep -w "access_control" ; then
    echo "access_control is already present in db";
    exit 1
  fi
  db_name=access_control
  create_db=1
  Error=`createdb -U postgres access_control`
  show_error
}


############################################## Deletion of access_control database #################################################################

access_control_del()
{
  if  psql -lqt | cut -d \| -f 1 | grep -w "access_control"  ; then
    Error=`psql -U postgres <<-EOF
    SELECT pg_terminate_backend (pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'access_control' AND pid <> pg_backend_pid();
    drop database access_control;
	EOF`
    show_error
  else
    echo "access_control database not exist"
  fi
}

############################################ check controller specific database is already present ########################################

check_db_ctrl()
{
  if  psql -lqt | cut -d \| -f 1 | grep -w "access_control_${CNTRLR_NAME}"  ; then
    echo "access_control_${CNTRLR_NAME} is already present in db ";
    exit 1
  else
    Error=`psql -U postgres 2>&1 <<-EOF
    CREATE DATABASE "access_control_${CNTRLR_NAME}";
	EOF`
    show_error
    echo "Creating controller specific database"
    echo "database name -> access_control_${CNTRLR_NAME}"
    db_name=access_control_${CNTRLR_NAME}
    create_db=1
    if [ -f $NS_WDIR/webapps/sys/hibernate.cfg.xml ];then
      #change in hibernate.cfg.xml file
      sed -i "s/\<access_control\>/access_control_${CNTRLR_NAME}/g" $NS_WDIR/webapps/sys/hibernate.cfg.xml
    else
      echo "file [$NS_WDIR/webapps/sys/hibernate.cfg.xml] not present" >$NS_WDIR/.nsi_access_control_logs
    fi
  fi
}

###################################Migrating access_control database to Controller specific database############################################### 

migrate_db()
{ 
  if  psql -lqt | cut -d \| -f 1 | grep -w "access_control"  ; then
    echo "access_control database is available"
    Error=`psql -U postgres 2>&1 <<-EOF 
      SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'access_control' AND pid <> pg_backend_pid();
      CREATE DATABASE "access_control_${CNTRLR_NAME}" WITH TEMPLATE access_control;
	EOF`
    show_error
    echo "access_control database successfully migrated "
    echo "access_control_${CNTRLR_NAME} created"
     
    if [ -f $NS_WDIR/webapps/sys/hibernate.cfg.xml ];then
        #change in hibernate.cfg.xml file
      sed -i "s/\<access_control\>/access_control_${CNTRLR_NAME}/g" $NS_WDIR/webapps/sys/hibernate.cfg.xml
    else
      echo "file [$NS_WDIR/webapps/sys/hibernate.cfg.xml] not present" >$NS_WDIR/.nsi_access_control_logs
    fi
  else
    echo "access_control database is not available"
    exit 1
  fi
}

#################################### rename controller specific database is already present else will be created ########################################
ctrl_specific_access_control_rename()
{
  echo "Renaming access_control database for controller  $ControllerName to $NewControllerName ";
  if  psql -lqt | cut -d \| -f 1 | grep -w "access_control_${ControllerName}"  ; then
    echo "Renaming access_control_${ControllerName} is present in db ";
    Error=`psql -U postgres 2>&1<<+
  ALTER DATABASE "access_control_${ControllerName}" RENAME TO "access_control_${NewControllerName}";
+` 
    if [ -f /home/cavisson/${NewControllerName}/webapps/sys/hibernate.cfg.xml ];then
      #change in hibernate.cfg.xml file
      echo "file [/home/cavisson/${NewControllerName}/webapps/sys/hibernate.cfg.xml] is present" >$NS_WDIR/.nsi_access_control_logs
      sed -i "s/\<access_control_${ControllerName}\>/access_control_$NewControllerName/g" /home/cavisson/$NewControllerName/webapps/sys/hibernate.cfg.xml
    else
      echo "file [/home/cavisson/${NewControllerName}/webapps/sys/hibernate.cfg.xml] not present" >$NS_WDIR/.nsi_access_control_logs
    fi
  else
    Error=`psql -U postgres 2>&1 <<-EOF
    CREATE DATABASE "access_control_${NewControllerName}";
	EOF`
    show_error
    echo "Creating controller specific database"
    echo "database name -> access_control_${NewControllerName}"
    db_name=access_control_${NewControllerName}
    create_db=1
    if [ -f /home/cavisson/${NewControllerName}/webapps/sys/hibernate.cfg.xml ];then
      #change in hibernate.cfg.xml file
      sed -i "s/\<access_control\>/access_control_${NewControllerName}/g" /home/cavisson/${NewControllerName}/webapps/sys/hibernate.cfg.xml
    else
      echo "file [/home/cavisson/${NewControllerName}/webapps/sys/hibernate.cfg.xml] not present" >$NS_WDIR/.nsi_access_control_logs
    fi
  fi
}

if [ "X$controller_add" == "X1" ];then 
  check_db_ctrl 
elif [ "X$controller_add" == "X2" ];then
  ctrl_specific_access_control_del $ControllerName  
elif [ "X$controller_add" == "X3" ];then
  ctrl_specific_access_control_rename $ControllerName $NewControllerName
else
  echo " Please Select "
  echo " m : For Migrating access_control database with controller wise access_control database" 
  echo " f : For Creating a fresh controller_wise access control database"
  echo " d : For Deleting access_control database"
  echo " g : For Creating global access_control database"
  read -p  " Choose any one option to proceed : " var


var=`echo $var | tr '[:upper:]' '[:lower:]'`

case $var in
      "m")
            migrate_db
          ;;
      "f")
            check_db_ctrl
          ;;
      "d")  echo "Do You really want to drop access_control database ???"
            read -p "Enter y for confirmation : " re
            re=`echo $re | tr '[:upper:]' '[:lower:]'`
            if [ "X$re" == "Xy" ];then 
              access_control_del 
            else
              echo "not dropped !!"
              exit 0
            fi

          ;;
       "g")
            create_access_control_db
           ;;
         *)
           echo "Not a valid option"
          #usage
          ;;
  esac

fi

if [ "X$create_db" == "X1" ];then

psql "$db_name" <<-EOF

CREATE TABLE default_components(
   cid INT PRIMARY KEY     NOT NULL,
   componentname           TEXT    NOT NULL
  
);

CREATE TABLE default_features(
   fid INT PRIMARY KEY     NOT NULL,
   featurename           TEXT    NOT NULL
);

CREATE TABLE  component_feature(
   cid INT ,
   fid INT
);

/*************************Entries for default componnents ***************************/

INSERT INTO default_components (cid , componentname ) VALUES (1, 'WebDashboard');
INSERT INTO default_components (cid,  componentname ) VALUES (2, 'ProductUI');
INSERT INTO default_components (cid,  componentname ) VALUES (3, 'NDConfigUI');
INSERT INTO default_components (cid,  componentname ) VALUES (4, 'Alert');
INSERT INTO default_components (cid,  componentname ) VALUES (5, 'NetforestUI');
/*********************************end****************************************/


/************************default entries for the features **************************/

INSERT INTO default_features (fid,  featurename ) VALUES (1, 'Favorites');
INSERT INTO default_features (fid,  featurename ) VALUES (2, 'Pattern Matching');
INSERT INTO default_features (fid,  featurename ) VALUES (3, 'Configuration');
INSERT INTO default_features (fid,  featurename ) VALUES (4, 'Tree');
INSERT INTO default_features (fid,  featurename ) VALUES (5, 'AccessControl');
INSERT INTO default_features (fid,  featurename ) VALUES (6, 'MS SQL Query');
INSERT INTO default_features (fid,  featurename ) VALUES (7, 'Show Vector in Title');
INSERT INTO default_features (fid,  featurename ) VALUES (8, 'Events');
INSERT INTO default_features (fid,  featurename ) VALUES (9, 'Run Time Progress');
INSERT INTO default_features (fid,  featurename ) VALUES (10, 'Virtual User Trace');
INSERT INTO default_features (fid,  featurename ) VALUES (11, 'Stats');
INSERT INTO default_features (fid,  featurename ) VALUES (12, 'Logs');
INSERT INTO default_features (fid,  featurename ) VALUES (13, 'Graph Tree');
INSERT INTO default_features (fid,  featurename ) VALUES (14, 'Compare');
INSERT INTO default_features (fid,  featurename ) VALUES (15, 'Derived Graph');
INSERT INTO default_features (fid,  featurename ) VALUES (16, 'Color Management');
INSERT INTO default_features (fid,  featurename ) VALUES (17, 'Diagnostics');
INSERT INTO default_features (fid,  featurename ) VALUES (18, 'Import data from Access Log file');
INSERT INTO default_features (fid,  featurename ) VALUES (19, 'Sync Point(s)');
INSERT INTO default_features (fid,  featurename ) VALUES (20, 'Update Favorite');
INSERT INTO default_features (fid,  featurename ) VALUES (21, 'Save Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (22, 'Add New Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (23, 'Add Widget');
INSERT INTO default_features (fid,  featurename ) VALUES (24, 'Layout Selection');
INSERT INTO default_features (fid,  featurename ) VALUES (25, 'Widget Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (26, 'Show Graph Data');
INSERT INTO default_features (fid,  featurename ) VALUES (27, 'Add to custom metrices');
INSERT INTO default_features (fid,  featurename ) VALUES (28, 'Show Graph In Tree');
INSERT INTO default_features (fid,  featurename ) VALUES (29, 'Run Command');
INSERT INTO default_features (fid,  featurename ) VALUES (30, 'Download As');
INSERT INTO default_features (fid,  featurename ) VALUES (31, 'Organize Favorites');
INSERT INTO default_features (fid,  featurename ) VALUES (32, 'Add Favorite');
INSERT INTO default_features (fid,  featurename ) VALUES (33, 'Transactions');
INSERT INTO default_features (fid,  featurename ) VALUES (34, 'Reports');
INSERT INTO default_features (fid,  featurename ) VALUES (35, 'Time Period');
INSERT INTO default_features (fid,  featurename ) VALUES (36, 'Application');
INSERT INTO default_features (fid,  featurename ) VALUES (37, 'Profile');
INSERT INTO default_features (fid,  featurename ) VALUES (38, 'Topology');
INSERT INTO default_features (fid,  featurename ) VALUES (39, 'InstrumentationProfileMaker');
INSERT INTO default_features (fid,  featurename ) VALUES (40, 'AutoDiscover');
INSERT INTO default_features (fid,  featurename ) VALUES (41, 'Active Alert');
INSERT INTO default_features (fid,  featurename ) VALUES (42, 'Alert History');
INSERT INTO default_features (fid,  featurename ) VALUES (43, 'Alert Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (44, 'Alert Maintenance Window');
INSERT INTO default_features (fid,  featurename ) VALUES (45, 'Domain Admin');
INSERT INTO default_features (fid,  featurename ) VALUES (46, 'Email/SMS Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (47, 'Start/Stop Test');
INSERT INTO default_features (fid,  featurename ) VALUES (48, 'Pause/Resume Test');
INSERT INTO default_features (fid,  featurename ) VALUES (49, 'Show AuditLog For All');
INSERT INTO default_features (fid,  featurename ) VALUES (50, 'Alert Rule');
INSERT INTO default_features (fid,  featurename ) VALUES (51, 'Modify Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (52, 'Delete Layout');
INSERT INTO default_features (fid,  featurename ) VALUES (53, 'AdminConfigurationNrestart');
INSERT INTO default_features (fid,  featurename ) VALUES (54, 'Alert Baseline');
INSERT INTO default_features (fid,  featurename ) VALUES (55, 'Alert Actions');
INSERT INTO default_features (fid,  featurename ) VALUES (56, 'Alert Policy');
INSERT INTO default_features (fid,  featurename ) VALUES (57, 'Net Cloud Server Management');
INSERT INTO default_features (fid,  featurename ) VALUES (58, 'RunTime Changes');
INSERT INTO default_features (fid,  featurename ) VALUES (59, 'Searches');
INSERT INTO default_features (fid,  featurename ) VALUES (60, 'Visualizations');
INSERT INTO default_features (fid,  featurename ) VALUES (61, 'Dashboards');
INSERT INTO default_features (fid,  featurename ) VALUES (62, 'Reports');
INSERT INTO default_features (fid,  featurename ) VALUES (63, 'AdminAccess');
INSERT INTO default_features (fid,  featurename ) VALUES (64, 'IndexPatterns');
INSERT INTO default_features (fid,  featurename ) VALUES (65, 'Git Settings');
INSERT INTO default_features (fid,  featurename ) VALUES (66, 'Alert Action History');
INSERT INTO default_features (fid,  featurename ) VALUES (67, 'NetHavoc');
INSERT INTO default_features (fid,  featurename ) VALUES (68, 'Monitor');
INSERT INTO default_features (fid,  featurename ) VALUES (69, 'Multi-Node Configuration');
/********************************end*****************************************/

/***********************default entries for comp vs features************************/

INSERT INTO  component_feature(cid , fid) VALUES (1 ,1);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,2);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,3);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,4);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,5);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,6);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,7);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,8);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,9);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,10);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,11);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,12);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,13);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,14);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,15);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,16);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,17);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,18);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,19);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,20);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,21);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,22);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,23);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,24);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,25);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,26);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,27);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,28);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,29);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,30);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,31);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,32);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,33);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,34);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,35);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,36);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,37);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,38);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,39);
INSERT INTO  component_feature(cid , fid) VALUES (3 ,40);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,41);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,42);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,43);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,44);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,50);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,54);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,55);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,56);
INSERT INTO  component_feature(cid , fid) VALUES (4 ,66);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,45);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,46);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,47);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,48);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,49);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,51);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,52);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,53);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,57);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,58);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,59);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,60);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,61);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,62);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,63);
INSERT INTO  component_feature(cid , fid) VALUES (5 ,64);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,65);
INSERT INTO  component_feature(cid , fid) VALUES (2 ,67);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,68);
INSERT INTO  component_feature(cid , fid) VALUES (1 ,69);
/*******************************end*****************************************/

	EOF
fi

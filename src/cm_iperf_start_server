##########################
# Name  : cm_iperf_start_server
# Usage : cm_iperf_start_server [-t <Testrun>]
# Purpose:This shell will start the iperf Server on Controller
# Output : This will return the port on which Iperf Server running
#
# Initial version : Friday, Sept 6 2020
# Author Name     : Paras Jain
# CVS DOC Path    : docs/cvsroot/cavisson/docs/Products/NetStorm/TechDocs/Monitors/Req/IperfMonitoringForNetcloudReq.docx 
##########################

IP=" "
port=" "
output=" "
output2=" "
TR=" "
PROCESS_PID=""
NOHUP_PID=""
IPERF_TRACE_LOG=""


debug_log()
{
    echo "`date +'%F %X'`|$*" >> "$IPERF_TRACE_LOG"
}

#This function set port on the based on available between 7861 to 7870
set_and_get_port()
{
  local flag=0
  debug_log "set_and_get_port Method() Called "
  for (( port=7861; port<7870; port++ )) do
   command=`iperf -s -p $port -f M -D &>>"$IPERF_TRACE_LOG"`
   output=`tail -4 "$IPERF_TRACE_LOG" 2>/dev/null` 
   search=`echo $output | grep "bind failed" 2>/dev/null`
   if [ "X$?" == "X1" ];then
     PROCESS_PID=`pgrep -a  iperf | grep $port | cut -d ' ' -f 1`
     debug_log "iperf process $iperf_process"
     flag=1
     break
   fi
  done
  if [ "X$flag" = "X1" ];then 
     echo $port 
   else 
    command=`iperf -s -p 5001 -f M -D &>>"$IPERF_TRACE_LOG" 2>/dev/null`
    output=`tail -4 $IPERF_TRACE_LOG 2>/dev/null`
    search=`echo $output | grep "bind failed" 2>/dev/null`
    if [ "X$?" == "X1" ];then
       port=5001
       PROCESS_PID=`pgrep -a  iperf | grep $port | cut -d ' ' -f 1`
       debug_log "None of the port available use 5001"
       echo $port
    else
       port=0
       debug_log "None of the port with 5001 port is not available so set 0"
       echo $port
    fi 
  fi
  
  debug_log "Iperf Server start on port $port and process pid $PROCESS_PID"
}

check_for_iperf()
{
  iperf_process=$2  
  test_run=$1 
  iperf_port=$3
  IPERF_TRACE_LOG="$NS_WDIR/logs/TR$test_run/ns_logs/iperf_trace.log"
  flag=0
  started_flag=0
  if [ "X$iperf_port" == "X" ];then
   echo "`date +'%F %X'` |Port is not free so set to be 0 and exit"  >>$IPERF_TRACE_LOG
   exit
  fi
  echo "`date +'%F %X'` |Iperf Process pid $iperf_process NC test run $test_run Iperf Server Port $iperf_port" >>"$IPERF_TRACE_LOG"
  while true
  do
    check=`nsu_show_netstorm -n $test_run` 
    echo "`date +'%F %X'`|Test run_status $check" >> "$IPERF_TRACE_LOG" 2>&1
    if [ "X$check" = "XInactive" ];then
      echo "`date +'%F %X'`|Test is not running Hence Going to stop Iperf Server with iperf process id $iperf_process" >>"$IPERF_TRACE_LOG" 2>&1
      kill -9 $iperf_process 2>/dev/null
      exit
    else
      IPERF=` ps -p $iperf_process 2>/dev/null`
      if [ $? != 0 ];then
        command=`iperf -s -p $iperf_port -f M -D &>> "$IPERF_TRACE_LOG" 2>/dev/null`
        iperf_process=`pgrep -a iperf  | grep $iperf_port | cut -d ' ' -f 1`  2>/dev/null
        echo "`date +'%F %X'`| iperf process $iperf_process" >>$IPERF_TRACE_LOG
        started_flag=0
        if [ "X$iperf_process" = "X" ];then
          echo "`date +'%F %X'`|Port $iperf_port is busy can't start iperf server" >>"$IPERF_TRACE_LOG" 2>&1
          flag=0
        else
          if [ "X$flag" == "X0" -o "X$started_flag" == "X0" ];then
             echo "`date +'%F %X'`|Iperf Again started with Port $iperf_port and Process Pid $iperf_process" >>"$IPERF_TRACE_LOG" 2>&1  
             flag=1
             started_flag=1 
          fi  
        fi
      fi
    fi
    sleep 60
done
}

Usage()
{ 
  echo "Usage:"
  echo "cm_iperf_start [-t <Testrun>] " 
  exit 1
}

while getopts t:? C 2>/dev/null
 do
    case $C in
     t) TEST_RUN=$OPTARG;;
     ?) Usage;;
     *) Usage;;
     esac
 done

if [ "X$TEST_RUN" == "X" ];then
  Usage
else 
  IPERF_TRACE_LOG="$NS_WDIR/logs/TR$TEST_RUN/ns_logs/iperf_trace.log"
fi


set_and_get_port
nohup -- sh -c "$(typeset -f check_for_iperf); check_for_iperf "$TEST_RUN" "$PROCESS_PID" "$port" " >>"$IPERF_TRACE_LOG" 2>&1 0</dev/null & 

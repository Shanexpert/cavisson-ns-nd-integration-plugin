#
# Name: nsi_status_rpr
# Purpsose: To get the status of nsu_rpr process. pid is taken from lock file
#
# Usage:  nsi_status_rpr <-P protocol>
# Exit Values:   0 - running, 
#		 1 - not running
#		-1 - error

SocketRecordingRunning=0
protocol=""

if [ "XX" = "XX$NS_WDIR" ]
then
  NS_WDIR=/home/cavisson/work
fi

SocketLockFile=$NS_WDIR/bin/.nsu_rpr.lock
RPRLogFile=$NS_WDIR/webapps/netstorm/logs/status_rpr.log
RPRExitLogFile=$NS_WDIR/workspace/admin/default/cavisson/default/default/scripts/_newSocketScript/logs/rpr_exit_status.log

> $RPRLogFile

msgout ()
{
	echo "$1" >>$RPRLogFile
	echo "$1"
}

check_socket_recording_status()
{
  if [ -f $SocketLockFile ];then
    pid=`cat $SocketLockFile`
    if [ -e /proc/$pid/comm ];then
      grep $PROCESS_NAME /proc/$pid/comm >/dev/null 2>&1
      if [ $? -eq 0 ]; then
        SocketRecordingRunning=1
        return
      fi
    fi
  fi

  rm -f $SocketLockFile
  SocketRecordingRunning=0
  #At this point, recorder proxy (nsu_rpr) is not running
}

show_running()
{
  msgout "Script recording is running"
  exit 0
}

while getopts p: c
do
  case $c in
  p) protocol="$OPTARG";;
  ?) echo "Usage: $0 <-p protocol >"
     exit -1 ;;
  esac
done

if [ "X$protocol" == "X" ]; then
  msgout "Error: Usage: $0 <-P protocol > "
  exit -1
fi

msgout "Checking if script recorder running "

if [ "X$protocol" == "Xsocket" ]; then
  PROCESS_NAME="nsu_rpr"
  check_socket_recording_status
  if [ $SocketRecordingRunning -eq 1 ]; then
    show_running
  fi
else
  msgout "Error: Protocol can only be socket "
  exit -1
fi

msgout "Script recordings is not running "

if [ "X$protocol" == "Xsocket" ]; then
  if [ -s $RPRExitLogFile ]; then
    echo "Following is the error:"
    cat $RPRExitLogFile
  fi
fi

exit 1

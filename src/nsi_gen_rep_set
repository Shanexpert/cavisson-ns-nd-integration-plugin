#!/bin/sh

# Name   : nsi_gen_rep_set
# Author : Achint
# Purpose: 
# Takes input in the format 
#  nsi_gen_rep_set <TestRun number> <test_run_start_date> <test_run_start_time>
#
# Exit Values:
#   0 - OK
#   1 - Bad Arguments/Invalid input format
#
# Modification History:
#   03/12/07  Initial version
#   21/06/17  Added new Keyword REPORT_MAIL_SETTING

#include sendmail_utils shell
. $NS_WDIR/bin/sendmail_utils

# This is to set CLASSPATH for PC
export CLASSPATH=$CLASSPATH:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jfreechart-1.0.14.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/itext-paulo-154.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jcommon-1.0.17.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/poi.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/commons-io-2.2.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/kryo-2.23.0.jar 

if [ $# -ne 6 ];then
  echo "Usage: nsi_gen_rep_set <TestRun number> <USER_NAME><test_run_start_date> <test_run_start_time><TEST_DURATION><WORKSPACE_PROFILE>"
  echo "Test Run Number should be numeric"
  echo "Start Date should be in mm/dd/yy"
  echo "Start Time should be in 24 hours format HH:MM:SS"
  exit 1 
fi

if [ "XX$NS_WDIR" == "XX" ];then
  echo "NS_WDIR must be defined"
  exit 1
fi

if [ ! -d $NS_WDIR/logs/TR$1 ];then 
  echo "Given Test Run number $1 does not exist."
  exit 1
fi

TEST_RUN_NUM=$1
USER_NAME=$2
TEST_RUN_START_DATE=$3
TEST_RUN_START_TIME=$4
TEST_DURATION=$5
WORKSPACE_PROFILE=$6

TEMPFILE=/tmp/scenario.$$
SCENARIO_FILE=$NS_WDIR/logs/TR$TEST_RUN_NUM/scenario

SEND_PASS_FAIL_REPORT=0 #To send pass fail report in mail

get_fields ()
{
  set $line
#  if [ $# != 11 ];then
#    echo "Number of fields after keyword REPORT_SET_GEN is less then 10."
#    return 1
#  fi
  KEYWORD=$1;shift
  OVERRIDE_REPORT_OPTION=$1;shift
  TEMPLATE_NAME=$1;shift
  REPORT_SET_NAME=$1;shift
  XASIS_TIME_FORMAT=$1;shift
  TIME_OPTION=$1;shift
  TIME_SELECTION_FORMAT=$1;shift
  START_DATE=$1;shift
  START_TIME=$1;shift
  END_DATE=$1;shift
  END_TIME=$1;
  if [ $TIME_OPTION == 1 ];then
    TIME_OPTION="Total Run"
  elif [ $TIME_OPTION == 2 ];then
    TIME_OPTION="Run Phase Only"
  elif [ $TIME_OPTION == 3 ];then
    TIME_OPTION="Specified Time"
  fi

  return 0
}

debug ()
{
  echo $KEYWORD
  echo $TEMPLATE_NAME
  echo $OVERRIDE_REPORT_OPTION
  echo $XASIS_TIME_FORMAT
  echo $TIME_OPTION
  echo $TIME_SELECTION_FORMAT
  echo $START_DATE
  echo $START_TIME
  echo $END_DATE
  echo $END_TIME
  echo $REPORT_SET_NAME
}

gen_rep_set ()
{
#Getting controller name
Controller_name=`echo $HPD_ROOT |cut -d'/' -f3`
#set apps controller name
APPS_CONTROLLER_NAME="$NS_WDIR/apps"
#set tomcat home path
#Note: In future, if any new version of tomcat is added then we need to add condition here.
if [ -d $APPS_CONTROLLER_NAME/apache-tomcat-9.0.50 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-9.0.50
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-9.0.43 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-9.0.43
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-9.0.41 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-9.0.41
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.105 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.105
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.104 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.104
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.99 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.99
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.91 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.91
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.59 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.59
elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.52 ];then
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.52
else
  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-6.0.16  
fi
#server.xml path
XML_FILE="$TOMCAT_HOME/conf/server.xml"

#Get All active HTTP/1.1 Connector. 
  CONNECTOR_FILE=/tmp/connector.$$
  cat $XML_FILE|sed -e "s/-->/\n-->/g" | sed -e "/<!--/,/-->/d"|tr '[\n]' '[ ]'|sed -e 's#/>#/>\n#g' -e 's#<#\n<#g'|grep "<Connector" |grep "HTTP\/1.1" >$CONNECTOR_FILE 
#Check if SSLEnabled connector is present then we will pick that one.
  CONNECTOR_STRING=`grep "SSLEnabled" $CONNECTOR_FILE`
  if [ -z "$CONNECTOR_STRING" ];then
    CONNECTOR_STRING=`head -1 $CONNECTOR_FILE`
    Protocol="http"
  else 
    Protocol="https" 
  fi
  rm $CONNECTOR_FILE
  
#getting port  and IP
  PORT=`echo $CONNECTOR_STRING | grep -o 'port=\"[0-9]*\"'|grep -o "[0-9]*"` 
  IP=`cat $HOME/etc/cav.conf | grep "^NSAdminIP" | cut -d" " -f2 | cut -d/ -f1`
  
#Set default values. 
  if [ -z $PORT ];then
    if [ "X$Protocol" == "Xhttp" ];then
      PORT=80
    else 
      PORT=443
    fi 
  fi  
  
  if [ -z $IP ];then
    INTERFACE=`netstat -nr|grep -wm1 UG|awk '{print $8}'`
    IP=`ifconfig $INTERFACE |grep 'inet addr' |cut -d':' -f2 |cut -d' ' -f1`
    if [ -z "$IP" ];then
      IP=127.0.0.1
    fi
  fi
java -Dlog4j2.configurationFile=$NS_WDIR/webapps/.tomcat/log4j2/log4j2.xml -cp $CLASSPATH:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/dashboardserver.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/java-json.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/json_simple-1.1.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/gson-2.2.2.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/netstorm_bean.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/jersey-bundle-1.19.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jfreechart-1.0.14.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/batik-all-1.7.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/rhino-1.7R2.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/xml-apis-ext.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/java-getopt-1.0.9.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/itext-paulo-154.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jcommon-1.0.17.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/poi.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jcommon-1.0.17.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/commons-io-2.2.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/kryo-2.23.0.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/exp4j-0.4.5.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/commons-fileupload-1.3.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/web-dashboard-bean.jar:$NS_WDIR/thirdparty/gui_signed_jars/log4j-api-2.12.1.jar:$NS_WDIR/thirdparty/gui_signed_jars/log4j-core-2.12.1.jar:$NS_WDIR/thirdparty/gui_signed_jars/disruptor-3.4.2.jar:$NS_WDIR/webapps/ProductUI/WEB-INF/lib/guava-23.0.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/ISExtBundle.jar -DNS_WDIR=$NS_WDIR -Djava.awt.headless=true com.cavisson.gui.server.webreports.services.StatReportGenerator $TEST_RUN_NUM $USER_NAME $PORT $Protocol $IP
}

gen_rep_summary()
{
java -Dlog4j2.configurationFile=$NS_WDIR/webapps/.tomcat/log4j2/log4j2.xml -cp $NS_WDIR/webapps/netstorm/WEB-INF/lib/kryo-2.23.0.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/dashboardserver.jar:$NS_WDIR/webapps/webdashboard/WEB-INF/lib/web-dashboard-bean.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/gson-2.2.2.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/json_simple-1.1.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/java-json.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jfreechart-1.0.14.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/java-getopt-1.0.9.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/itext-paulo-154.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jcommon-1.0.17.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/poi.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jcommon-1.0.17.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/commons-io-2.2.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/exp4j-0.4.5.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/commons-fileupload-1.3.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/velocity-1.7.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/velocity-1.7-dep.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/commons-dbcp-1.4.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/commons-pool-1.6.jar:$NS_WDIR/webapps/DashboardServer/WEB-INF/lib/postgresql-9.1-901.jdbc4.jar:$NS_WDIR/thirdparty/gui_signed_jars/log4j-api-2.12.1.jar:$NS_WDIR/thirdparty/gui_signed_jars/log4j-core-2.12.1.jar:$NS_WDIR/thirdparty/gui_signed_jars/disruptor-3.4.2.jar:$NS_WDIR/thirdparty/gui_signed_jars/guava-23.0.jar -DNS_WDIR=$NS_WDIR com.cavisson.gui.server.webreports.services.StatReportGenerator $TEST_RUN_NUM
}

report_mail()
{
  #settings of REPORT_MAIL_SETTING <mailAttachment mode> <sendmailto> <sendmail cc> <sendmail bcc>
  line=$(grep ^REPORT_MAIL_SETTING $SCENARIO_FILE |grep -m 1 "REPORT_MAIL_SETTING")
  if [ $? != 0 ];then
    echo "Keyword REPORT_MAIL_SETTING not found in $TEST_RUN_NUM test run"
    exit 1
  fi

  i=0
  for ar in $line
  do
    arg[${i}]=$ar
    i=$((i + 1))
  done

  if [ "X${arg[0]}" == "XREPORT_MAIL_SETTING" ]; then
    if [ ${arg[1]} -gt 0 ];then
      #Bug-99871
      TOMCAT_URL="$Protocol://$IP:$PORT"
      if [ $SEND_PASS_FAIL_REPORT == 1 ]; then
	ATTACH_MODE=2 #With Attachment
	ATTACH_TYPE=6 #Custom Message with attachment filename
        PASS_FAIL_STATUS=`cut -d: -f2 $NS_WDIR/logs/TR$TEST_RUN_NUM/TestSuiteStatus.data 2> /dev/null`
        LINE2=""
         LINE3="Performance Report : $TOMCAT_URL/logs/TR$TEST_RUN_NUM/reports/htmlReports/PerformanceReport/index.html"
        if [ "X$PASS_FAIL_STATUS" != "X" ]; then
          LINE1="       Test Status                    : $PASS_FAIL_STATUS"
	  LINE4="Pass/Fail Report   : $TOMCAT_URL/logs/TR$TEST_RUN_NUM/ready_reports/TestSuiteReport.html"
	  MESSAGE="$LINE1\n$LINE2\n$LINE3\n$LINE4"
        else
	  MESSAGE="$LINE2\n$LINE3"
        fi
        FILENAME="ready_reports/testsuite_report_$TEST_RUN_NUM.pdf"
        send_mail $TEST_RUN_NUM $TEST_DURATION $ATTACH_MODE $NS_WDIR $ATTACH_TYPE "ATTACHMENT=$FILENAME;TYPE=1;MESSAGE=$MESSAGE" "$TOMCAT_URL" ${arg[2]} ${arg[3]} ${arg[4]}
      else 
      send_mail $TEST_RUN_NUM $TEST_DURATION ${arg[1]} $NS_WDIR $OVERRIDE_REPORT_OPTION $REPORT_SET_NAME "$TOMCAT_URL" ${arg[2]} ${arg[3]} ${arg[4]}
      fi
    fi
  fi

}

gen_rep_summary

#CHECK_PROFILE default/default/chkprofile1,default/default/chkprofile2
get_chk_profile_fields(){
  set $line
  KEYWORD=$1;shift
  CHECK_PROFILE_LIST=$1
  return 0
}
#Test Report: accord - accordTest<1-1> (Test Cycle Number: 201016_160258)
gen_pass_fail_report(){
    LOG_CYCLE_DIR_NAME=$TEST_RUN_NUM
        TESTCASE_IDX="1"
        SCENARIO_NAME="TODO:GetScenName"
        TEST_SUITE_NAME=$SCENARIO_NAME
        TMP_TEST_CASE=$NS_WDIR/workspace/$WORKSPACE_PROFILE/cavisson/default/default/testcases/testcase_$$
        mkdir -p $TMP_TEST_CASE
        CHECK_STATUS_TMP_FILE=$TMP_TEST_CASE/check_status_using_profile
        #TODO: Handle multiple check profiles in list
        PROFILE_LIST=$(echo $CHECK_PROFILE_LIST | tr "," "\n")
        for PROFILE in $PROFILE_LIST
	do
	  echo "CHECK_STATUS $PROFILE" >> $CHECK_STATUS_TMP_FILE  
	done  
#        echo "CHECK_STATUS $CHECK_PROFILE_LIST" >> $CHECK_STATUS_TMP_FILE
        echo "NORMAL_THRESHOLD 20" >> $CHECK_STATUS_TMP_FILE
        echo "WORNING_THRESHOLD 20-50" >> $CHECK_STATUS_TMP_FILE
        echo "CRITICAL_THRESHOLD 50" >> $CHECK_STATUS_TMP_FILE
        echo "FAIL_CRITERIA 10" >> $CHECK_STATUS_TMP_FILE
        #REPORT_MAIL_SETTING 1 neeraj@cavisson.com,paras@cavisson.com a@cav.com,b@cav.com d@cav.com,a@bcc.com
        EMAIL_CONF_TMP_FILE=$TMP_TEST_CASE/mail_configuration

        echo "REPORT_AS_ATTACHMENT 1" >> $EMAIL_CONF_TMP_FILE
        echo "MAIL_TO paras.chauhan@cavisson.com" >> $EMAIL_CONF_TMP_FILE
        echo "MAIL_CC shyam.mohan@cavisson.com" >> $EMAIL_CONF_TMP_FILE
        echo "MAIL_BCC arun.goel@cavisson.com" >> $EMAIL_CONF_TMP_FILE

        APPS_CONTROLLER_NAME="$NS_WDIR/apps"
	#set tomcat home path
	#Note: In future, if any new version of tomcat is added then we need to add condition here.
	if [ -d $APPS_CONTROLLER_NAME/apache-tomcat-9.0.50 ];then
          TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-9.0.50
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-9.0.43 ];then
	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-9.0.43
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-9.0.41 ];then
  	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-9.0.41
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.105 ];then
          TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.105
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.104 ];then
  	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.104
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.99 ];then
  	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.99
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.91 ];then
  	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.91
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.59 ];then
   	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.59
	elif [ -d $APPS_CONTROLLER_NAME/apache-tomcat-7.0.52 ];then
   	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-7.0.52
	else
  	  TOMCAT_HOME=$APPS_CONTROLLER_NAME/apache-tomcat-6.0.16
	fi

	#server.xml path
	XML_FILE="$TOMCAT_HOME/conf/server.xml"

	#Get All active HTTP/1.1 Connector. 
  	CONNECTOR_FILE=/tmp/connector.$$
  	cat $XML_FILE|sed -e "s/-->/\n-->/g" | sed -e "/<!--/,/-->/d"|tr '[\n]' '[ ]'|sed -e 's#/>#/>\n#g' -e 's#<#\n<#g'|grep "<Connector" |grep "HTTP\/1.1" >$CONNECTOR_FILE
	#Check if SSLEnabled connector is present then we will pick that one.
  	CONNECTOR_STRING=`grep "SSLEnabled" $CONNECTOR_FILE`
  	if [ -z "$CONNECTOR_STRING" ];then
    	  CONNECTOR_STRING=`head -1 $CONNECTOR_FILE`
    	  Protocol="http"
  	else
    	  Protocol="https"
  	fi
  	rm $CONNECTOR_FILE

	#getting port  and IP
  	PORT=`echo $CONNECTOR_STRING | grep -o 'port=\"[0-9]*\"'|grep -o "[0-9]*"`
        IP=`cat $HOME/etc/cav.conf | grep "^NSAdminIP" | cut -d" " -f2 | cut -d/ -f1`

	#Set default values. 
  	if [ -z $PORT ];then
    	  if [ "X$Protocol" == "Xhttp" ];then
      	    PORT=80
    	  else
      	    PORT=443
    	  fi
  	fi

  	if [ -z $IP ];then
    	  INTERFACE=`netstat -nr|grep -wm1 UG|awk '{print $8}'`
    	  IP=`ifconfig $INTERFACE |grep 'inet addr' |cut -d':' -f2 |cut -d' ' -f1`
    	  if [ -z "$IP" ];then
      	   IP=127.0.0.1
    	  fi
  	fi
  
  	IP_ADDR="$IP:$PORT"

        PASS_FAIL_REPORT=`$NS_WDIR/bin/nsi_check_tr_using_profile --t $TEST_RUN_NUM --f default/default/testcase_$$/check_status_using_profile --i $IP_ADDR --c $LOG_CYCLE_DIR_NAME --n $TESTCASE_IDX --s $TEST_SUITE_NAME --d --w $WORKSPACE_PROFILE --u $USER_NAME`
        rm -rf $TMP_TEST_CASE
    PASS_FAIL_STATUS=$?
    cp $NS_WDIR/webapps/netstorm/images/Fail.png $NS_WDIR/webapps/netstorm/images/logo.png $NS_WDIR/webapps/netstorm/images/Pass.png $NS_WDIR/webapps/netstorm/images/star-16.png $NS_WDIR/webapps/netstorm/images/star_off-16.png $NS_WDIR/webapps/netstorm/images/Graph-icon.png $NS_WDIR/logs/TR$TEST_RUN_NUM/ready_reports
}
chk_generate_pass_fail_report(){
grep ^CHECK_PROFILE $SCENARIO_FILE>$TEMPFILE
if [ $? != 0 ];then
  rm -f $TEMPFILE
  echo "Keyword CHECK_PROFILE not found in $TEST_RUN_NUM test run."
  return
fi

while read line
do
  #echo $line
  get_chk_profile_fields
  if [ $? == 1 ];then
    continue
  fi

  #debug
  gen_pass_fail_report
done <$TEMPFILE
rm -f $TEMPFILE

  #Bug-99871
  grep -w ^YAML_PATH $SCENARIO_FILE >/dev/null
  if [ $? == 0 ];then
    SEND_PASS_FAIL_REPORT=1
  fi

}

chk_generate_pass_fail_report

grep ^REPORT_SET_GEN $SCENARIO_FILE >$TEMPFILE
if [ $? != 0 ];then
  rm -f $TEMPFILE
  echo "Keyword REPORT_SET_GEN not found in $TEST_RUN_NUM test run."
  exit 1
fi 


#cd $NS_WDIR/webapps/netstorm/WEB-INF/classes
while read line
do
  #echo $line
  get_fields
  if [ $? == 1 ];then
    continue
  fi 

  #debug
  gen_rep_set
  if [ $OVERRIDE_REPORT_OPTION -gt 0 ];then
    report_mail
  fi
done <$TEMPFILE
rm -f $TEMPFILE

exit 0

#!/usr/bin/perl -w

$NS_WDIR = "$ENV{'NS_WDIR'}";
print "Value is ${NS_WDIR}\n";
if ( "${NS_WDIR}XX" eq "XX" ) {
	print "Env variable NS_WDIR MUST be defined\n";
	exit 1;
}

$OFILE = "/tmp/t1.$$";
$EFILE = "/tmp/t2.$$";
$FFILE = "/tmp/t3.$$";
# get the test run that have DB records
`psql -q test cavisson >$OFILE <<+
select table_name From information_schema.tables where table_name like 'testcase%';
+`;

`grep -i testcase $OFILE | awk -F '_' '{ print \$2 }' >$FFILE`;
# Get the test runs that have any kind of logs
`ls -1d $NS_WDIR/logs/TR* | cut -c 8- >>$FFILE`;
#Nake an uniq sorted list
`sort -nru $FFILE >$OFILE`;
foreach $tnum (`cat $OFILE`) {
    	chomp $tnum;
	if ( -e "$NS_WDIR/logs/TR$tnum/progress.report" ) {
		$report = "Y";
    		$ttime = `grep "Test Started At: " $NS_WDIR/logs/TR$tnum/progress.report | cut -c 18-`;
    		chomp $ttime;
    		$tname = `grep "Test Case Name" $NS_WDIR/logs/TR$tnum/progress.report | cut -c 17-`;
    		chomp $tname;
	} else {
		$report = "N";
		$ttime = "-";
		$tname = "-";
	}

	if ( -e "$NS_WDIR/logs/TR$tnum/reports/raw_data/dlog" ) {
		$raw = "Y";
	} else {
		$raw = "N";
	}
	
	if ( -e "$NS_WDIR/logs/TR$tnum/log" ) {
		$log = "Y";
	} else {
		$log = "N";
	}
	
#Check if DB record exist for a test run
`psql -q test cavisson >$EFILE <<+
select table_name From information_schema.tables where table_name = 'testcase_$tnum';
+`;

	if (`grep -i testcase $EFILE | wc -l` == 1 ) {
		$db = "Y";
	} else {
		$db = "N";
	}

#if [ $REC -eq 1 ]; then
#	echo "Y"
#else
#	echo "N"
##fi
#	$db = `nsu_is_dbrecord $tnum`;
#    print "$tnum $ttime $sname $tname\n";
    write;
}

`rm -f $OFILE`;
`rm -f $EFILE`;
`rm -f $FFILE`;

format STDOUT =
@<<<< @<<<<<<<<<<<<<<<<<< @<<<<<<<<<<<<<<<<<< @<<<<<<< @<<<< @<< @<<<<
$tnum, $ttime, $tname, $report, $log, $db, $raw
.
format STDOUT_TOP =
TR#   Start Time          Scenario Name	      Reports  Logs  DB	 Raw
===   ==================  ==================  =======  ====  ==	 ====
.

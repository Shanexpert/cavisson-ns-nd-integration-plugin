#
# Name: nsi_stop_monitor
# Author: Anil Kumar
# Purpsose: To stop monitor (recorder). pid of recorder is taken from lock file
#
# Usage:  nsi_stop_monitor [-f]
#         -f is is option and is used for stopping forcefully.
# Exit Values:
#  0 - Successfully send stop signal to recorder or recorder was stopped forcefully. 
# -1 - Either lock file is not present or recorder is not running.
# -2 - Could not send the stop signal or recoder could not be stopped forcefully.
# Modification History:
#   05/26/05:Anil:1.1 - Initial Version
#   11/11/05:Achint/Neeraj:1.4
#     - Removed checking if recorder stopped or not.
#     - Changed exit values
#     - Replaced TAB by 2 spaces
#

protocol="http"
FORCE=0

HttpRecordingStopped=1
OtherRecordingStopped=1

if [ "XX" = "XX$NS_WDIR" ]
then
  NS_WDIR=/home/cavisson/work
fi

LockFile=$NS_WDIR/bin/.monitor.lock
LogFile=$NS_WDIR/webapps/netstorm/logs/stop_monitor.log
HPDLogFile=$LogFile

> $LogFile

msgout ()
{
  echo "$1" >>$LogFile
  echo "$1"
}


# Gui will add ENABLE_RECORDING 0 keyword in hpd.conf
# we need to just restart hpd process
stop_other_proto_monitor()
{
  echo "Stopping other protocol service recording using /etc/init.d/hpd_$HPD_CMD restart" >> $HPDLogFile
  /etc/init.d/$HPD_CMD restart 1>> $HPDLogFile 2>&1 
  if [ $? != 0 ]; then
    echo "Error in restarting hpd using $HPD_CMD"
    OtherRecordingStopped=0
  fi
  sleep 3
  /etc/init.d/$HPD_CMD start_time 1>> $HPDLogFile 2>&1 
  if [ $? != 0 ]; then
    echo "HPD is not running after restart"
    OtherRecordingStopped=0
  fi
}

stop_http_proto_monitor()
{
  msgout "Checking if http script recorder is running." >> $LogFile
  cd $NS_WDIR
  if [ ! -f $LockFile ];then
    msgout "ERROR: Lock file ($LockFile) not found. Recorder may not be running." 
    HttpRecordingStopped=0
    return
  fi

  pid=`cat $LockFile`
  if [ ! -e /proc/$pid ];then
    rm -f $LockFile
    msgout "ERROR: Script recorder (pid = $pid) is not running."
    HttpRecordingStopped=0
    return
  fi

  # Normal stopping of recorder
  if [ $FORCE -eq 0 ];then
    msgout "Stopping http service script recorder"
    kill -2 $pid
    if [ $? -eq 0 ];then
      msgout "Stop signal send to recorder."
      msgout "Please note that recorder may take upto few mintues to stop."
    else
      # This can occur if command is not run from same id as where it is started
      msgout "ERROR: Could not send stop signal to recorder."
      HttpRecordingStopped=0
      return
    fi  

  else

  # Forceful stopping of recorder
    msgout "Force stopping script recorder."
    kill -9 $pid
    if [ $? -eq 0 ];then 
      #msgout "Script recorder is stopped Forcefully."
      return
    else 
    # This can occur if command is not run from netstorm id.
      msgout "ERROR: Script recorder is not stopped."
      HttpRecordingStopped=0
      return
    fi
  fi
}

usage()
{
  echo "Usage: $0 <-P protocol > <-f Forcefully>"
  exit -1 
}

args=""
while getopts P:f c
do
  case $c in
  P) protocol="$OPTARG";;
  f) FORCE=1;;
  ?) usage;;
  esac
done

if [ "X$protocol" == "Xhttp" -o "X$protocol" == "Xboth" ]; then
  stop_http_proto_monitor
fi

if [ "X$protocol" == "Xother" -o "X$protocol" == "Xboth" ]; then
  stop_other_proto_monitor
fi


#if http is 1 and other is 1
if [ $HttpRecordingStopped -eq 1 -a $OtherRecordingStopped -eq 1 ]; then
  msgout "Script recorder is stopped."
  exit 0
fi 

exit -1

# End of program

#!/bin/sh
# Name  : nsi_check_ip
# usage : nsi_check_ip
# Author: Sanjay/Achint

#This command is used by nsu_check_ip command
#This command does not take any arggument.
#This command return 1 or 0 exit value.
#This comaand makes the files Actual and Configured.In these files we save the configured and actual IPs which are assigned to the server and client. After this we make difference between Actual files and configured file if get any difference than return 1 otherwise return 0.

#ip entries file 
#ip entries file is now no longer Controller specific. Hence changing it to $HOME_DIR/work
IP_ENTRIES=$HOME_DIR/work/sys/ip_entries

#Actual and Configured files
Actual_eth=/tmp/ip/Actual/eth0
Actual_vlan=/tmp/ip/Actual/interface.vlan
Configured_eth=/tmp/ip/Configured/eth0
Configured_vlan=/tmp/ip/Configured/interface.vlan

#Actual and Configured files after sorting
Actual_eth_sort=/tmp/ip/Actual/eth0.sort
Actual_vlan_sort=/tmp/ip/Actual/interface.vlan.sort
Configured_eth_sort=/tmp/ip/Configured/eth0.sort
Configured_vlan_sort=/tmp/ip/Configured/interface.vlan.sort

#Temporary files
TEMP=/tmp/Temp.$$
TEMP_VLAN=/tmp/Vlan.$$
TEMP_SERVER=/tmp/Server


rm_file ()
{
  #Remove Temporary files
  rm -f $Actual_eth
  rm -f $Actual_vlan
  rm -f $Configured_eth
  rm -f $Configured_vlan
  rm -f $Actual_eth_sort
  rm -f $Actual_vlan_sort
  rm -f $Configured_eth_sort
  rm -f $Configured_vlan_sort
  rm -f $TEMP
  rm -f $TEMP_VLAN
  rm -f $TEMP_SERVER/Actual/*
}

Put_ip_Actual_eth ()
{
  #Put actual IPs which are assigned to load interface save into Actual eth file.
  while read line
  do
    var=`echo $line | cut -d" " -f2`
    echo "$var" >>$Actual_eth
  done<$TEMP
}

#Put IPs which on vlan interface into file
Put_ip_interface_vlan ()
{
  entity=$1
  while read line
  do
    #Get IPs belongs to valn interface
      /sbin/ip addr show $line | grep inet | cut -d"/" -f1 >$TEMP
    while read line1
    do
      var=`echo $line1 | cut -d" " -f2`
      echo "$var" >>$Actual_vlan
    done<$TEMP
  done<$TEMP_VLAN
}

check_adminip_on_loadIF()
{
   LOAD=$1
   ADDRESS=$2
   LOGIN_TYPE=$3
   if [ $LOGIN_TYPE == L ];then
     TEMP_IP=`/sbin/ip addr show $LOAD | grep $ADDRESS`
   else
     TEMP_IP=`ssh $ADDRESS /sbin/ip addr show $LOAD | grep $ADDRESS`
   fi
   if [ "XX$TEMP_IP" != XX ];then
     echo $ADDRESS >>$Configured_eth
   fi
}

ENTITY=C

if [ "$1XX" == "RXX" ];then
  ENTITY=S
  SRLoadIF=$2
  NS_Address=$3
fi

if [ $ENTITY == S ];then
  #Main interface's IPs with inet into the file for Netocean
  /sbin/ip addr show $SRLoadIF |  grep inet | cut -d"/" -f1 >$TEMP
  #Send IPs into the file for netocean
  Put_ip_Actual_eth
  #Put name of all Vlan directory into file of Netocean
  if [ -d /proc/net/vlan ];then
    ls /proc/net/vlan | grep -v config >$TEMP_VLAN
    #Call Put_ip_interface_vlan for netocean
    Put_ip_interface_vlan R
  fi
  #copy file from server to client
  scp -r /tmp/ip/Actual $NS_Address:$TEMP_SERVER
  rm_file
  exit 0
else
  #Get Netstorm Load IP
  NSLoadIF=`cat $HOME_DIR/etc/cav.conf | grep "NSLoadIF" | cut -d" " -f2`
  NS_Address=`cat $HOME_DIR/etc/cav.conf | grep "NSAdminIP" | cut -d" " -f2 | cut -d/ -f1`
  #Get Netocean Load IP
  SRLoadIF=`cat $HOME_DIR/etc/cav.conf | grep "SRLoadIF" | cut -d" " -f2`
  #Get Netocean IP Address
  SR_Address=`cat $HOME_DIR/etc/cav.conf | grep "SRAdminIP" | cut -d" " -f2 | cut -d/ -f1`

  #For Netstorm
  #Main interface's IPs with inet into the file for Netstorm 
  /sbin/ip addr show $NSLoadIF | grep inet | cut -d"/" -f1 >$TEMP
  #Send IPs into the file
  Put_ip_Actual_eth
  #Put name of all Vlan directory into file
  if [ -d /proc/net/vlan ];then
    ls /proc/net/vlan | grep -v config >$TEMP_VLAN
    #Call Put_ip_interface_vlan
    Put_ip_interface_vlan L
  fi

  #For Netocean
  ssh $SR_Address $NS_WDIR/bin/nsi_check_ip R $SRLoadIF $NS_Address
  
  if [ -f $TEMP_SERVER/Actual/interface.vlan ];then
    while read line
    do
      echo "$line" >>$Actual_vlan
    done<$TEMP_SERVER/Actual/interface.vlan
  fi
  if [ $TEMP_SERVER/Actual/eth0 ];then
    while read line
    do
      echo "$line" >>$Actual_eth
    done<$TEMP_SERVER/Actual/eth0
  fi

  #Reading from IP entries file
  while read line
  do
    #Extracting starting IP, End IP, vlan and Exclude IP
    START_IP=`echo $line | cut -d "|" -f4`
    END_IP=`echo $line | cut -d "|" -f5`
    VLAN=`echo $line | cut -d "|" -f7`
    EXCLUDE_IP=`echo $line | cut -d "|" -f9`
    for x in `$NS_WDIR/bin/nsu_seq_ip $START_IP $END_IP`
    do
      if [ "$x" != $EXCLUDE_IP ];then
        if [ "$VLAN" == "-" ];then
          echo "$x" >>$Configured_eth
        else
          echo "$x" >>$Configured_vlan
        fi
      fi
    done
  done<$IP_ENTRIES
  #Check admin IP on Load interface if it is than include it.
  check_adminip_on_loadIF $NSLoadIF $NS_Address L
  check_adminip_on_loadIF $SRLoadIF $SR_Address R

  eth_success=0
  vlan_success=0

  #Check for Actual_eth and Configured_eth files
  if [ \( -f $Actual_eth \) -a \( -f $Configured_eth \) ];then
    #Sort actual eth files
    sort -k 4 -k 3 -k 2 -k 1 -g $Actual_eth >$Actual_eth_sort
    #Sort configured eth files
    sort -k 4 -k 3 -k 2 -k 1 -g $Configured_eth >$Configured_eth_sort
    #Difference Actual and Configured eth file 
    diff $Actual_eth_sort $Configured_eth_sort >/dev/null
    if [ "$?" == 0 ];then
      eth_success=1  
    else
      eth_success=-1 
    fi
  elif [ \( -f $Actual_eth -a ! -f $Configured_eth \) -o \( ! -f $Actual_eth -a  \( -f $Configured_eth \) \) ];then
    rm_file
    exit 1
  fi

  #Check for Actual_vlan and Configured_vlan files
  if [ \( -f $Actual_vlan \) -a \( -f $Configured_vlan \) ];then
    #Sort actual vlan files
    sort -k 4 -k 3 -k 2 -k 1 -g $Actual_vlan >$Actual_vlan_sort
    #Sort configured vlan files
    sort -k 4 -k 3 -k 2 -k 1 -g $Configured_vlan >$Configured_vlan_sort
    #Difference Actual and Configured vlan file
    diff $Actual_vlan_sort $Configured_vlan_sort >/dev/null
    if [ "$?" == 0 ];then
      vlan_success=1
    else
      vlan_success=-1
    fi
  elif [ \( -f $Actual_vlan -a \( ! -f $Configured_vlan \) \) -o \( ! -f $Actual_vlan -a \( -f $Configured_vlan \) \) ];then
    rm_file
    exit 1
  fi

  if [ $eth_success == -1 -o $vlan_success == -1 ];then
    rm_file
    exit 1
  elif [ $eth_success == 1 -o $vlan_success == 1 ];then
    rm_file
    exit 0
  else
    rm_file
    exit 1
  fi
fi

#!/bin/sh 
#Keyword|Order|Type|GroupBased|InGUI|key fields|Default Value|Comments

#This shell has been cleaned up and migration of keyword G_CONTINUE_ON_PAGE_ERROR is added for build version 415, To see examples of migration someone can take its 1.26 version from cvs

#before migration KEYWORD_DEFINITION_FILE should be coopied in $NS_WDIR/etc
KEYWORD_DEFINITION_FILE="$NS_WDIR/etc/KeywordDefinition.dat"
SCENARIO_FILE_LIST="/tmp/scenario.list.$$"
SITE_KEYWORD_FILE="$NS_WDIR/sys/site_keywords.default"

NS_VER_BLD_415=415
NS_VER_BLD_416=416
NS_VER_BLD_417=417
NS_VER_BLD_4111=4111
NS_VER_BLD_4112=4112
BUILD=43
BUILD_4_1_11_15=15
BUILD_4_1_11_19=19
BUILD_4_1_12_8=8

usage()
{
  echo "Usage:"
  echo "$0 -s <scenario file>|-a|-r <version>"
  echo " -s option is used to migrate only one particular scenario."
  echo " -a option is used to migrate all scenarios from the $NS_WDIR/$NS_TA_DIR/scenarios directory."
  echo "    Either -s or -a should be given. Both are not allowed."
  echo " -r option is used to migrate scenario based on netstorm version."
  echo "Examples:"
  echo "  nsi_migrate_scen -s test.conf -r 340 //If version is between 340-349,then Schedule based migration only."
  echo "  nsi_migrate_scen -s test.conf -r 330 //if version is less than 340,then Group and Schedule based migration."
  echo "  nsi_migrate_scen -s test.conf -r 350 //If version is equal to and greater than 350,then No migration."

  exit 1
}

ALL=0
# This flag is used in case of -s option is used, then migration of mprof files will not be done.
SCEN_FLAG=0

while getopts s:ar:b: c
do
  case $c in
    s) SCENARIO_FILE=$OPTARG 
       SCEN_FLAG=1 ;;
    a) ALL=1;;
    r) NS_VER_SYS=$OPTARG ;;
    b) NS_VER_BUILD=$OPTARG ;;  # Build version is needed for G_OVERRIDE_RECORDDED_THINK_TIME Keyword
    ?) usage ;;
  esac
done

if [ $ALL == 0 -a "XX$SCENARIO_FILE" == "XX" ];then
  usage
fi

WORK_PROFILE=`echo $SCENARIO_FILE | cut -d '/' '-f1-2'`
PROJ_SUBPROJ=`echo $SCENARIO_FILE | cut -d '/' '-f3-4'`
SCENARIO_NAME=`basename $SCENARIO_FILE`
NS_TA_DIR="workspace/$WORK_PROFILE/cavisson/$PROJ_SUBPROJ"
     
if [ "X$NS_VER_SYS" == "X" ];then
  echo "Unable to get Build Version, Exiting"
  exit 1
fi 
#fi

if [ ! -f $KEYWORD_DEFINITION_FILE ];then
   echo "$KEYWORD_DEFINITION_FILE not found."
   exit 1
fi

if [ $ALL == 0 ];then
  if [ ! -f $SCENARIO_FILE ];then
    echo "$SCENARIO_FILE does not exist." 
    exit 1
  fi
  echo $SCENARIO_FILE >$SCENARIO_FILE_LIST
else
  #find $NS_WDIR/scenarios -name "*.conf" -type f -print >$SCENARIO_FILE_LIST 
  find $NS_WDIR/$NS_TA_DIR/scenarios -not -name ".*" -name "*.conf" >$SCENARIO_FILE_LIST
  if [ -f $SITE_KEYWORD_FILE ];then
    echo $SITE_KEYWORD_FILE >>$SCENARIO_FILE_LIST
  fi
fi

 #G_CONTINUE_ON_PAGE_ERROR 
 #OLD               NEW
 #G_CONTINUE_ON_PAGE_ERROR <group> 0 --->G_CONTINUE_ON_PAGE_ERROR <group> <page> 0
 
migrate_continue_on_page_error_kw()
{
  MODE=`echo $SCENARIO_LINE | awk '{print $3}'`
  GROUP_NAME=`echo $SCENARIO_LINE | awk '{print $2}'`
  PAGE_NAME="ALL"
  if [ $MODE == "ALL" ];then
    return;
  fi
  echo $SCENARIO_LINE | eval sed -i -e 's/"$SCENARIO_KEYWORD $GROUP_NAME $MODE"/"$SCENARIO_KEYWORD $GROUP_NAME $PAGE_NAME $MODE"/g' $SCENARIO
}

migrate_rampdown_method_kw()
{
  NEW_SCENARIO_KEYWORD="G_RAMP_DOWN_METHOD"
  GROUP_NAME="ALL"
  MODE=`echo $SCENARIO_LINE | awk '{print $2}'`
  OPTION=`echo $SCENARIO_LINE | awk '{print $3}'`
  TIME=`echo $SCENARIO_LINE | awk '{print $4}'`
  if [ "XX$TIME" == "XX" ];then
    echo $SCENARIO_LINE | eval sed -i -e 's/"$SCENARIO_KEYWORD $MODE $OPTION"/"$NEW_SCENARIO_KEYWORD $GROUP_NAME $MODE $OPTION $TIME"/g' $SCENARIO
  else
    echo $SCENARIO_LINE | eval sed -i -e 's/"$SCENARIO_KEYWORD $MODE $OPTION $TIME"/"$NEW_SCENARIO_KEYWORD $GROUP_NAME $MODE $OPTION $TIME"/g' $SCENARIO
  fi

}

migrate_override_recorded_thinktime()
{
  GROUP_NAME=`echo $SCENARIO_LINE | awk '{print $2}'`
  PAGE_NAME="ALL"
  MODE=`echo $SCENARIO_LINE | awk '{print $3}'`
  OPTION1=`echo $SCENARIO_LINE | awk '{print $4}'`
  OPTION2=`echo $SCENARIO_LINE | awk '{print $5}'`
  if [ $MODE -eq 1 ];then
    echo $SCENARIO_LINE | eval sed -i -e 's/"$SCENARIO_KEYWORD $GROUP_NAME $MODE"/"$SCENARIO_KEYWORD $GROUP_NAME $PAGE_NAME $MODE"/g' $SCENARIO
  elif [ $MODE -eq 2 ];then
    echo $SCENARIO_LINE | eval sed -i -e 's/"$SCENARIO_KEYWORD $GROUP_NAME $MODE $OPTION1"/"$SCENARIO_KEYWORD $GROUP_NAME $PAGE_NAME $MODE $OPTION1"/g' $SCENARIO
  elif [ $MODE -eq 3 ];then
    echo $SCENARIO_LINE | eval sed -i -e 's/"$SCENARIO_KEYWORD $GROUP_NAME $MODE $OPTION1 $OPTION2"/"$SCENARIO_KEYWORD $GROUP_NAME $PAGE_NAME $MODE $OPTION1 $OPTION2"/g' $SCENARIO
  fi
}

get_fields_from_keyword_def()
{
  INDEX="$1"
  TEMP=""

  TEMP=`grep -w ^$SCENARIO_KEYWORD  $KEYWORD_DEFINITION_FILE | awk -F'|' -v i="$INDEX" '{if(NF >= 13) print $i}'`
  if [ "X$TEMP" == "X" ];then
      TEMP=`grep -w ^G_${SCENARIO_KEYWORD}  $KEYWORD_DEFINITION_FILE | awk -F'|' -v i="$INDEX" '{if(NF >= 13) print $i}'`
  fi
 
  echo $TEMP
}


migrate_415()
{
    if [ "X$SCENARIO_KEYWORD" == "XG_CONTINUE_ON_PAGE_ERROR" ];then
      migrate_continue_on_page_error_kw 
    fi
}

migrate_416()
{
  if [ "X$SCENARIO_KEYWORD" == "XRAMP_DOWN_METHOD" ];then
    migrate_rampdown_method_kw 
  fi
}


migrate_417()
{
  if [ "X$SCENARIO_KEYWORD" == "XG_OVERRIDE_RECORDED_THINK_TIME" ];then
    migrate_override_recorded_thinktime 
  fi
}


migrate_4111()
{      
  G_SERVER_HOST="G_SERVER_HOST ALL"
  G_USE_SRC_IP="G_USE_SRC_IP ALL"
  G_SRC_IP_LIST="G_SRC_IP_LIST ALL"
  G_USE_SAME_NETID_SRC="G_USE_SAME_NETID_SRC ALL"
  G_IP_VERSION_MODE="G_IP_VERSION_MODE ALL"

  if [ "$NS_VER_BUILD" -lt "$BUILD_4_1_11_15" ];then
    if [ "x$SCENARIO_KEYWORD" == "xSERVER_HOST" ] ;then
      sed -i "s/^SERVER_HOST/$G_SERVER_HOST/g" $SCENARIO
    fi
  fi

  if [ "$NS_VER_BUILD" -lt "$BUILD_4_1_11_19" ];then
    if [ "x$SCENARIO_KEYWORD" == "xUSE_SRC_IP" ];then
      sed -i "s/^USE_SRC_IP/$G_USE_SRC_IP/g" $SCENARIO
    fi
 
    if [ "x$SCENARIO_KEYWORD" == "xSRC_IP_LIST" ];then
      sed -i "s/^SRC_IP_LIST/$G_SRC_IP_LIST/g" $SCENARIO
    fi
 
    if [ "x$SCENARIO_KEYWORD" == "xUSE_SAME_NETID_SRC" ];then
      sed -i "s/^USE_SAME_NETID_SRC/$G_USE_SAME_NETID_SRC/g" $SCENARIO
    fi
 
    if [ "x$SCENARIO_KEYWORD" == "xIP_VERSION_MODE" ];then
      sed -i "s/^IP_VERSION_MODE/$G_IP_VERSION_MODE/g" $SCENARIO
    fi
  fi
}

# No need to check build version as migrating from lower release to upper
migrate_4111_to_4112()
{
  G_SSL_CERT_FILE_PATH="G_SSL_CERT_FILE_PATH ALL"
  G_SSL_KEY_FILE_PATH="G_SSL_KEY_FILE_PATH ALL"
  G_TLS_VERSION="G_TLS_VERSION ALL"
  G_SSL_RENEGOTIATION="G_SSL_RENEGOTIATION ALL"
  CHECK_CONTINUOUS_MON_HEALTH="CHECK_CONTINUOUS_MON_HEALTH"

  #scenario build version less then 4.1.12.8, will be migrated
  if [ "x$SCENARIO_KEYWORD" == "xSSL_CERT_FILE_PATH" ];then
    sed -i "s/^SSL_CERT_FILE_PATH/$G_SSL_CERT_FILE_PATH/g" $SCENARIO
  fi
  if [ "x$SCENARIO_KEYWORD" == "xSSL_KEY_FILE_PATH" ];then
    sed -i "s/^SSL_KEY_FILE_PATH/$G_SSL_KEY_FILE_PATH/g" $SCENARIO
  fi
  if [ "x$SCENARIO_KEYWORD" == "xTLS_VERSION" ];then
    sed -i "s/^TLS_VERSION/$G_TLS_VERSION/g" $SCENARIO
  fi
  if [ "x$SCENARIO_KEYWORD" == "xSSL_RENEGOTIATION" ];then
    sed -i "s/^SSL_RENEGOTIATION/$G_SSL_RENEGOTIATION/g" $SCENARIO
  fi
  if [ "x$SCENARIO_KEYWORD" == "xCONTINOUS_MON_CHECK_DEMON" ];then
    sed -i "s/^CONTINOUS_MON_CHECK_DEMON/$CHECK_CONTINUOUS_MON_HEALTH/g" $SCENARIO
  fi
}

# Need to check build version as migrating from lower version to upper of same release
migrate_4112()
{
  G_SSL_CERT_FILE_PATH="G_SSL_CERT_FILE_PATH ALL"
  G_SSL_KEY_FILE_PATH="G_SSL_KEY_FILE_PATH ALL"
  G_TLS_VERSION="G_TLS_VERSION ALL"
  G_SSL_RENEGOTIATION="G_SSL_RENEGOTIATION ALL"

  #scenario build version less then 4.1.12.8, will be migrated
  if [ "$NS_VER_BUILD" -lt "$BUILD_4_1_12_8" ];then
    if [ "x$SCENARIO_KEYWORD" == "xSSL_CERT_FILE_PATH" ];then
      sed -i "s/^SSL_CERT_FILE_PATH/$G_SSL_CERT_FILE_PATH/g" $SCENARIO
    fi
    if [ "x$SCENARIO_KEYWORD" == "xSSL_KEY_FILE_PATH" ];then
      sed -i "s/^SSL_KEY_FILE_PATH/$G_SSL_KEY_FILE_PATH/g" $SCENARIO
    fi
    if [ "x$SCENARIO_KEYWORD" == "xTLS_VERSION" ];then
      sed -i "s/^TLS_VERSION/$G_TLS_VERSION/g" $SCENARIO
    fi
    if [ "x$SCENARIO_KEYWORD" == "xSSL_RENEGOTIATION" ];then
      sed -i "s/^SSL_RENEGOTIATION/$G_SSL_RENEGOTIATION/g" $SCENARIO
    fi
  fi
}

change_scenario_file()
{
  OLD_VERSION_FLAG=0
  while read SCENARIO
  do
    if [ "$NS_VER_SYS" -lt "$NS_VER_BLD_416" ];then
      PREV_SCENARIO=`dirname ${SCENARIO}`"/."`basename ${SCENARIO}".pre4.1.6"`
      OLD_VERSION_FLAG=1 
    elif [ "$NS_VER_SYS" -lt "$NS_VER_BLD_417" ];then
      PREV_SCENARIO=`dirname ${SCENARIO}`"/."`basename ${SCENARIO}".pre4.1.7"`
      OLD_VERSION_FLAG=1
    elif [ "$NS_VER_SYS" -le "$NS_VER_BLD_4111" ];then
      PREV_SCENARIO=`dirname ${SCENARIO}`"/."`basename ${SCENARIO}".pre4.1.11"`
      OLD_VERSION_FLAG=1
    elif [ "$NS_VER_SYS" -le "$NS_VER_BLD_4112" ];then
      PREV_SCENARIO=`dirname ${SCENARIO}`"/."`basename ${SCENARIO}".pre4.1.12"`
      OLD_VERSION_FLAG=1
    fi
    if [ $OLD_VERSION_FLAG == 1 ];then
      cp $SCENARIO $PREV_SCENARIO 
      >$SCENARIO
 
      #read scenario name from scenario list
      while read SCENARIO_LINE
      do
        echo $SCENARIO_LINE >>$SCENARIO
        SCENARIO_KEYWORD=`echo $SCENARIO_LINE | awk '{print $1}'` 
        if [ "$NS_VER_SYS" -lt "$NS_VER_BLD_415" ];then
          migrate_415
        fi
       
        if [ "$NS_VER_SYS" -lt "$NS_VER_BLD_416" ];then
          migrate_416
        fi
 
        if [ "$NS_VER_SYS" -lt "$NS_VER_BLD_417" ];then
          migrate_417
        # Check if build version is less than 4.1.7 build 43, then migrating the G_OVERRIDE_RECORDDED_THINK_TIME
        elif [ "$NS_VER_SYS" -eq "$NS_VER_BLD_417"  -a "$NS_VER_BUILD" -lt "$BUILD" ];then
          migrate_417
        fi
        #SERVER_HOST, Check if build_version is equals to 4.1.11#14 and less than BUILD_4_1_11, change it to G_SERVER_HOST
        if [ "$NS_VER_SYS" -le "$NS_VER_BLD_4111" ];then
          migrate_4111
        fi
        if [ "$NS_VER_SYS" -lt "$NS_VER_BLD_4112" ];then
          migrate_4111_to_4112
        fi
        if [ "$NS_VER_SYS" -eq "$NS_VER_BLD_4112" ]; then
          migrate_4112
        fi
        done < $PREV_SCENARIO
    fi
  done <$SCENARIO_FILE_LIST
}

change_scenario_file

rm -f $SCENARIO_FILE_LIST

exit 0

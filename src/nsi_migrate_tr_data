#!/bin/bash
#######################################################################################################
# Name   :nsi_migrate_tr_data 
# Syntax : nsi_migrate_tr_data --testrun <value>
#
#   Author : Ankit Agarwal
#   Date :   28 June 2012
#   Purpose :This shell will add the additional fields in the csv files for the perticular testrun  
# Example : nsi_migrate_tr_data --testrun 11642  
#
#
#########################################################################################################


######################################################################
#                     Variables and init settings
#####################################################################

# Including nsi_db_utils
. $NS_WDIR/bin/nsi_db_utils

TRNUM=""
ACT_FIELD=0

########################################################################
#                       Functions's Definitions
#######################################################################

#Function for displaying usage
usage()
{
  echo "$*"
  echo "Usage:"
  echo "$0 --testrun <value> "
  echo ""
  echo "Where"
  echo "  --testrun is test run number, which is mandatory argument."
  exit 1
}

#Function for checking mandatory arguments
check_arg()
{
   if [ "X$TRNUM" == "X" ]; then
    usage "Test run argument is missing"
   fi
}

set_file_path()
{
  FILE_PATH_URC_CSV=$TRDIR/reports/csv/urc.csv
  FILE_PATH_PRC_CSV=$TRDIR/reports/csv/prc.csv
  FILE_PATH_TRC_CSV=$TRDIR/reports/csv/trc.csv
  FILE_PATH_SRC_CSV=$TRDIR/reports/csv/src.csv
  FILE_PATH_URT_CSV=$TRDIR/reports/csv/urt.csv
  FILE_PATH_TPRC_CSV=$TRDIR/reports/csv/tprc.csv
  FILE_PATH_RPF_CSV=$TRDIR/reports/csv/rpf.csv
  ND_FILE_PATH_CSV=$TRDIR/nd/csv
}


migrate_rpf_csv()
{
  NOF_RPF_CSV_FIELDS=5
  #Parsing rpf.csv
  if [ -s $FILE_PATH_RPF_CSV ];then
   ACT_FIELD=`head -1 $FILE_PATH_RPF_CSV | awk -F ',' '{ print NF }'`
   if [ $ACT_FIELD -eq $NOF_RPF_CSV_FIELDS ];then
      sed -i 's/$/,/g' $FILE_PATH_RPF_CSV
   fi
  fi
}
   
########################################################################
#                            calling functions
########################################################################

#Parsing the arguments
init $*

#Checking mendatory arguments
check_arg

#Setting file paths
set_file_path

echo "nsi_migrate_tr_data : TR migration starting....."
START=`date +%s`


  #Checking if old csv format file is present (We check this as old csv file were formed in $NS_WDIR/logs/TRxxxx/ but new csv files are formed in 
  # $NS_WDIR/logs/TRxxxx/reports/csv/) and if present at old path then first move all files to $NS_WDIR/logs/TRxxxx/reports/csv/ and then append 
  # the last column of each line with "-1" of csv (urc.csv, src.csv, trc.csv, tprc.csv, prc.csv) which is the default value for the new 
  # Generator ID field.
  ls -l $TRDIR/*.csv  > /dev/null 2>&1
  if [ $? -eq 0 ];then
    mkdir -p -m 777 $TRDIR/reports/csv/
    mv $TRDIR/*.csv $TRDIR/reports/csv/
    if [ -s $FILE_PATH_URC_CSV ];then
      sed -i 's/$/,-1/g' $FILE_PATH_URC_CSV
    fi
  
    if [ -s $FILE_PATH_PRC_CSV ];then
      sed -i 's/$/,-1/g' $FILE_PATH_PRC_CSV
    fi
  
    if [ -s $FILE_PATH_TRC_CSV ];then
      sed -i 's/$/,-1/g' $FILE_PATH_TRC_CSV
     fi
  
    if [ -s $FILE_PATH_SRC_CSV ];then
      sed -i 's/$/,-1/g' $FILE_PATH_SRC_CSV
     fi
  
    if [ -s $FILE_PATH_TPRC_CSV ];then
      sed -i 's/$/,-1/g' $FILE_PATH_TPRC_CSV
    fi
  
    if [ ! -f $TRDIR/reports/csv/generator_table.csv ];then
      touch $TRDIR/reports/csv/generator_table.csv
    fi
  
    #Inseting 3rd , 4th and 5th column in urt.csv for HashID , HashCode and Len  
    if [ -s $FILE_PATH_URT_CSV ];then
       sed -i 's/\(.*,.*\),\(.*,.*\)/\1,0,0,-1,\2/g' $FILE_PATH_URT_CSV 
    fi
  
    if [ -d $ND_FILE_PATH_CSV ];then
      sed -i 's/$/,-1/g' `ls $ND_FILE_PATH_CSV/*/NDURLRecord.csv`
       sed -i 's/\(.*,.*\),\(.*,.*\)/\1,0,0,-1,\2/g' `ls $ND_FILE_PATH_CSV/*/NDURLTable.csv`
    fi
  fi
 
  #Parsing src.csv
  if [ -s $FILE_PATH_SRC_CSV ];then
    ACT_FIELD=`head -1 $FILE_PATH_SRC_CSV | awk -F ',' '{ print NF }'` 
    if [ $ACT_FIELD -lt $NOF_SRC_CSV ];then
      awk -F',' 'BEGIN {OFS=","}{sub(/[0-9]+/,"NA",$10);print($0)","($14-$13)","(-1)}' $FILE_PATH_SRC_CSV >tmp1
      mv tmp1 $FILE_PATH_SRC_CSV
    else 
      head -1 $FILE_PATH_SRC_CSV |awk -F ',' '{print ($10)}'| egrep ^[0-9]+$ >/dev/null
      if [ $? -eq 0 ];then
        awk -F',' 'BEGIN {OFS=","}{sub(/[0-9]+/,"NA",$10);print($0)}' $FILE_PATH_SRC_CSV >tmp1
        mv tmp1 $FILE_PATH_SRC_CSV
      fi 
    fi 
  
    #Creating Blank ect.csv
    if [ ! -f $TRDIR/reports/csv/ect.csv ];then
      touch $TRDIR/reports/csv/ect.csv
    fi
  
    #Creating Blank log_phase_table.csv
    if [ ! -f $TRDIR/reports/csv/log_phase_table.csv ] ;then
      touch $TRDIR/reports/csv/log_phase_table.csv
    fi
  fi
  
  #Parsing trc.csv
  if [ -s $FILE_PATH_TRC_CSV ];then
   ACT_FIELD=`head -1 $FILE_PATH_TRC_CSV | awk -F ',' '{ print NF }'`
   if [ $ACT_FIELD -lt $NOF_TRC_CSV ];then
      NOF_TRC_CSV=11
      if [ $ACT_FIELD = $NOF_TRC_CSV ];then
        awk -F',' '{print $0","(-1)}' $FILE_PATH_TRC_CSV >tmp1
      else
       awk -F',' '{print $0","($8-$7)","(-1)}' $FILE_PATH_TRC_CSV >tmp1
      fi
     mv tmp1 $FILE_PATH_TRC_CSV
   fi
  fi
   
  #Parsing prc.csv
  if [ -s $FILE_PATH_PRC_CSV ];then
   ACT_FIELD=`head -1 $FILE_PATH_PRC_CSV | awk -F ',' '{ print NF }'`
   if [ $ACT_FIELD -lt $NOF_PRC_CSV ];then
     NOF_PRC_CSV=12
     if [ $ACT_FIELD = $NOF_PRC_CSV ];then
       awk -F',' '{print $0","(-1)}' $FILE_PATH_PRC_CSV >tmp1 
     else
       awk -F',' '{print $0","($10-$9)","(-1)}' $FILE_PATH_PRC_CSV >tmp1
     fi
     mv tmp1 $FILE_PATH_PRC_CSV
   fi
  fi
   
  #Parsing urc.csv
  if [ -s $FILE_PATH_URC_CSV ];then
   ACT_FIELD=`head -1 $FILE_PATH_URC_CSV | awk -F ',' '{ print NF }'`
   if [ $ACT_FIELD -lt $NOF_URC_CSV ];then
     NOF_URC_CSV=38
     if [ $ACT_FIELD = $NOF_URC_CSV ];then
       awk -F',' '{print $0","(-1)}' $FILE_PATH_URC_CSV >tmp1
     else
       awk -F',' '{ print $0","($24-$14)","(-1)}' $FILE_PATH_URC_CSV >tmp1
     fi
     mv tmp1 $FILE_PATH_URC_CSV
   fi
  fi
  
  #Adding 17th field as status code in NDFlowPath.csv
  if [ -s $ND_FILE_PATH_CSV ]; then
    INSTANCE_ARRAY=( $(ls -Ftr $ND_FILE_PATH_CSV | grep '/' | cut -d '/' -f 1) )
    for INSTANCE in ${INSTANCE_ARRAY[@]}
    do
      ACT_FIELD=`head -1 $ND_FILE_PATH_CSV/$INSTANCE/NDFlowPath.csv | awk -F ',' '{ print NF }'`
      if [ "X$ACT_FIELD" != "X" ]; then
        if [ $ACT_FIELD -lt $NOF_ND_FP_CSV ]; then
          sed -i 's/$/,0/g' $ND_FILE_PATH_CSV/$INSTANCE/NDFlowPath.csv
        fi
      fi
    done
  fi
  
  #Removing tcf.csv
  if [ -f $TRDIR/reports/csv/tcf.csv ];then
    rm $TRDIR/reports/csv/tcf.csv
  fi
 
migrate_rpf_csv
 
END=`date +%s`
DIFF=`expr $END - $START`
echo "nsi_migrate_tr_data : TR migration took $DIFF seconds"

exit 0

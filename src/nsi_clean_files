#!/bin/sh
# Name: nsi_clean_files
# Author: Neeraj Jain
# Purpsose: To clean old files in the instance directories and temp folder files in webapps/netstorm.
#
# Usage:  nsi_clean_files 
#
# Modification History:
#   10/13/05: Neeraj - Initial Version
#

CONTROLLER_CONF_FILE=/home/cavisson/etc/cav_controller.conf

if [ "XX" = "XX$NS_WDIR" ]
then
  export NS_WDIR=/home/cavisson/work
fi

debug_log()
{
  echo "`date +"%F %X"`|$*" >> $DEBUG_LOG
}

if [ ! -f $NS_WDIR/bin/nsu_show_netstorm ];then
  debug_log "$NS_WDIR/bin/nsu_show_netstorm not found. Build May not be upgraded properly." 
  exit 1
fi

#Bug 78888: clear instance if following occurs
#step 1: pid is not running 
#step 2: pid is running but not with netstorm or netstorm.debug
#step 3: pid is running with netstorm but not matching TR parent pid
#step 4: pid is running with netstorm, matching TR ppid but not found/matching instance
check_pid_running()
{
  pid=$1
  inst_dir=$2
  COMM=`cat /proc/$pid/comm 2>/dev/null`
  TrNum=`sed -n '1p' $inst_dir/keys`
  #step 1: pid is not running 
  #step 2: pid is running but not with netstorm or netstorm.debug
  if [[ ! -d /proc/$pid ]] || [[ "X$COMM" != "Xnetstorm" ]] && [[ "X$COMM" != "Xnetstorm.debug" ]];then
    echo 0
  else
    #check whether running from QATools
    if [ "X`echo ${inst_dir##*/}|cut -c1-16`" = "Xns_inst_sim_tool" ];then
      debug_log "Netstorm instance $inst_dir found running"
      echo 1
      return
    fi

    if [ -f $NS_WDIR/logs/TR$TrNum/get_all_process_pid ];then
      PIDFILE=`grep -w "netstorm parent's pid" $NS_WDIR/logs/TR$TrNum/get_all_process_pid 2>/dev/null|tail -1`
    else
      echo 0
      return
    fi

    TRPID=${PIDFILE##* }
    #step 3: pid is running with netstorm but not matching TR parent pid
    if [ "X$pid" != "X$TRPID" ];then
      echo 0
    else
      INST=`cat $NS_WDIR/logs/TR$TrNum/.curInstance 2>/dev/null`
      #step 4: pid is running with netstorm, matching TR ppid but not found/matching instance
      if [ "X$INST" != "X${inst_dir##*/}" ];then
        echo 0
      else
        debug_log "Netstorm instance $inst_dir found running"
        echo 1
      fi
    fi
  fi
}

clean_ns_instances()
{
  # Get list of running TRs if any
  listInsts=`ls -td $NS_WDIR/.tmp/ns_inst*`
  debug_log "Following instance dirs are present.... $listInsts" 
  tokens=($listInsts)
  controller=${NS_WDIR##*/}

  # Find instance dir of all running TR
  for(( i = 0; i < ${#tokens[@]}; i++ ))
  do
    DIR_NAME=${tokens[$i]}
    PID=${DIR_NAME##*_}
    [ "X`check_pid_running $PID $DIR_NAME`" = "X1" ] && continue
    debug_log "Netstorm instance $DIR_NAME found not running. Removing instance"
    #clean directory
    Trun=`sed -n '1p' $DIR_NAME/keys 2>/dev/null`
    rm -rf `readlink $DIR_NAME` $DIR_NAME /mnt/tmp/$controller/logs/TR$Trun 2>/dev/null
  done
}

clean_webapps_temp()
{
  debug_log "Running Command : find $NS_WDIR/webapps/netstorm/temp -type f -mtime +7 -exec rm -f {} \;"
  find $NS_WDIR/webapps/netstorm/temp -type f -mtime +7 -exec rm -f {} \;
}

clean_pg_bulkload_tmp()
{
  if [ -d /var/lib/pgsql/data/pg_bulkload ];then
    debug_log "Running Command : find /var/lib/pgsql/data/pg_bulkload -type f -mtime +7 -exec rm -f {} \;"
    find /var/lib/pgsql/data/pg_bulkload -type f -mtime +7 -exec rm -f {} \;
  fi
}

clean_mounted_tmpfs_files()
{
  if [ -d /mnt/tmp ];then
    debug_log "Running Command : find /mnt/tmp ${EXCEPTION_INST_IN_TMPFS} -type f -mtime +7 -exec rm -f {} \;"
    find /mnt/tmp ${EXCEPTION_INST_IN_TMPFS} -type f -mtime +7 -exec rm -f {} \;
  fi
  #cleaning build_upgrade directory only once
  if [ -d /home/cavisson/work/webapps/netstorm/temp/build_upgrade ];then
    debug_log "Removing build_upgrade directory..."
    rm -rf /home/cavisson/work/webapps/netstorm/temp/build_upgrade 2>/dev/null
  fi
}

run_retention_manager()
{
  if [ -f "$NS_WDIR/sys/data_retention/config.json" ];then

    #Bug #112390: Earlier retention manger was running with root. 
    #             now retention manager run with cavisson user, but log file are creatd from root
    #             So Chnage the owner to cavisson.
    #             we will remove this code in next release. 

    chown -R cavisson:cavisson $NS_WDIR/logs/data_retention 
    chown cavisson:cavisson $NS_WDIR/.recyclebin

    debug_log "Invoking process : cav_data_ret_manager"
    su cavisson -c "$NS_WDIR/bin/cav_data_ret_manager"
  fi
}

drsync()
{
  IS_SYNC=`grep "^NSDR_CONFIG.*=" $NS_WDIR/webapps/sys/dashboardConfig.properties |awk -F' ' '{print $8}'` 
  debug_log "DRSYNC, synchonize controller $NS_WDIR, IS_SYNC = $IS_SYNC"
  if [ "XX$IS_SYNC" == "XX1" ];then 
    su cavisson -c "$NS_WDIR/tools/nsu_drsync -q"
  fi
}

clean_hpd_access_log()
{
  if [ -d $NS_WDIR/hpd/logs/access_log ]; then
    debug_log "Running Command : find $NS_WDIR/hpd/logs/access_log -type f -mtime +7 -exec rm -f {} \;"
    find $NS_WDIR/hpd/logs/access_log -type f -mtime +7 -exec rm -f {} \;
  fi
}

controller_list=`cat $CONTROLLER_CONF_FILE`
for line in $controller_list
do
  export NS_WDIR=`echo $line|cut -d'|' -f3`
  [ "XX$NS_WDIR" = "XXNS_WDIR" ] && continue
  export DEBUG_LOG="$NS_WDIR/webapps/netstorm/temp/auto_cleanup_`date +%m%d%y`.log"
  clean_ns_instances
  clean_webapps_temp
  run_retention_manager
  $NS_WDIR/bin/neu_db_clean_nonprep_sql_metadata
  $NS_WDIR/bin/neu_clean_nd_rawdata
  su cavisson -c "ndu_aggregate_percentiles -d1"
  drsync
  clean_hpd_access_log
done

#machine specific should run once
export DEBUG_LOG="/home/cavisson/work/webapps/netstorm/temp/auto_cleanup_`date +%m%d%y`.log"
clean_pg_bulkload_tmp
#Bug 79789: Cleaning tmpfs files(instances files) controller wise. So commenting below line
#clean_mounted_tmpfs_files

exit 0

#! /bin/sh

BASE_DIR=""

Usage()
{
  echo $*
  echo "Usage: neu_ns_create_check_constraint <Test Run Number> <Partition Name> <Start Time> <End Time>"
  echo "Example:"
  echo "  neu_ns_create_check_constraint 1234 201402201000 1392877529000 1392877829000"
  exit -1
}

CSV_NAME=""
count=0
chk_args()
{
  if [ "X$TR_NUM" == "X" ]; then
    Usage "TR is missing"
  fi

  if [ "X$PARTITION_NAME" == "X" ]; then
    Usage "Partition Name is missing"
  fi

  #Checking if test number is numeric
  echo $TR_NUM | egrep '^[0-9]+$' >/dev/null 2>&1
  if [ "$?" -eq "1" ]; then
    Usage "Test run number is not numeric"
  fi

  #Checking Test number is valid or not
  if [ -d $PWD/TR$TR_NUM ]; then
    BASE_DIR=$PWD
  elif [ -d $NS_WDIR/logs/TR$TR_NUM ]; then
    BASE_DIR=$NS_WDIR/logs
  else
    echo "Error: Test run number $TR_NUM is not a valid test run number"
    exit -1
  fi

  if [ "X$START_TIME" == "X" -a "X$END_TIME" == "X" ]; then
    Usage "Give either Start time/End time so as to apply the check constraint."
  fi
 
  if [ "X$START_TIME" != "X" ];then
    echo $START_TIME | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" -eq "1" ]; then
      Usage "Start Time is not numeric"
    fi
  fi

  if [ "X$END_TIME" != "X" ];then
    echo $END_TIME | egrep '^[0-9]+$' >/dev/null 2>&1
    if [ "$?" -eq "1" ]; then
      Usage "End Time is not numeric"
    fi
  fi
}

chk_args_of_option()
{
  if [ "X$2" == "X" ];then
    echo "Option $1 required a value."
    Usage
    exit -1
  fi
}

while [ "$1" != "" ];do
  case $1 in
    "-TR")
        shift
      chk_args_of_option "-TR" "$1"
        TR_NUM=$1;;
    "-PT")
        shift
      chk_args_of_option "-PT" "$1"
        PARTITION_NAME=$1;;
    "-ST")
        shift
      chk_args_of_option "-ST" "$1"
        START_TIME=$1;;
    "-ET")
        shift
      chk_args_of_option "-ET" "$1"
        END_TIME=$1;;
    "-CN")
        shift
      chk_args_of_option "-CN" "$1"
        CSV_NAME=$1;;
    -*) Usage "Invalid option $1";;
    *) Usage;;
  esac
  shift
done

chk_args

if [ "X$END_TIME" != "X" -a "X$START_TIME" == "X" ];then
  PARTITION_START_TIME_STAMP=$PARTITION_NAME"_check_endtime"
elif [ "X$START_TIME" != "X" -a "X$END_TIME" == "X" ];then
  PARTITION_START_TIME_STAMP=$PARTITION_NAME"_check_starttime"
else
  PARTITION_START_TIME_STAMP=$PARTITION_NAME"_check"
fi

PARTITION_TABLE_NAME=$TR_NUM"_"$PARTITION_NAME

SESSION_RECORD_CONSTRAINT="SessionRecord_"$TR_NUM"_"$PARTITION_START_TIME_STAMP
TRANS_RECORD_CONSTRAINT="TransactionRecord_"$TR_NUM"_"$PARTITION_START_TIME_STAMP
TRANS_PAGE_CONSTRAINT="TransPageRecord_"$TR_NUM"_"$PARTITION_START_TIME_STAMP
PAGE_RECORD_CONSTRAINT="PageRecord_"$TR_NUM"_"$PARTITION_START_TIME_STAMP
URLRECORD_CONSTRAINT="URLRecord_"$TR_NUM"_"$PARTITION_START_TIME_STAMP
PAGEDUMPRECORD_CONSTRAINT="PageDumpRecord_"$TR_NUM"_"$PARTITION_START_TIME_STAMP
ORACLE_STATS_SNAP_TABLE_CONSTRAINT="orlStatsSnapTable_"$TR_NUM"_"$PARTITION_START_TIME_STAMP

if [ "X$START_TIME" != "X" -a "X$END_TIME" != "X" ];then
  CHECK="CHECK ( starttime >= $START_TIME AND starttime <= $END_TIME AND endtime >= $START_TIME AND endtime <= $END_TIME );"
elif [ "X$START_TIME" != "X" ];then
  CHECK="CHECK ( starttime >= $START_TIME AND endtime >= $START_TIME );"
elif [ "X$END_TIME" != "X" ];then
  CHECK="CHECK ( starttime <= $END_TIME AND endtime <= $END_TIME );"
fi

echo 
if [ "X$CSV_NAME" == "X" -o "X$CSV_NAME" == "Xall" -o "X$CSV_NAME" == "XALL" ];then
  #Case to add constraints for all partition tables.
  if [ "X$END_TIME" != "X" -a "X$START_TIME" == "X" ];then
  #Case where only end time constraint is given so applying end time constraints on all partition tables.
  echo "Running Command : neu_ns_create_check_constraint -TR $TR_NUM -PT $PARTITION_NAME -ET $END_TIME"
  psql test cavisson <<+
    alter table SessionRecord_$PARTITION_TABLE_NAME add constraint $SESSION_RECORD_CONSTRAINT 
      $CHECK

    alter table TransactionRecord_$PARTITION_TABLE_NAME add constraint $TRANS_RECORD_CONSTRAINT 
      $CHECK

    alter table TransPageRecord_$PARTITION_TABLE_NAME add constraint $TRANS_PAGE_CONSTRAINT 
      $CHECK

    alter table PageRecord_$PARTITION_TABLE_NAME add constraint $PAGE_RECORD_CONSTRAINT 
      $CHECK

    alter table URLRecord_$PARTITION_TABLE_NAME add constraint $URLRECORD_CONSTRAINT 
      $CHECK

    alter table PageDumpRecord_$PARTITION_TABLE_NAME add constraint $PAGEDUMPRECORD_CONSTRAINT 
      $CHECK

    alter table orlStatsSnapTable_$PARTITION_TABLE_NAME add constraint $ORACLE_STATS_SNAP_TABLE_CONSTRAINT 
      $CHECK

+
  elif [ "X$START_TIME" != "X" -a "X$END_TIME" == "X" ];then
  #Case where only start time is given so need to apply start time constraints for all partition tables.
  echo "Running Command : neu_ns_create_check_constraint -TR $TR_NUM -PT $PARTITION_NAME -ST $START_TIME"
  psql test cavisson <<+
    alter table SessionRecord_$PARTITION_TABLE_NAME add constraint $SESSION_RECORD_CONSTRAINT 
      $CHECK

    alter table TransactionRecord_$PARTITION_TABLE_NAME add constraint $TRANS_RECORD_CONSTRAINT 
      $CHECK

    alter table TransPageRecord_$PARTITION_TABLE_NAME add constraint $TRANS_PAGE_CONSTRAINT 
      $CHECK

    alter table PageRecord_$PARTITION_TABLE_NAME add constraint $PAGE_RECORD_CONSTRAINT 
      $CHECK

    alter table URLRecord_$PARTITION_TABLE_NAME add constraint $URLRECORD_CONSTRAINT
      $CHECK

    alter table PageDumpRecord_$PARTITION_TABLE_NAME add constraint $PAGEDUMPRECORD_CONSTRAINT 
      $CHECK

    alter table orlStatsSnapTable_$PARTITION_TABLE_NAME add constraint $ORACLE_STATS_SNAP_TABLE_CONSTRAINT 
      $CHECK
+
  else
  #Case where both start and end time is given so need to apply both start and end time constraints for all partition tables.
  echo "Running Command : neu_ns_create_check_constraint -TR $TR_NUM -PT $PARTITION_NAME -ST $START_TIME -ET $END_TIME"
  psql test cavisson <<+
    alter table SessionRecord_$PARTITION_TABLE_NAME add constraint $SESSION_RECORD_CONSTRAINT $CHECK

    alter table TransactionRecord_$PARTITION_TABLE_NAME add constraint $TRANS_RECORD_CONSTRAINT $CHECK

    alter table TransPageRecord_$PARTITION_TABLE_NAME add constraint $TRANS_PAGE_CONSTRAINT $CHECK

    alter table PageRecord_$PARTITION_TABLE_NAME add constraint $PAGE_RECORD_CONSTRAINT $CHECK

    alter table URLRecord_$PARTITION_TABLE_NAME add constraint $URLRECORD_CONSTRAINT  $CHECK

    alter table PageDumpRecord_$PARTITION_TABLE_NAME add constraint $PAGEDUMPRECORD_CONSTRAINT $CHECK

    alter table orlStatsSnapTable_$PARTITION_TABLE_NAME add constraint $ORACLE_STATS_SNAP_TABLE_CONSTRAINT $CHECK

+
  fi
else
  # Case to apply the particular check constraint based on the csv file name given.
  NS_PARTITION_ARRAY=("sessionrecord_" "transactionrecord_" "transpagerecord_" "pagerecord_" "urlrecord_" "pagedumprecord_" "orlStatsSnapTable_")
  NS_CSV_NAMES_ARRAY=("src.csv" "trc.csv" "tprc.csv" "prc.csv" "urc.csv" "page_dump.csv" "orlStatsSnapTable.csv")  

  while [ $count -le ${#NS_CSV_NAMES_ARRAY[@]} ] ; do
    if [ "X${NS_CSV_NAMES_ARRAY[$count]}" == "X$CSV_NAME" ] ; then
      NS_TABLE_CONSTRAINT="`echo ${NS_PARTITION_ARRAY[$count]}`"$TR_NUM"_"$PARTITION_START_TIME_STAMP
      NS_CONSTRAINT_TABLE_NAME="`echo ${NS_PARTITION_ARRAY[$count]}`""$PARTITION_TABLE_NAME"
      CHECK_CONSTRAINT=`psql --user=cavisson -d test -t -c "SELECT constraint_name from information_schema.table_constraints where constraint_name ~ '^$NS_TABLE_CONSTRAINT$' and table_name ~ '^$NS_CONSTRAINT_TABLE_NAME$'"`
      if [ "X$CHECK_CONSTRAINT" == "X" ];then
        psql test cavisson <<+
          alter table $NS_CONSTRAINT_TABLE_NAME add constraint $NS_TABLE_CONSTRAINT
            $CHECK
+
      fi
    fi
  count=`expr $count + 1`
  done
fi

echo "neu_ns_create_check_constraint: ... Done Adding check constraints on tables."

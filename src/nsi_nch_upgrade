#!/bin/sh
#-----------------------------------------------------------
#  Name: nsi_nch_upgrade
#  Purpose: install shell for installation of netchannel
#  Arguments: None
#-----------------------------------------------------------

# Basename is exported from nsi_upgrade shell
export WORK=$BASENAME

DISTRO=`nsi_get_linux_release_ex -d`
RELEASE=`nsi_get_linux_release_ex -r`

#Get Fedora os bit 32/64
#REDHAT_FC_BIT = $(shell tools/./nsi_get_linux_release_ex -b)
ARCH_BITS=`nsi_get_linux_release_ex -b`

#NS_RELEASE = ${REDHAT_FC_RELEASE}_${REDHAT_FC_BIT}
NS_RELEASE=${DISTRO}${RELEASE}_${ARCH_BITS}
export NS_RELEASE

#msgout_both "############################################################"
if [ "X$NCH_ROOT" = "X" ];then
  export NCH_ROOT=$NS_WDIR/netchannel
  export NCH_CMD=nch
fi

#Directory where NetChannel is installed
mkdir -p $NCH_ROOT
chmod 755 $NCH_ROOT

install_nch_core ()
{
  msgout_both "Installing NetChannel core components"

  if [ -f /etc/init.d/nch ];then
    if [ -f $NCH_ROOT/conf/netchannel.conf ]; then
      msgout_both "    Disabling all tunnels (if any)"
      /etc/init.d/nch stop >>$LOG_FILE_NAME 2>&1
    fi
  fi

  cd $NCH_ROOT

  msgout_both "Removing directories of old version."

  rm -rf bin etc

  msgout_both "Uncompressing tar file - $GZ" 

  cp $NS_WDIR/.rel/$GZ .
  tar xvzf $GZ >> $LOG_FILE_NAME
  rm $GZ

  if [ "$?" != 0 ];then
    msgout_both "Error: Error in uncompressing the $GZ"
    exit 1
  fi

  cp -r netchannel/* .
  rm -rf netchannel

  chmod +x $NCH_ROOT/bin/*

  mkdir -p $NCH_ROOT/conf $NCH_ROOT/logs
  if [ ! -f $NCH_ROOT/conf/nc.conf ];then
    msgout_both "    Copying configuration files ...."
    cp -f samples/*.conf $NCH_ROOT/conf/
    chmod 666 $NCH_ROOT/conf/netchannel.conf
  fi
  
  msgout_both "    Copying startup script ...."

  #Update nch service
  sudo $CavService $BASENAME 5 nch
  
  msgout_both "    Enabling all tunnels (if any)"
  /etc/init.d/nch start >> $LOG_FILE_NAME 2>&1

  msgout_both "NetChannel core installation is complete"
}

#******************************************************

main()
{
  msgout_both "----------------------------------------------------------------------"
  msgout_both "Starting NetChannel installation at `date`" 
  msgout_both "----------------------------------------------------------------------"

  msgout_both "Stopping NetChannel test if running `date`" 
  msgout_both "----------------------------------------------------------------------"

  if [ "$BASENAME" == "work" ]; then
     $NCH_ROOT/bin/nch_cm_test stop
  fi

  install_nch_core

  msgout_both "----------------------------------------------------------------------"
  msgout_both "NetChannel installation is complete at `date`"
  msgout_both "Detailed installation logs are in $LOG_FILE_NAME file."
  msgout_both "----------------------------------------------------------------------"

  if [ ! -d $NS_WDIR/topology/NetChannel ]; then
    mkdir -p $NS_WDIR/topology/NetChannel
  fi

 if [ "X$CAV_MON_HOME" = "X" ]; then
    if [ -d /home/cavisson/monitors ];then
      export CAV_MON_HOME="/home/cavisson/monitors"
      cp $NCH_ROOT/bin/nch_mon $CAV_MON_HOME/bin
      cp $NCH_ROOT/bin/nch_mon_latency $CAV_MON_HOME/bin
    elif [ -d ~/monitors ];then
      export CAV_MON_HOME=~/monitors
      cp $NCH_ROOT/bin/nch_mon $CAV_MON_HOME/bin
      cp $NCH_ROOT/bin/nch_mon_latency $CAV_MON_HOME/bin
    elif [ -d /opt/cavisson/monitors ];then
      export CAV_MON_HOME="/opt/cavisson/monitors"
      cp $NCH_ROOT/bin/nch_mon $CAV_MON_HOME/bin
      cp $NCH_ROOT/bin/nch_mon_latency $CAV_MON_HOME/bin
    fi
    else
     cp $NCH_ROOT/bin/nch_mon $CAV_MON_HOME/bin
  fi
  
   if [ "X$CAV_MON_HOME" = "X" ]; then
    if [ -d /opt/cavisson/monitors/bin ];then
      export CAV_MON_HOME="/opt/cavisson/monitors"
      cp $NCH_ROOT/bin/nch_mon_latency $CAV_MON_HOME/bin
    elif [ -d ~/monitors ];then
      export CAV_MON_HOME=~/monitors
      cp $NCH_ROOT/bin/nch_mon_latency $CAV_MON_HOME/bin
    elif [ -d /home/cavisson/monitors ];then
      export CAV_MON_HOME="/home/cavisson/monitors"
      cp $NCH_ROOT/bin/nch_mon_latency $CAV_MON_HOME/bin
    fi
    else
     cp $NCH_ROOT/bin/nch_mon_latency $CAV_MON_HOME/bin
  fi




  cp $NCH_ROOT/samples/Tier.conf     $NS_WDIR/topology/NetChannel/
  cp $NCH_ROOT/samples/Server.conf   $NS_WDIR/topology/NetChannel/
  cp $NCH_ROOT/samples/Instance.conf $NS_WDIR/topology/NetChannel/

   ## Copy the Netvision scenario to scenarios directory unconditionally.
  #if [ ! -f $NS_WDIR/scenarios/default/default/NetChannel.conf ];then
  #  cp $NCH_ROOT/samples/NetChannel.conf $NS_WDIR/scenarios/default/default/NetChannel.conf
  #fi

  msgout_both "Starting NetChannel CMT at `date`"

  #if [ ! -d $NS_WDIR/scripts/default/default/server_only_script ]; then
  #  mkdir -p $NS_WDIR/scripts/default/default/server_only_script
  #fi

  #cp $NCH_ROOT/samples/exit_script.c      $NS_WDIR/scripts/default/default/server_only_script/
  #cp $NCH_ROOT/samples/flow.c             $NS_WDIR/scripts/default/default/server_only_script/
  #cp $NCH_ROOT/samples/init_script.c      $NS_WDIR/scripts/default/default/server_only_script/
  #cp $NCH_ROOT/samples/registrations.spec $NS_WDIR/scripts/default/default/server_only_script/
  #cp $NCH_ROOT/samples/runlogic.c         $NS_WDIR/scripts/default/default/server_only_script/

  if [ "$BASENAME" == "work" ]; then
    $NCH_ROOT/bin/nch_cm_test start 2>/dev/null 1>&2 &
  fi
}

# Call main which calls others functions
main
chown -R cavisson.cavisson $NS_WDIR/upgrade
chown -R cavisson.cavisson $NS_WDIR/.rel
chown -R cavisson.cavisson $NS_WDIR/netchannel

exit 0


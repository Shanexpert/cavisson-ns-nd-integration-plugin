#!/bin/bash
# Name : nsi_nsobject_manager
# Purpose : To start or stop the NS Object Manager
# Usage: nsi_nsobject_manager {start|stop|restart|show}
#
#
#----------------------------------------------------------------
if [ -f $NS_WDIR/sys/ns_object_manager.conf ]; then
. $NS_WDIR/sys/ns_object_manager.conf
fi
#-----------------------------------------------------------------
jars=""
files=""
nport=""
ndebug_level=""
if [ "XX$port" != "XX" ];then
  nport="-p $port"
fi
if [ "XX$debug_level" != "XX" ];then
  ndebug_level="-d $debug_level"
fi
if [ ! -d $use_client_jar ]; then
  echo "Use Client Jar Directory dosen't exists"
  exit -1
fi

if [ "XX$use_client_jar" != "XX" ]; then
  files=`ls -d -1 $use_client_jar*.jar`
  jars="`echo $files|sed 's/ /:/g'`"
fi

CLASSPATH=$CLASSPATH:$NS_WDIR/webapps/netstorm/WEB-INF/lib/xstream-1.4.8.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jettison-1.2.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/xmlpull-1.1.3.1.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/joda-time-1.6.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/dom4j-1.6.1.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/xom-1.1.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jdom2-2.0.5.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/wstx-asl-3.2.7.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/kxml2-min-2.3.0.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/stax-1.2.0.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/stax-api-1.0.1.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/kxml2-2.3.0.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/xpp3_min-1.1.4c.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jdom-1.1.3.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/cglib-nodep-2.2.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/ns_object_utility.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/java-getopt-1.0.9.jar

if [ "XX$use_client_jar" != "XX" ]; then
  CLASSPATH=$CLASSPATH:$jars
fi


#echo $CLASSPATH

DESC="NS Object Manager"
PIDFILE="$NS_WDIR/nsobject.pid"
#LOGFILE=$NS_WDIR
 
COMMAND="java -cp $CLASSPATH:$NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/java-getopt-1.0.9.jar -DNS_WDIR=$NS_WDIR -Djava.awt.headless=true com.cavisson.nsobject.NSObjectManager $nport $ndebug_level"
#
#
#
#

set_ps_cmd()
{
  PS_USING_PID="ps -fp"
  PS_CMD_FOR_SEARCH="ps -ef" # Do not use ps -lef as need pid at filed 2

  OS_NAME=`uname`
  if [ "X$OS_NAME" = "XSunOS" ]; then
    if [ -f /usr/ucb/ps ];then
      PS_USING_PID="/usr/ucb/ps -auxwww"
      PS_CMD_FOR_SEARCH="/usr/ucb/ps -auxwww"
    fi
  fi
}

get_running_pid()
{
  #Get pid from pid file
  if [ -f $PIDFILE ];then
    PID=`cat $PIDFILE`
    if [ "XX$PID" = "XX" ];then
      echo "$DESC PID file ($PIDFILE) does not have PID. Exiting ..."
      exit 255
    fi
  else
    echo "$DESC PID file ($PIDFILE) is not found. Exiting ..."
    exit 255
  fi

  is_pid_running
  if [ "$STATUS" = "0" ];then
   PID=""
  fi
}

is_pid_running()
{
  #STATUS=`$PS_USING_PID $PID | grep -w java | grep -cw "\-DCAV_MON_HOME"`
  #Removing w because it is not working on solaris
  #STATUS=`$PS_USING_PID $PID | grep -w java | grep -c "\-DCAV_MON_HOME"`
  STATUS=`$PS_USING_PID $PID | grep -w java |grep "NSObjectManager"| grep -c "ns_object_utility.jar" `
}


get_running_pid_by_ps()
{
  #Make sure only one space after DPKG=cmon.
  # Add $CAV_MON_HOME to support that more than one cmon in one machine

  #Most customer machine do not have /ucb/ on their solaris server. That's why using standard ps command.
  #Command: ps -o "pid args"
  #output:
  #   PID COMMAND
  #   797 bash
  #   793 -sh
  #   3215 ps -o pid args
  #   2865 java -DPKG=cmon -DCAV_MON_HOME=/export/home/cavisson/cavisson/monitors -DCLASSP
  #This may not work in all cases, when JAVA_HOME or CAV_MON_HOME is large.
  if [ "X$OS_NAME" = "XSunOS" -a ! -f /usr/ucb/ps ]; then
    PID=`ps -o "pid args" |grep "NSObjectManager"| grep "ns_object_utility.jar"|grep -v "grep" | awk '{print $1}'`
    #PID=`ps -o "pid args"| grep "ns_object_utility.jar"|grep -v "grep" | awk '{print $1}'`
  else
    PID=`$PS_CMD_FOR_SEARCH |grep "NSObjectManager" |grep "ns_object_utility.jar" |grep -v "grep" | awk '{print $2}'`
    #PID=`$PS_CMD_FOR_SEARCH |grep "ns_object_utility.jar" |grep -v "grep" | awk '{print $2}'`
  fi
}


nsobject_manager_start()
{
  echo "Starting $DESC: "
  get_running_pid_by_ps
  #get_running_pid
  if [ "XX$PID" != "XX" ];then
    echo "$DESC is already running with pid ($PID)."
    $PS_USING_PID $PID
    exit 255
  fi

  #> $LOGFILE
  #echo "`date `:" >> $LOGFILE
  #echo "JAVA_HOME is $JAVA_HOME" >>  $LOGFILE
  #echo "Starting NS Object Manager using:" >> $LOGFILE
  #echo "    $COMMAND" >>  $LOGFILE

  nohup $COMMAND >>/tmp/error_nsobject.log 2>&1 &


  #Sleep so that next ps can catch this process
  sleep 1
  get_running_pid_by_ps
  if [ "XX$PID" = "XX" ];then
    echo "Error in starting in $DESC."
    exit 255
  fi
  echo $PID >$PIDFILE
  nsobject_manager_show "started"
}

nsobject_manager_stop()
{
  get_running_pid
  if [ "XX$PID" != "XX" ];then
    echo "Stopping $DESC with pid($PID)."
    kill $PID
    if [ $? != 0 ]; then
      echo "Error in stopping NS Object Manager."
      exit 255
    fi
    #Sleep so that port get freed by the system
    sleep 2
    nsobject_manager_show "stopped"
    #echo "Removing running_tests directory"
    #rm -rf $CAV_MON_HOME/logs/running_tests
  else
    echo "$DESC is not running."
  fi

}

nsobject_manager_show()
{
  operation="$1"

  get_running_pid
  if [ "XX$PID" != "XX" ];then
    echo "$DESC is $operation with pid($PID)."
    $PS_USING_PID $PID
  else
     if [ "XX$operation" = "XXstopped" ];then
       echo "$DESC is $operation."
     else
       echo "$DESC is not $operation."
     fi
  fi
}

#check_client_jar_files()
#{
#  if [ -d $use_client_jar ]; then
#    for i in `ls $use_client_jar`
#     do
#      echo "`cat $use_client_jar/$i`"
#     done
#  else
#    echo "Client jar files dosen't exists"
#  fi
#}


#---------------------------------------------------------------

set_ps_cmd


case "$1" in
  start)
    nsobject_manager_start
    ;;
  stop)
    nsobject_manager_stop
    ;;
  restart)
    echo "Restarting $DESC: "
    nsobject_manager_stop
    nsobject_manager_start
    ;;
  show)
    nsobject_manager_show "running"
    ;;
  *)
    N=$0
    echo "Usage: $N {start|stop|restart|show}" >&2
    exit 1
    ;;
esac

exit 0





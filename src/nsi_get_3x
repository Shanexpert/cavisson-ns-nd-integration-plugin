#!/bin/bash

if [ $# -lt 4 -o $# -gt 7 ];then
	echo "Usage: nsi_get_3x TR-NUM select-fields obj-type group-by [limit] [offset]"
	echo "run-time-flag is 1 for run-time phase only, otherwise 0"
        echo " Limit: This is the number of results returned by query statment (e.g. 10 it will show first 10 records)"
        echo " Offset: This is used to skip rows as specified by offset (e.g suppose you wanted to show results 11-20 then you can use offset 10)"
	exit 1
fi
NUM_ARG=$#
TRNUM=$1

if [ "XX" == "XX$NS_WDIR" ]
then
  NS_WDIR=/home/cavisson/work
fi

. $NS_WDIR/bin/nsi_db_utils
set_query_files $TRNUM

#set_debug_level_from_config
#To exclude failed records. URLs are always excluded, aggrgates are excluded
#based on config
if [ -f $NS_WDIR/logs/TR$1/exclude_failed_aggregate ];then
	EXCLUDE=1
else
	EXCLUDE=0
fi

if [ $# -eq 4 ];then
	RPO=0
else
	RPO=$5
fi

# Check if limit argument is given or not. It will limit number of rows to max this number
LIMIT=""

if [ $NUM_ARG -gt 5 ];then
  LIMIT="LIMIT $6"
fi

# Check if Offset argument is given or not. This is used to skip rows as specified by offset.
# For example, if offset is 1, then first row is skipped. If offset is 100, then first 100 rows are skipped
OFFSET=""
if [ $NUM_ARG -gt 6 ];then
  OFFSET="OFFSET $7"
fi

#args: TR-NUM select-fields obj-type group-by
#select-fields is anded fields with
#	1: Tries
#	2: Fail
#	4: success
#	8: Fail Pct
#	16: min
#	32: avg
#	64: max
#	128: median
#	256: 80%
#	512: 90%
#	1024: 95%
#	2048: 99%
#obj-type can be 0: URL, 1:Page: 2: Tx 3:Sess
#group-by: is ANDED field (0 allowed)
#	1: By Location
#	2: By Access


SELECT="select"

#Add obj name
if [ $3 -eq 0 ];then
    EXCLUDE=1
    OBJ="UrlRecord_$1"
    SELECT="$SELECT SessionName AS \"Session Name\", Pagename AS \"Page Name\", URLName As \"URL Name\", "
    INNER_QUERY="inner_query.* from 
      (select 
         UrlRecord_$1.UrlIndex,
         UrlRecord_$1.SessionIndex,
         UrlRecord_$1.PageIndex"

    SEL="$SEL SessionName, Pagename , URLName , inner_query.UrlIndex"
    INNER_FROM="FROM $OBJ"
    INNER_GROUP_BY="GROUP BY $OBJ.SessionIndex, PageIndex , UrlIndex" #SessionRecord_$1.Location"
    FROM=" SessionTable_$1, PageTable_$1, URLTable_$1"
    WHERE="WHERE inner_query.SessionIndex = SessionTable_$1.SessionIndex
      AND inner_query.PageIndex = PageTable_$1.PageIndex
      AND inner_query.URLIndex = URLTable_$1.URLIndex"
    if [ $4 -ne 0 -o $RPO -eq 1 ];then
      INNER_FROM="$INNER_FROM,  SessionRecord_$1"
      INNER_WHERE="WHERE $OBJ.SessionInstance = SessionRecord_$1.SessionInstance
      AND $OBJ.ChildIndex = SessionRecord_$1.ChildIndex "
    fi
 

elif [ $3 -eq 1 ];then
    OBJ="PageRecord_$1"
    SELECT="$SELECT SessionName As \"Session Name\", PageName As \"Page Name\", "
    INNER_QUERY="inner_query.* from 
      (select 
         PageRecord_$1.SessionIndex,
         PageRecord_$1.PageIndex"
#,         $OBJ.EndTime"

    SEL="$SEL SessionName , PageName , inner_query.PageIndex"
    INNER_FROM="FROM $OBJ"
    INNER_GROUP_BY="GROUP BY $OBJ.SessionIndex, PageIndex"
   #, EndTime"
    FROM=" SessionTable_$1, PageTable_$1"
    WHERE="WHERE inner_query.SessionIndex = SessionTable_$1.SessionIndex
      AND inner_query.PageIndex = PageTable_$1.PageIndex"
      #AND inner_query.EndTime <> 0"
    if [ $4 -ne 0 -o $RPO -eq 1 ];then
        INNER_FROM="$INNER_FROM,  SessionRecord_$1"
	INNER_WHERE="WHERE $OBJ.SessionInstance = SessionRecord_$1.SessionInstance
        AND $OBJ.ChildIndex = SessionRecord_$1.ChildIndex "
    fi
elif [ $3 -eq 2 ];then
    OBJ="TransactionRecord_$1"
    SELECT="$SELECT TransactionName AS \"Transaction Name\", "
    INNER_QUERY="inner_query.* from 
      (select 
         $OBJ.TransactionIndex"
#,$OBJ.EndTime"

    SEL="$SEL TransactionName, inner_query.TransactionIndex"
    INNER_FROM="FROM $OBJ"
    INNER_GROUP_BY="GROUP BY TransactionIndex"
    #, EndTime"
    FROM=" TransactionTable_$1"
    WHERE="WHERE inner_query.TransactionIndex = TransactionTable_$1.TransactionIndex"
      #AND inner_query.EndTime <> 0"
    if [ $4 -ne 0 -o $RPO -eq 1 ];then
        INNER_FROM="$INNER_FROM,  SessionRecord_$1"
	INNER_WHERE="WHERE  $OBJ.SessionInstance = SessionRecord_$1.SessionInstance
        AND $OBJ.ChildIndex = SessionRecord_$1.ChildIndex "
    fi
elif [ $3 -eq 3 ];then
    OBJ="SessionRecord_$1"
    SELECT="$SELECT SessionName As \"Session Name\", "
    INNER_QUERY="inner_query.* from 
      (select 
         $OBJ.SessionIndex" #,$OBJ.EndTime"

    INNER_FROM="FROM $OBJ"
    INNER_GROUP_BY="GROUP BY SessionIndex" #, EndTime"
    SEL="$SEL SessionName , SessionTable_$1.sessionIndex"
    FROM=" SessionTable_$1"
    WHERE="WHERE inner_query.SessionIndex = SessionTable_$1.SessionIndex" # AND inner_query.EndTime <> 0"
else
    echo "Invalid object-type (valid values 0-3)"
    exit 1
fi

if [ $RPO -eq 1 ];then
	INNER_WHERE="$INNER_WHERE AND isRunPhase = true"
fi
#echo "Select is $SELECT" 

#Add User Types
if [ $(($4 & 1)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, Location As \"Location Name\""
    INNER_GROUP_BY="$INNER_GROUP_BY, SessionRecord_$1.Location"
    #SEL="$SEL, Location"
fi
if [ $(($4 & 2)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, Access As \"Access Name\""
    #SEL="$SEL, Access"
    INNER_GROUP_BY="$INNER_GROUP_BY, SessionRecord_$1.Access"
fi

#echo "Select2 is $SELECT"

GROUP="GROUP BY $SEL"
ORDER="ORDER BY $SEL"

if [ $EXCLUDE -eq 1 ];then
    VALUE="CASE WHEN $OBJ.Status != 0 THEN NULL ELSE ($OBJ.EndTime-$OBJ.StartTime) END"
else
    VALUE="$OBJ.EndTime-$OBJ.StartTime"
fi

#Add select elements
if [ $(($2 & 1)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, count(*) AS \"Tried\""
fi
if [ $(($2 & 2)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, count(nullif($OBJ.Status, 0)) AS \"Fail\""
fi
if [ $(($2 & 4)) -ne 0 ];then
        INNER_QUERY="$INNER_QUERY, count(*)-count(nullif($OBJ.Status, 0)) AS \"Success\""
fi
if [ $(($2 & 8)) -ne 0 ];then
        INNER_QUERY="$INNER_QUERY, CASE WHEN count(*) > 0 THEN (count(nullif($OBJ.Status, 0))*100/count(*)) ELSE 0 END AS \"FailPct\""
fi
if [ $(($2 & 16)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, min($VALUE) AS \"Min\""
fi
if [ $(($2 & 32)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, round(avg($VALUE)) AS \"Average\""
fi
if [ $(($2 & 64)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, max($VALUE) AS \"Max\""
fi
if [ $(($2 & 128)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, median_percentile($VALUE) AS \"Median\""
fi
if [ $(($2 & 256)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, eighty_percentile($VALUE) AS \"80%\""
fi
if [ $(($2 & 512)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, ninety_percentile($VALUE) AS \"90%\""
fi
if [ $(($2 & 1024)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, ninety_five_percentile($VALUE) AS \"95%\""
fi
if [ $(($2 & 2048)) -ne 0 ];then
    INNER_QUERY="$INNER_QUERY, ninety_nine_percentile($VALUE) AS \"99%\""
fi


INNER_QUERY="$INNER_QUERY $INNER_FROM $INNER_WHERE $INNER_GROUP_BY ) inner_query,"

log_query 
run_ns_query
show_query_result
exit 0

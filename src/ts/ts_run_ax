#!/bin/sh
#
# This is shell program to run test cases of Max Load 
#

. $NS_WDIR/bin/ts_ip_lib

trap 'end_date_header_to_cycle; exit -1' 1 2 3 4 5 13 15

SCENARIO_NAME_TEMP=/tmp/scenarion_name.$$
SERVER_HOST_KEYWORD_FILE=/tmp/server_host_keyword.$$
SRC_IP_KEYWORD_FILE=/tmp/src_ip_keyword.$$
MONITOR_KEYWORD_FILE=/tmp/monitor_keyword.$$
RUN_TIME_KEYWORD_FILE=/tmp/run_time_keyword.$$
SERVER_STATS_KEYWORD_FILE=/tmp/server_stats_keyword.$$
USE_SAME_NETID_SRC_KEYWORD_FILE=/tmp/use_same_netid_keyword.$$
WAN_ENV_KEYWORD_FILE=/tmp/wan_env_keyword.$$
export END_DATE_HEADER=1
APPEND_SCENARIO_KEY=0

#*********************************************************************************************
#bug id: 101320: ToDo: TBD with DJA: How to get WORKSPACE and PROFILE
#default workspace
DW="admin"
#default profile
DP="default"
WORKSPACE=$DW
PROFILE=$DP
NS_RTA_DIR="workspace/${WORKSPACE}/${PROFILE}/cavisson"
WSARGS="-w $WORKSPACE/$PROFILE"

PROJ=""
SUB_PROJ=""
TESTCASE_DIR=""
TESTSUIT=""

set_proj_subproj()
{
   PROJ=`echo ${1} | egrep "/" | cut -d'/' -f1`
   SUB_PROJ=`echo ${1} | egrep "/" | cut -d'/' -f2`
}

#i/p would be <prj>/<subproj>/<testcase_dir>
set_proj_subproj_testcase_dir()
{
   set_proj_subproj $1
   TESTCASE_DIR=`echo ${1} | egrep "/" | cut -d'/' -f3`
}

#i/p would be <prj>/<subproj>/<testsuit_dir>
set_proj_subproj_testsuit_dir()
{
   set_proj_subproj $1
   TESTSUIT=`echo ${1} | egrep "/" | cut -d'/' -f3`
}


#*********************************************************************************************

#HTTP_PORT_IPV6=6880

check_user_id()
{
  id | grep netstorm > /dev/null
  if [ $? -ne 0 ];then
    echo "You must be netstorm to execute this command"
    exit 1
  fi
}

usage()
{
  echo "Error: Configuration file name is not given."
  exit -1
}

get_cur_date_time()
{
  echo "`date '+%m/%d %H:%M:%S'`"
}

#check for argument and show usage
if [ $# -lt 1 ];then
  usage
fi

export TX_AM_CONF=$1
export TEST_DIR_PATH=`pwd`

#If user passes -l as arg1 then it will run in master mode
MASTER_MODE=$2
ts_debug_log "Master mode is $MASTER_MODE"

get_project_sub_project()
{
  SCEN_STR=$1
  NUM_FIELDS=`echo $SCEN_STR | awk -F'/' '{print NF}'`

  if [ $NUM_FIELDS == 1 ];then
    PROJECT="default"
    SUB_PROJECT="default"
    SCENARIO_NAME="$SCEN_STR"
  elif [ $NUM_FIELDS == 3 ];then
    PROJECT=`echo $SCEN_STR | awk -F'/' '{print $1}'`
    SUB_PROJECT=`echo $SCEN_STR | awk -F'/' '{print $2}'`
    SCENARIO_NAME=`echo $SCEN_STR | awk -F'/' '{print $3}'`
  else
    echo "Format should be 'SCENARIO_NAME <proj/sub_proj/scenario_name>' in $TESTCASE_CONF"
    exit -1
  fi
}

#SRC IP keyword is to be created for each Scenario
cre_src_ip_keyword_file()
{
  ts_debug_log "cre_src_ip_keyword_file() - Method called"
  if  [ $IP_FORMAT == "IPv6" ];then
     echo "USE_SRC_IP 3 $IP_ENTRIES_IPv6" >$SRC_IP_KEYWORD_FILE
     return
  fi
  echo "USE_SRC_IP 1 0" > $SRC_IP_KEYWORD_FILE

  for ((if_idx=0; if_idx < ${#IFArray[@]}; if_idx=`expr $if_idx + 1` ))
  do
    C1=`get_C1 $if_idx`
    START_IP=$A1.$B1.$C1.$D1
    # We need to take NUM IPs from scenario file is present (Later)
    USE_NUM_IP=`egrep "^USE_NUM_IP" $SCENARIO_NAME | cut -d " " -f2`
    if [ "XX$USE_NUM_IP" == "XX" ]
    then
      USE_NUM_IP=$NUM_SRC_IPS
    else
      if [ $USE_NUM_IP -gt $NUM_SRC_IPS ]
      then
        echo "The Number of IPs has been given $NUM_SRC_IPS in the scenario $SCENARIO_NAME is greater than maximum allowed $NUM_SRC_IPS, exiting..."
        exit -1
      fi
    fi
    echo "SRC_IP_LIST $START_IP $USE_NUM_IP" >> $SRC_IP_KEYWORD_FILE
  done
  #echo "SRC IP Keyword File is -"
  #cat $SRC_IP_KEYWORD_FILE 
}

#Server Host keyword is to be created for Each VIP
# Arg1 = Index in the VIP Arrays
cre_server_host_keyword_file()
{
  ts_debug_log "cre_server_host_keyword_file()- Method called"
  idx=$1
  echo -n "SERVER_HOST 127.0.0.1 " > $SERVER_HOST_KEYWORD_FILE
  for ((if_idx=0; if_idx < ${#IFArray[@]}; if_idx=`expr $if_idx + 1` ))
  do 
    C1=`get_C1 $if_idx`
    ts_debug_log "cre_server_host_keyword_file() - $C"
    VIP=$A1.$B1.$C1.${VIP_ARR[$idx]}
    # Added by Anuj: 17/01/08, for the ts_summary_result  
    export VIP_LAST_OCTET=${VIP_ARR[$idx]} 
    ts_debug_log "Exporting the VIP_LAST_OCTET = ${VIP_ARR[$idx]}"
    echo -n "$VIP - " >> $SERVER_HOST_KEYWORD_FILE
    ts_debug_log "cre_server_host_keyword_file()- The `expr $idx + 1` VIP is = $VIP"
  done
  echo  "" >> $SERVER_HOST_KEYWORD_FILE # To add newline at the end
  #echo "Server Host Keyword File is -"
  #cat $SERVER_HOST_KEYWORD_FILE 
}

#added by arun to support IPv6, here port is an issue will be implemented later
cre_server_host_keyword_file_IPv6()
{
  ts_debug_log "cre_server_host_keyword_file_IPv6()- Method called"
  idx=$1
  echo -n "SERVER_HOST 127.0.0.1 " > $SERVER_HOST_KEYWORD_FILE
  for ((if_idx=0; if_idx < ${#IFArray[@]}; if_idx=`expr $if_idx + 1` ))
  do
    C1=`get_C1 $if_idx`
    ts_debug_log "cre_server_host_keyword_file_IPv6() - $C"
    VIP=$F1:$F2:$F3:$F4:$A1:$B1:$C1:${VIP_ARR[$idx]}
    # Added by Anuj: 17/01/08, for the ts_summary_result
    export VIP_LAST_OCTET=${VIP_ARR[$idx]}
    ts_debug_log "Exporting the VIP_LAST_OCTET = ${VIP_ARR[$idx]}"
    #echo -n "[$VIP]:$HTTP_PORT_IPV6 - " >> $SERVER_HOST_KEYWORD_FILE
    #Not putting port as netstorm is handling it based on HTTS or HTTPS
    echo -n "$VIP - " >> $SERVER_HOST_KEYWORD_FILE
    ts_debug_log "cre_server_host_keyword_file_IPv6()- The `expr $idx + 1` VIP is = $VIP"
  done
  echo  "" >> $SERVER_HOST_KEYWORD_FILE # To add newline at the end
}


#Monitor keyword is to be created once
cre_monitor_keyword_file ()
{
  ts_debug_log "cre_monitor_keyword_file () - Method called"

  NSAdmin_IP=`get_NS_admin_ip`
  if [ "XX$NSAdmin_IP" == "XX" ];then
    echo "NSAdminIP is not found in the $HOME/etc/cav.conf. Hence exiting..."
    exit -1
  fi

  NOAdmin_IP=`get_NO_admin_ip`
  if [ "XX$NOAdmin_IP" == "XX" ];then
    echo "SRAdminIP is not found in the $HOME/etc/cav.conf. Hence exiting..."
    exit -1
  fi

  echo "MONITOR linux $NSAdmin_IP" > $MONITOR_KEYWORD_FILE
  echo "MONITOR tcp $NSAdmin_IP" >> $MONITOR_KEYWORD_FILE
  echo "MONITOR linux $NOAdmin_IP" >> $MONITOR_KEYWORD_FILE
  echo "MONITOR tcp $NOAdmin_IP" >> $MONITOR_KEYWORD_FILE 
  #echo "Monitor Keyword File is -"
  #cat $MONITOR_KEYWORD_FILE 
}

# RUN_TIME keyword to be created only once like monitor
cre_run_time_keyword_file()
{
  ts_debug_log "cre_run_time_keyword_file () - Method called"
  if [ "$RUN_TIME_UNIT" == "H" ];then
    DURATION_TYPE="TIME"
    DURATION_VALUE="$RUN_TIME_AMMOUNT:00:00"
  elif [ "$RUN_TIME_UNIT" == "M" ];then
    DURATION_TYPE="TIME"
    DURATION_VALUE="00:$RUN_TIME_AMMOUNT:00"
  elif [ "$RUN_TIME_UNIT" == "S" ];then
    DURATION_TYPE="TIME"
    DURATION_VALUE="00:00:$RUN_TIME_AMMOUNT"
  elif [ "$RUN_TIME_UNIT" == "C" ];then
    DURATION_TYPE="SESSIONS"
    DURATION_VALUE="$RUN_TIME_AMMOUNT"
  fi
 
  RUN_TIME_SCEN=`egrep "^SCHEDULE ALL Duration DURATION" $SCENARIO_NAME`
  if [ "XX$RUN_TIME_SCEN" == "XX" ];then
    echo "SCHEDULE ALL Duration DURATION $DURATION_TYPE $DURATION_VALUE" > $RUN_TIME_KEYWORD_FILE
  else
    echo "$RUN_TIME_SCEN" > $RUN_TIME_KEYWORD_FILE
  fi
  ts_debug_log `cat $RUN_TIME_KEYWORD_FILE`
}

# USE_SAME_NETID_SRC keyword is to be created once
cre_use_same_netid_keyword_file()
{
  ts_debug_log "cre_use_same_netid_keyword_file() - Method called"
 
  echo "USE_SAME_NETID_SRC $USE_SAME_NETID_SRC" > $USE_SAME_NETID_SRC_KEYWORD_FILE
  ts_debug_log `cat $USE_SAME_NETID_SRC_KEYWORD_FILE`
}


# SERVER_STATS keyword is to be created once
cre_server_stats_keyword_file()
{
  ts_debug_log "cre_server_stats_keyword_file () - Method called"
  NSAdmin_IP=`get_NS_admin_ip`
  if [ "XX$NSAdmin_IP" == "XX" ];then
    echo "NSAdmin_IP is not found in the $HOME/etc/cav.conf. Hence exiting..."
    exit -1
  fi
  NOAdmin_IP=`get_NO_admin_ip`
  if [ "XX$NOAdmin_IP" == "XX" ];then
    echo "SRAdminIP is not found in the $HOME/etc/cav.conf. Hence exiting..."
    exit -1
  fi
  echo "SERVER_STATS $NSAdmin_IP" > $SERVER_STATS_KEYWORD_FILE
  echo "SERVER_STATS $NOAdmin_IP" >> $SERVER_STATS_KEYWORD_FILE
  ts_debug_log `cat $SERVER_STATS_KEYWORD_FILE`
}

cre_wan_env_keyword_file()
{ 
  ts_debug_log "cre_wan_env_keyword_file () - Method called"
  #Keyword in scenario file is given more prefrence than tx_am.conf
  WAN_ENV_SCEN=`egrep "^WAN_ENV" $SCENARIO_NAME`
  if [ "XX$WAN_ENV_SCEN" != "XX" ];then
    WAN_ENV_SCEN_VALUE=`echo $WAN_ENV_SCEN| awk '{print $2}'`
    WAN_VALUE=$WAN_ENV_SCEN_VALUE
  fi
  echo "WAN_ENV $WAN_VALUE"  > $WAN_ENV_KEYWORD_FILE
  ts_debug_log `cat $WAN_ENV_KEYWORD_FILE`
}

delete_keywords()
{
EXISTING_MONIOR_KEYWORDS_FILE=/tmp/existing_monitor_keywords.$$
EXISTING_SERVER_STATS_KEYWORDS_FILE=/tmp/existing_server_stats_keywords.$$

  ts_debug_log "delete_keywords () - Method called"
  #cat $SCENARIO_NAME
  #Save all MONITOR keywords in temp file as we need to delete only those monitor keywords 
  # which are for NS and NO Admin IP
  egrep "^MONITOR" $SCENARIO_NAME > $EXISTING_MONIOR_KEYWORDS_FILE
  egrep "^SERVER_STATS" $SCENARIO_NAME > $EXISTING_SERVER_STATS_KEYWORDS_FILE
  ts_debug_log `cat $EXISTING_SERVER_STATS_KEYWORDS_FILE`
  egrep -v "^SERVER_HOST|^SRC_IP_LIST|^USE_SRC_IP|^MONITOR|^SERVER_STATS|^SCHEDULE ALL Duration|^USE_SAME_NETID_SRC|^WAN_ENV" $SCENARIO_NAME > $SCENARIO_NAME_TEMP
  mv $SCENARIO_NAME_TEMP $SCENARIO_NAME
 
  #Copy back all MONITOR keywords which are not for NS and NO

  NSAdmin_IP=`get_NS_admin_ip`
  if [ "XX$NSAdmin_IP" == "XX" ];then
    echo "NSAdmin_IP is not found in the $HOME/etc/cav.conf. Hence exiting..."
    exit -1
  fi

  NOAdmin_IP=`get_NO_admin_ip`
  if [ "XX$NOAdmin_IP" == "XX" ];then
    echo "SRAdminIP is not found in the $HOME/etc/cav.conf. Hence exiting..."
    exit -1
  fi
  egrep -v "$NSAdmin_IP|$NOAdmin_IP" $EXISTING_MONIOR_KEYWORDS_FILE >> $SCENARIO_NAME
  egrep -v "$NSAdmin_IP|$NOAdmin_IP" $EXISTING_SERVER_STATS_KEYWORDS_FILE >> $SCENARIO_NAME

  #cat $SCENARIO_NAME
}

replace_keywords()
{
   ts_debug_log "replace_keywords() - Method called"
   cre_wan_env_keyword_file
   cre_run_time_keyword_file
   delete_keywords
   cre_src_ip_keyword_file
   if [ -f $SERVER_STATS_KEYWORD_FILE ];then
    cat $SERVER_HOST_KEYWORD_FILE $SRC_IP_KEYWORD_FILE $MONITOR_KEYWORD_FILE $SERVER_STATS_KEYWORD_FILE $RUN_TIME_KEYWORD_FILE $USE_SAME_NETID_SRC_KEYWORD_FILE $WAN_ENV_KEYWORD_FILE >> $SCENARIO_NAME
    if [ "XX$APPEND_SCENARIO_KEY" != "XX1" ];then
      ts_debug_log "Adding SCENARIO_KEYWORD to scenario file"
      cat $SCENARIO_KEYWORD_FILE >> $SCENARIO_NAME 
    fi
   else
    cat $SERVER_HOST_KEYWORD_FILE $SRC_IP_KEYWORD_FILE $RUN_TIME_KEYWORD_FILE $USE_SAME_NETID_SRC_KEYWORD_FILE $WAN_ENV_KEYWORD_FILE >> $SCENARIO_NAME
    if [ "XX$APPEND_SCENARIO_KEY" != "XX1" ];then
      ts_debug_log "Adding SCENARIO_KEYWORD to scenario file"
      cat $SCENARIO_KEYWORD_FILE >> $SCENARIO_NAME 
    fi
   fi
   ts_debug_log "replace_keywords() - Method called."
}

#Updates values in initial and generate org file
upd_scenario_file()
{
  while read line
  do
    ts_debug_log "upd_scenario_name() - Line is $line"
    echo $line | egrep "^#" > /dev/null
    #Ignore commented lines
    if [ $? == 0 ]
    then
      ts_debug_log "upd_scenario_name() - ignoring commented line"
      continue
    fi
    echo $line | egrep "^TEST_CASE_NAME" > /dev/null
    if [ $? != 0 ]
    then
      continue
    fi

    testcase_name=`echo $line | cut -d " " -f2`
    ts_debug_log "upd_scenario_file() - Test Case Name is $testcase_name"

    #assuming that testcase_name will include proj/sub_proj
    set_proj_subproj_testcase_dir $testcase_name
    TEST_CONF=$NS_WDIR/$NS_RTA_DIR/$PROJ/$SUB_PROJ/testcases/$TESTCASE_DIR/testcase.conf
    #Check for testcase name directory
    if [ ! -f $TEST_CONF ]; then
      echo "$TEST_CONF testcase directory not present"
      exit -1
    fi
    #echo -n "$testcase_name|" > $testcase_data_file2
    SCENARIO_NAME=`egrep "^SCENARIO_NAME" $TEST_CONF | cut -d " " -f2`
    get_project_sub_project $SCENARIO_NAME
    SCENARIO_NAME=$NS_WDIR/$NS_RTA_DIR/$PROJECT/$SUB_PROJECT/scenarios/$SCENARIO_NAME.conf
    ts_debug_log "Scenario Name is: $SCENARIO_NAME"
    #Check for scenario file
    if [ ! -f $SCENARIO_NAME ]; then
      echo "$SCENARIO_NAME Scenario file not present"
      exit -1
    fi
    replace_keywords
    #assuming that TEST_SUITE_NAME will include proj/sub_proj
    set_proj_subproj_testsuit_dir $TEST_SUITE_NAME
    done < $NS_WDIR/$NS_RTA_DIR/$PROJ/$SUB_PROJ/testsuites/$TESTSUIT.conf
}

#add_hdr_to_result()
#{
#  echo "TestCaseName|TestRun|URLHits|URLFail|TCP_TX|TCP_RX|ETH_TX|ETH_RX|OPEN/SCE|CLOSE/SEC|CPU_BUSY_100|CPU_BUSY_106" > $testcase_data_file1
#
#}

set_gui_data_pkt()
{
  ts_debug_log "set_gui_data_pkt() - Method called"
  #GuiDataPkt=2
  GuiDataPkt=3  # Changed by Anuj: 21/01/08
  export GUI_DATA=$GuiDataPkt
  ts_debug_log "set_gui_data_pkt() - GUI_DATA is $GuiDataPkt"
}

get_test_cycle_format()
{
  echo "`date '+%m%d%y_%H%M%S'`"
}

# To create summary report
create_cycle_summary_header ()
{
  #debug_log "Called create_cycle_summary_header"
  mkdir -p $TSR_CYCLE_LOG_DIR_AX
  export CYCLE_SUMMARY_REPORT=$TSR_CYCLE_LOG_DIR_AX/cycle_summary.report
  >$CYCLE_SUMMARY_REPORT
  echo "Test Cycle Name: $LOG_CYCLE_DIR_NAME" >>$CYCLE_SUMMARY_REPORT
  echo "Test Suite Name: $TEST_SUITE_NAME" >>$CYCLE_SUMMARY_REPORT
  echo "Start Date/Time: `get_cur_date_time`" >>$CYCLE_SUMMARY_REPORT
  echo "" >>$CYCLE_SUMMARY_REPORT
  #Assume max test case name size is 32 chars
  echo " TestCaseName<TIC-TID>    TSR     TR#     StartDate/Time EndDate/Time     Status       Description">>$CYCLE_SUMMARY_REPORT
  echo " ---------------------    ----    ----    -------------- -------------- -------------- -----------">>$CYCLE_SUMMARY_REPORT
  #echo " TestCaseName<TIC-TID>    TSR#      TR#         Status       Description">>$CYCLE_SUMMARY_REPORT
  #echo " ---------------------    -------   -------   -------------  -----------">>$CYCLE_SUMMARY_REPORT
}

end_date_header_to_cycle()
{
  echo "" >>$CYCLE_SUMMARY_REPORT
  echo "End Date/Time: `get_cur_date_time`">>$CYCLE_SUMMARY_REPORT
}

run_ts()
{
  ts_debug_log "run_ts() - Method called"
  vip_idx=0
  cur_dir=`pwd`
  export LOG_CYCLE_DIR_NAME=`get_test_cycle_format`
  echo "Test Cycle Number = $LOG_CYCLE_DIR_NAME"
  TSR_CYCLE_LOG_DIR_AX=$NS_WDIR/logs/tsr/$LOG_CYCLE_DIR_NAME
  create_cycle_summary_header

  while [ $vip_idx -lt ${#VIP_ARR[@]} ]
  do

    if [ $IP_FORMAT == "IPv4" ];then
       cre_server_host_keyword_file $vip_idx
    else
       cre_server_host_keyword_file_IPv6 $vip_idx
    fi 
    upd_scenario_file
    #Will not append the keyword defined in tx_am.conf again
    APPEND_SCENARIO_KEY=1
    #add_hdr_to_result
    set_gui_data_pkt
    echo "Starting test suite for VIP ${VIP_ARR[$vip_idx]}"
    cd $NS_WDIR
    if [ $DEBUG == 0 ];then
      ts_debug_log "Running without debug log DEBUG = $DEBUG"
      $NS_WDIR/bin/ts_run $MASTER_MODE -n testsuites/$TEST_SUITE_NAME $WSARGS 
    else
      ts_debug_log "Running with debug log DEBUG = $DEBUG"
      $NS_WDIR/bin/ts_run $MASTER_MODE -D -n testsuites/$TEST_SUITE_NAME $WSARGS
    fi
    vip_idx=`expr $vip_idx + 1`
    cd $cur_dir
  done
  export LOG_CYCLE_DIR_NAME=''
}




check_user_id

set_parameters

ts_get_IP_octets
ts_get_interfaces
ts_get_interfaces_subnet
ts_get_vip_arr

cre_use_same_netid_keyword_file

#monitors are now controled by tx_am.conf using Keyword ADD_MONITORS
if [ "XX$ADD_MONITORS_VALUE" == "XX1" ];then
  ts_debug_log "Adding MONITORS in the scenario file ADD_MONITORS_VALUE = $ADD_MONITORS_VALUE"
  cre_server_stats_keyword_file
  cre_monitor_keyword_file
fi

#This is now called conditionally above 
#cre_wan_env_keyword_file

#This part of the code is commented as now we dont have to add VIP IP addresses in ip_entries file 
#in case of USE_SAME_NETID_SRC
#if [ $IP_FORMAT == "IPv4" ];then 
#  add_vip_to_ip_entries
#  run_ts
#  del_vip_from_ip_entries
#else 
#  run_ts
#fi

#We have to directly call run_ts function in any case of IP_FORMAT
run_ts
end_date_header_to_cycle

rm -f $SERVER_HOST_KEYWORD_FILE $SRC_IP_KEYWORD_FILE $SCENARIO_NAME_TEMP $WAN_ENV_KEYWORD_FILE $SRC_IP_KEYWORD_FILE $SCENARIO_KEYWORD_FILE $SERVER_STATS_KEYWORD_FILE $MONITOR_KEYWORD_FILE $RUN_TIME_KEYWORD_FILE $USE_SAME_NETID_SRC_KEYWORD_FILE 
ts_debug_log "The execution of ts_run_ax has been finished succesfully"

exit 0

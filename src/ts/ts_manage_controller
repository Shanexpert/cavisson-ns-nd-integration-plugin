#!/bin/bash
#
# File        : ts_manage_controller
# Purpose     : To setup test suites in multiple controller 
# Date        : December 9, 2017
# Author      : Vikas Verma
# Changes[1]  : Name : 
#               Date :
#               Version :  
##############################################################################################################################################
CONTROLLER_CONFIG_FILE="$HOME_DIR/etc/cav_controller.conf"
OPERATION=""

WORK_PROFILE=""
NS_TA_DIR=""

link()
{
   
   if [ -d $1_ts ]; then
     echo "$1 already linked to $2."
     return;
   fi
   mv $1 $1"_ts"
   ln -s $2 $1
}

unlink()
{
    if [ -d $1_ts ]; then
      rm $1
      mv $1"_ts" $1
    else
      echo "$1_ts already unlinked."
    fi
}

link_controller()
{
  for ts_slave in $@
  do
    target_ctrl="$HOME_DIR/$ts_slave"
    link $target_ctrl/scenarios $NS_TA_DIR/default/default/scenarios
    link $target_ctrl/webapps/scripts $NS_TA_DIR/default/default/scripts
    link $target_ctrl/webapps/logs $NS_WDIR/webapps/logs
    link $target_ctrl/testsuites $NS_TA_DIR/default/default/testsuites
    link $target_ctrl/testcases $NS_TA_DIR/default/default/testcases
    link $target_ctrl/checkprofile $NS_TA_DIR/default/default/checkprofile 
    link $target_ctrl/mprof $NS_WDIR/mprof
    link $target_ctrl/topology $NS_WDIR/topology 
    link $target_ctrl/sys $NS_WDIR/sys 
 done
}

unlink_controller()
{
  for ts_slave in $@
  do
    target_ctrl="$HOME_DIR/$ts_slave"
    unlink $target_ctrl/scenarios
    unlink $target_ctrl/webapps/scripts 
    unlink $target_ctrl/webapps/logs 
    unlink $target_ctrl/testsuites 
    unlink $target_ctrl/testcases 
    unlink $target_ctrl/checkprofile 
    unlink $target_ctrl/mprof
    unlink $target_ctrl/topology 
    unlink $target_ctrl/sys 
 done
}

check_controller()
{
  for ts_slave in $@
  do
    exist=`cat $CONTROLLER_CONFIG_FILE | awk -F '|' '{print $1}'|grep -wc $ts_slave`
      if [ $exist == 0 ]; then
        echo "Invalid Controller $ts_slave. exiting..."
        exit;
      fi
  done

}

usages()
{
  echo "Usages:"
  echo 'ts_manage_controller -o <link/unlink> -l "<controller1> <controller2> <controller3> <controller4>"'
  echo "Where"
  echo "  [-o]  -  link/unlink"
  echo "  [-l]  -  to provide controller(slave controller) list"
  echo "  [-w]  -  to provide workspace_name/profile_name"
  echo "        -  Eg.: \"ts_slave_controller1 ts_slave_controller2 ts_slave_controller3 ts_slave_controller4\""
  exit 1
}

while getopts o:l: c
do
  case $c in
    o) OPERATION=$OPTARG ;;
    l) LIST=$OPTARG ;;
    w) WORK_PROFILE=$OPTARG;;
    ?) echo "Invalid Arguments"
       usages ;;
  esac
done

if [ "X$OPERATION" == "X" -o "X$LIST" == "X" ]; then
  echo "Argument(s) Not Provided."
  usages
  exit 0
fi

#************************************************************************************************
#set absolute test assets path
NS_TA_DIR=`nsi_get_work_space_path.sh $WORK_PROFILE`
#************************************************************************************************

if [ $OPERATION == "link" ]; then
  check_controller $LIST
  link_controller $LIST
elif [ $OPERATION == "unlink" ]; then
  check_controller $LIST
  unlink_controller $LIST
else
  echo "Invalid Operation '$OPERATION'."
  usages
  exit 0;
fi

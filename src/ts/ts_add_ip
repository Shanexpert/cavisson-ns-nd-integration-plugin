#!/bin/sh

# Name  : ts_add_ip

# Author: Anuj Dhiman
# usage :
# Modification History:
# 12/27/07: Initial version
. $NS_WDIR/bin/ts_ip_lib
sudo sh << EOF
check_user_id()
{
  USERID=`id -u`
  if [ $USERID -ne 0 ];
  then
    echo "You must be root to execute this command"
    exit 1
  fi
}

usage()
{
  echo "Usage: ts_add_ip [-c|-s] <config_file_name>"
  exit -1
}

if [ $# -gt 2 -o $# -lt 1 ]; then
   usage
fi

if [ $# == 1 ];then
  ENTITY="-c"
  TX_AM_CONF=$1
elif [ $# == 2 -a \( $1 == "-c" -o $1 == "-s" \) ];then
  ENTITY=$1
  TX_AM_CONF=$2
else 
  usage
fi

NO=`get_NO_admin_ip`

ts_add_ip()
{
  ts_debug_log "There are ${#IFArray[@]} interfaces:"
  interface_idx=0
  while [ $interface_idx -lt ${#IFArray[@]} ]
  do
    C1=`get_C1 $interface_idx`
    if [ $ENTITY == "-s" -a $MODE != "Transparent" ];then
       ((C1=C1 + 100))
    fi
    #echo "The value of C1 for the interface ${IFArray[$interface_idx]} is $C1"
    ts_debug_log "The $interface_idx interface is = ${IFArray[$interface_idx]}"
    START_IP=$A1.$B1.$C1.$D
    echo $START_IP
    NET_ID=$A1.$B1.$C1.0
    NETBITS=24
    VLANID="-"
    INTERFACE=${IFArray[$interface_idx]}
    GATEWAY_IP=`get_gateway_ip`
    if [ $ENTITY == "-c" ];then 
       ts_debug_log "nsu_assign_ip $NET_ID/$NETBITS|$START_IP:$NUM_IPS|$VLANID|$GATEWAY_IP|$INTERFACE"
       $NS_WDIR/bin/nsu_assign_ip "$NET_ID/$NETBITS|$START_IP:$NUM_IPS|$VLANID|$GATEWAY_IP|$INTERFACE"
    else
       ts_debug_log "nsu_assign_ip -s $NET_ID/$NETBITS|$START_IP:$NUM_IPS|$VLANID|$GATEWAY_IP|$INTERFACE"
       $NS_WDIR/bin/nsu_assign_ip -s "$NET_ID/$NETBITS|$START_IP:$NUM_IPS|$VLANID|$GATEWAY_IP|$INTERFACE"
    fi
      
    if [ $? == 0 ];
    then
      echo "  IP assigment has been completed for interface ${IFArray[$interface_idx]}!"
    else
      echo "  Error: ts_add_ip() - IP assigment not completed for interface ${IFArray[$interface_idx]}!"
    fi
    interface_idx=`expr $interface_idx + 1`
  done
}

ts_add_ip_for_ipv6()
{
  ts_debug_log "There are ${#IFArray[@]} interfaces:"
  #>$IP_ENTRIES_IPv6
  interface_idx=0
  NETBITS=112
  while [ $interface_idx -lt ${#IFArray[@]} ]
  do
    C1=`get_C1 $interface_idx`
    if [ $ENTITY == "-s" -a $MODE != "Transparent" ];then
       ((C1=C1 + 100))
    fi
    START_IP=$F1:$F2:$F3:$F4:$A1:$B1:$C1:$D
    ts_debug_log "The $interface_idx interface is = ${IFArray[$interface_idx]}"
    INTERFACE=${IFArray[$interface_idx]}
    if [ $ENTITY == "-c" ];then
       ts_debug_log "Assigning on Client.."
       #we need client_ip6.inp on client machine
       #USE_SRC_IP 3 /home/cavisson/work/client_ipv6.inp
       $NS_WDIR/bin/ts_assign_ip6 "$START_IP/$NETBITS-$NUM_IPS|$INTERFACE" >>$IP_ENTRIES_IPv6
    else
       ts_debug_log "Assigning on Server.."
       #we dont need client_ip6.inp on server machine
       ssh $NO $NS_WDIR/bin/ts_assign_ip6 "$START_IP/$NETBITS-$NUM_IPS\|$INTERFACE" >>/dev/null
    fi
    if [ $? != 0 ];then
      echo "IP assignment is not completed on interface $INTERFACE"
    else
      echo "IP assignment is completed on interface $INTERFACE"
    fi
    ((interface_idx=interface_idx + 1))
  done
}

check_user_id

set_parameters

ts_get_IP_octets
ts_get_interfaces 
ts_get_interfaces_subnet
ts_get_vip_arr

update_interface_cav_conf

if [ $ENTITY == "-c" ];then
  ts_debug_log "ENTITY : $ENTITY"
  if [ $IP_FORMAT != "IPv4" ];then
    >$IP_ENTRIES_IPv6
  fi
  D=$D1
  NUM_IPS=$NUM_SRC_IPS
else
  ts_debug_log "ENTITY : $ENTITY"
  D=$D2
  NUM_IPS=$SERVER_NUM_SRC_IPS
fi
if [ $IP_FORMAT == "IPv4" ];then
  ts_add_ip
else
  ts_add_ip_for_ipv6
fi
exit 0

EOF

#!/bin/bash
########################################################################################
#
#  Shell Script Name:
#     neu_clean_nd_rawdata
#
#  Author: 
#     Manmeet, 13th June 2018
#
#  Synopsis: 
#     This script can be called from nsi_clean script which is run once everyday.
#     This will clean all the raw data older than the number of days as per keyword
#     ND_RAWDATA_RETENTION_DAYS in NS scenario or the value passed in option argument 
#     --retention_period_days.
#
#  Usage: 
#     neu_clean_nd_rawdata [--testrun <testrun>] [--retention_period_days <days>]
#
########################################################################################

PROGNAME=`basename $0`

if [ "X$DEBUG_LOG" = "X" ];then
  DEBUG_LOG="/dev/null"
fi

usage()
{
  echo $*
  echo
  echo "USAGE:"
  echo "$PROGNAME [--testrun <value>] [--retention_period_days <days>]"
  echo
  echo "Where"
  echo
  echo "  --testrun             - is test run number, optional, if not specified, machine type must"
  echo "                          be NDE (in /home/cavisson/etc/cav.conf and TRNUM will be read from"
  echo "                          nde.testRunNum Keyword in file \$NS_WDIR/webapps/sys/config.ini"
  echo
  echo "  --retention_period_days - is the number of days older than which the sql non prepared" 
  echo "                          records should be deleted from ndsql table. This field"
  echo "                          is optional, if not supplied will be read from NS Keyword "
  echo "                          ND_RAWDATA_RETENTION_DAYS, which is 7 by default"
  echo

  exit 1
}

if [ "X$NS_WDIR" = "X" ];then
  logmsg "ERROR: Environment variable NS_WDIR not set. exiting."
  exit 1
fi

logmsg()
{
  echo $PROGNAME: $* >> $DEBUG_LOG 2>&1
}

#. $NS_WDIR/bin/nsi_db_utils
#. $NS_WDIR/bin/ndi_db_utils


while [ "$1" != "" ];do
  case $1 in
    "--testrun")
        shift
        chk_args_of_option "--testrun" "$1"
        TRNUM=$1;;
    "--retention_period_days")
        shift
        chk_args_of_option "--retention_period_days" "$1"
        RETENTION_PERIOD_DAYS=$1;;
    --*) usage "Invalid options";;
    *) usage ;;
  esac
  shift
done


cav_conf_file="/home/cavisson/etc/cav.conf"
controller_name=`basename $NS_WDIR`

if [ "X$controller_name" != "Xwork" -a "X$controller_name" != "X" ];then
   cav_conf_file="/home/cavisson/etc/cav_$controller_name.conf"
fi

if [ "X$TRNUM" = "X" ]; then
  if [ ! -f $cav_conf_file ];then
    logmsg "ERROR: --testrun not specified and $cav_conf_file does not exists. Exiting"
    exit 1
  fi

  MACHINE_TYPE=`grep ^CONFIG $cav_conf_file | tr -d '\r' | awk '{print $2}'`
  if [ "X$MACHINE_TYPE" != "XNDE" ];then
    logmsg "ERROR: --testrun not specified and Machine Type is not NDE. Exiting."
    exit 1
  fi

  if [ ! -f $NS_WDIR/webapps/sys/config.ini ];then
    logmsg "ERROR: --testrun not specified and \$NS_WDIR/webapps/sys/config.ini file not present. Exiting"
    exit 1
  fi

  TRNUM=`grep ^nde.testRunNum $NS_WDIR/webapps/sys/config.ini | tail -1 | tr  -d '\r' |cut -d'=' -f2 |sed 's/[ \t]*//g'`
  if [ "X$TRNUM" = "X" ];then
    logmsg "ERROR: --testrun not specified and could not read Keyword nde.testRunNum from $NS_WDIR/webapps/sys/config.ini file. Exiting"
    exit 1
  fi
fi


if [ ! -f $NS_WDIR/logs/TR${TRNUM}/sorted_scenario.conf ];then
  logmsg "ERROR: cound not find file $NS_WDIR/logs/TR${TRNUM}/sorted_scenario.conf"
  exit 1
fi

RETENTION_PERIOD_DAYS=`grep ^ND_RAWDATA_RETENTION_DAYS $NS_WDIR/logs/TR${TRNUM}/sorted_scenario.conf | tr -d '\r' |awk '{print $2}'`

if [ "X$RETENTION_PERIOD_DAYS" = "X" ];then
  logmsg "ERROR: cound not read keyword ND_RAWDATA_RETENTION_DAYS from $NS_WDIR/logs/TR${TRNUM}/sorted_scenario.conf"
  exit 1
fi

COMPARISON_DATE=`date --date="${RETENTION_PERIOD_DAYS} days ago" +%Y%m%d`
COMPARISON_PARTITION=`echo ${COMPARISON_DATE}000000`

PARTLIST=($(ls $NS_WDIR/logs/TR${TRNUM}/ |egrep "^20[0-9]{12}$" |sort -n))
for PARTITION in "${PARTLIST[@]}"
do 
  if [ $PARTITION -ge $COMPARISON_PARTITION ];then
    break
  fi
  #echo "Command to Run:"
  #echo "for FILENAME in $NS_WDIR/logs/TR${TRNUM}/$PARTITION/nd/raw_data/*"
  #echo "do" 
  #echo "  if [ -L \$FILENAME ]; then"
  #echo "    rm -f  \`readlink \$FILENAME\`"
  #echo "  fi"
  #echo "  rm -f \$FILENAME"
  #echo "done" 

  for FILENAME in $NS_WDIR/logs/TR${TRNUM}/$PARTITION/nd/raw_data/*
  do
    if [ -L $FILENAME ]; then
      rm -f  `readlink $FILENAME`
    fi
    rm -f $FILENAME
  done
done

logmsg "ND raw data cleanup done before partition $PARTITION"

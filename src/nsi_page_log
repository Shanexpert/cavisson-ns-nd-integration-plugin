#!/bin/sh
# Name      : nsi_page_log
# Purpsose  : To call java programe to create dump files.
#
# Usage     : nsi_page_log -t <test run number> <Debug on(-D)> -m <run mode>
#   e.g.  nsi_page_log -t 1234 -D
#
# Modification History:
#

USER_NAME=`whoami 2>/dev/null`
if [ $? != 0 ];then
  echo "Error: Unable to get the real user name"
  exit 1
fi


#Function showing the usage of the shell
usage ()
{
  echo $*
  echo "Usage: nsi_page_log -t <test run number> -m <post proc or view>"
  exit -1
}


if [ $# != 4 ];then
   usage "Error: INVALID ARGUMENTS" 
fi

#Checking the values of the options
chk_args_of_option()
{
  if [ "X$2" == "X" ];then
    echo "Error: Option $1 required a value."
    usage
    exit -1
  fi
}

#Checking the arguments of the shell
while [ "$1" != "" ];do
  case $1 in
    "-t")
        shift
      chk_args_of_option "-t" "$1"
        TEST_RUN=$1;;
    "-m")
        shift
      chk_args_of_option "-m" "$1"
        POST_PROC_OR_VIEW=$1;;
    -*) usage "Error: Invalid option $1";;
    *) usage;;
  esac
  shift
done

LOG_FILE=$NS_WDIR/logs/TR$TEST_RUN/nsi_page_log.log 

echo "Running mode is $POST_PROC_OR_VIEW" >>$LOG_FILE

#This function will start the java process that will start to dump the pages
start_dump_process()
{
CONFIG_FILE=$NS_WDIR/webapps/sys/config.ini

# PD_BUFFER_SIZE is used by java program to allocate BytesBuffer used for reading page repsone from the log file
# Netstorm put a max limit of 100,000,000 (100MB) of the page response. So we are keeping default value as this plus 1000 as java also reads END_LOG with page
# Since in most applications, page response are much smaller, we can tune it using netstorm.pageDump.bufferSize property
PD_BUFFER_SIZE="100001000"
PD_MEM_ARGS="-Xmx256m"

#Uncomment this and set level for different debug levels
#PD_DEBUG_LEVEL="-D 4"

# Uncomment this for GC monitoring
#PD_JAVA_GC_OPTIONS="-verbose:gc -Xloggc:/tmp/GenerateTestRunPageDumpGC.log -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCTimeStamps"

if [ -f $CONFIG_FILE ];then
  MAX_HEAP_SIZE=`grep "^netstorm.pageDump.maxHeapSize" $CONFIG_FILE | tail -1 | awk -F'=' '{print $2}'| dos2unix | tr -d ' '`
  BUFFER_SIZE=`grep "^netstorm.pageDump.bufferSize" $CONFIG_FILE | tail -1 | awk -F'=' '{print $2}'| dos2unix | tr -d ' '`
  if [ "X$MAX_HEAP_SIZE" != "X" ]; then
    PD_MEM_ARGS="-Xmx$MAX_HEAP_SIZE"
  fi
  if [ "X$BUFFER_SIZE" != "X" ]; then
    PD_BUFFER_SIZE="$BUFFER_SIZE"
  fi
fi

PD_JAVA_ARGS="$PD_MEM_ARGS $PD_JAVA_GC_OPTIONS  -DNS_WDIR=$NS_WDIR"
PD_PROGRAM_ARGS="-t $TEST_RUN -s $PD_BUFFER_SIZE $PD_DEBUG_LEVEL"
if [ -d /home/cavisson/monitors ];then
  export CLASSPATH="$NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar:/home/cavisson/monitors/lib/java-getopt-1.0.9.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/commons-logging-1.1.1.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jmimemagic-0.1.0.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/apache-jakarta-oro.jar"
else
  export CLASSPATH="$NS_WDIR/webapps/netstorm/WEB-INF/lib/netstorm_bean.jar:/opt/cavisson/monitors/lib/java-getopt-1.0.9.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/commons-logging-1.1.1.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/jmimemagic-0.1.0.jar:$NS_WDIR/webapps/netstorm/WEB-INF/lib/apache-jakarta-oro.jar"
fi
  nohup java $PD_JAVA_ARGS pac1.Bean.GenerateTestRunPageDump $PD_PROGRAM_ARGS 1>>$LOG_FILE 2>&1 &
  JAVA_PID=$!

  #TODO - How to check if java program had any error
}

# Here we are first checking the existence of file GenerateTestRunPageDump.pid.
if [ -f $NS_WDIR/logs/TR$TEST_RUN/.ns_files/GenerateTestRunPageDump.pid ];then
  need_to_wait=NO
  #Check if the process is running or not and if the process is running then 
  #we return from the shell otherwise java program is called to create dump files.
  PID_FROM_FILE=`cat $NS_WDIR/logs/TR$TEST_RUN/.ns_files/GenerateTestRunPageDump.pid`
  ps -f -p $PID_FROM_FILE >/dev/null 
  process_is_running_or_not=$?
  #         Process running     Post process or view      Action
  # Case1:      yes                no(0)               wait till complete
  # Case2:      yes                yes(1)              return

  # Case3:      No                 no(0)               Run and wait till complete
  # Case4:      No                 yes(1)              Run and return
  #
 
  if [ $process_is_running_or_not != 0 -a $POST_PROC_OR_VIEW == 0 ];then
    echo "Process not running so going to start the java process for post proc mode" >>$LOG_FILE
    #Case3: Process is not running and mode is post proc mode 
    #Need to start process and wait till completion
    start_dump_process 
    need_to_wait=YES
  elif [ $process_is_running_or_not != 0 -a $POST_PROC_OR_VIEW == 1 ];then
    echo "Process not running so going to start the java process for view mode" >>$LOG_FILE
    #Case4: Process is not running and mode is view mode 
    #Need to start process and return
    start_dump_process
    sleep 5
  elif [ $process_is_running_or_not == 0 -a $POST_PROC_OR_VIEW == 0 ];then
    echo "Process already running for post proc mode" >>$LOG_FILE
    #Case1: Process is running and mode is post proc 
    #This should not happen log error
    echo "Java process $PID_FROM_FILE is running and mode is post proc. It should not happen" >>$LOG_FILE
    exit 0
  elif [ $process_is_running_or_not == 0 -a $POST_PROC_OR_VIEW == 1 ];then
    echo "Process already running for view mode" >>$LOG_FILE
    #Case2: Process is running and mode is view mode
    echo "Java process $PID_FROM_FILE is running and mode is view mode. Returning...... " >>$LOG_FILE
    exit 0
  fi

  #Saving the java PID to the file GenerateTestRunPageDump.pid
  echo $JAVA_PID >$NS_WDIR/logs/TR$TEST_RUN/.ns_files/GenerateTestRunPageDump.pid
  if [ "$need_to_wait" == "YES" ];then
    wait $JAVA_PID
  fi
  exit 0
fi

echo "PID file not found" >>$LOG_FILE
#PID file not found, means JAVA never run
#Run java pgroram, wait till completion if post proc mode or return 
mkdir -p $NS_WDIR/logs/TR$TEST_RUN/.ns_files/
start_dump_process
echo $JAVA_PID >$NS_WDIR/logs/TR$TEST_RUN/.ns_files/GenerateTestRunPageDump.pid
if [ $POST_PROC_OR_VIEW == 0 ];then #Mode is post proc mode then wait for completion
  wait $JAVA_PID
elif [ $POST_PROC_OR_VIEW == 1 ];then 
#Mode is view and first time user is viewing page dump then wait for 5 secs
  sleep 5
fi

exit 0

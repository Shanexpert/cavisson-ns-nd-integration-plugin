#! /bin/sh

#Basename is exported from nsi_upgrade shell
HOME_DIR=/home/cavisson
export CONTROLLER=$BASENAME
RELEASE_CMD="nsi_get_linux_release_ex"
DISTRO=`$RELEASE_CMD -d`

get_usable_port()
{
  BASE_PORT=$1
  INCREMENT=10

  port=$BASE_PORT
  isfree=$(netstat -taln | grep -w $port)
  
  while [[ -n "$isfree" ]]; do
    port=$[port+INCREMENT]
    isfree=$(netstat -taln | grep -w $port)
  done
  echo "$port"
}

if [ "X$NS_WDIR" == "X" ];then
  export NS_WDIR="$HOME_DIR/work"
fi

if [ "X$API_GATEWAY_ROOT" == "X" ];then
  API_GATEWAY_ROOT=$NS_WDIR/api_gateway
fi 

if [ "XX$CONTROLLER" == "XXwork" ]; then
  if [ -f /etc/init.d/apiGateway ]; then
    API_GATEWAY_CMD=apiGateway
  else
    API_GATEWAY_CMD=apiGateway_$CONTROLLER
  fi 
else
  API_GATEWAY_CMD=apiGateway_$CONTROLLER
fi

mkdir -p $API_GATEWAY_ROOT
mkdir -p $API_GATEWAY_ROOT/logs

if [ -f /etc/init.d/$API_GATEWAY_CMD ];then
  echo "Stopping API Gateway"
  /etc/init.d/$API_GATEWAY_CMD stop
fi

echo "Removing files from directory of old version."
rm -rf $API_GATEWAY_ROOT/bin/* $API_GATEWAY_ROOT/etc/* $API_GATEWAY_ROOT/samples/*

echo "Copying and Uncompressing tar file - $GZ"

cp $NS_WDIR/.rel/$GZ .
tar xvzf $GZ -C $API_GATEWAY_ROOT/

if [ $? -ne 0 ];then
  echo "Error: Error in uncompressing the $GZ"
  rm -rf $GZ $NS_WDIR/.rel/$GZ
  exit 1
fi

#make conf dir if not exist and copy files from samples dir
if [ ! -d $API_GATEWAY_ROOT/conf ];then
  mkdir -p $API_GATEWAY_ROOT/conf
fi

cp $API_GATEWAY_ROOT/samples/api_gateway.conf $API_GATEWAY_ROOT/conf/api_gateway_$CONTROLLER.conf

if [ ! -f $API_GATEWAY_ROOT/conf/api_gateway.cfg ];then
  cp $API_GATEWAY_ROOT/samples/api_gateway.cfg $API_GATEWAY_ROOT/conf
fi

cp $API_GATEWAY_ROOT/samples/*.http $API_GATEWAY_ROOT/conf

rm -rf $GZ $NS_WDIR/.rel/$GZ

#TODO: Need to check below steps
#mkdir -p /etc/api_gateway/errors/

sed -i "s|API_GATEWAY_ROOT|$API_GATEWAY_ROOT|g" $API_GATEWAY_ROOT/conf/api_gateway.cfg
sed -i "s|NS_WDIR|$NS_WDIR|g" $API_GATEWAY_ROOT/conf/api_gateway.cfg

sed -i "s|API_GATEWAY_ROOT|$API_GATEWAY_ROOT|g" $API_GATEWAY_ROOT/conf/api_gateway_$CONTROLLER.conf
sed -i "s|CONTROLLER|$CONTROLLER|g" $API_GATEWAY_ROOT/conf/api_gateway_$CONTROLLER.conf

SERVER_XML=${TOMCAT_DIR}/conf/server.xml
#TOMCAT_NON_SSL_PORT=16998
#TOMCAT_SSL_PORT=""
#TOMCAT_BASE_PORT=16998

if [ -f $SERVER_XML ]; then
  TOMCAT_NON_SSL_PORT=`$NS_WDIR/bin/nsu_xml_reader -f $SERVER_XML -t Connector -e port`
  TOMCAT_SSL_PORT=`$NS_WDIR/bin/nsu_xml_reader -f $SERVER_XML -t Connector -e port -c secure`
  #TOMCAT_REDIRECT_PORT=`$NS_WDIR/bin/nsu_xml_reader -f $SERVER_XML -t Connector -e redirectPort`
fi

if [ "XX$TOMCAT_NON_SSL_PORT" == "XX" ]; then
  TOMCAT_NON_SSL_PORT=80
fi

if [ "XX$TOMCAT_SSL_PORT" == "XX" ]; then
  TOMCAT_SSL_PORT=443
fi

# If controller is work, update the ports in server.xml and give the port to 
#if [ "XX$CONTROLLER" == "XXwork" ]; then
#  if [ "XX$TOMCAT_NON_SSL_PORT" == "XX443" -o "XX$TOMCAT_NON_SSL_PORT" == "XX80" ]; then
#    TOMCAT_NON_SSL_PORT=`get_usable_port $TOMCAT_BASE_PORT`
#    $NS_WDIR/bin/nsu_xml_reader -f $SERVER_XML -t Connector -e port -v $TOMCAT_NON_SSL_PORT
#  fi
#
#  if [ "XX$TOMCAT_SSL_PORT" == "XX443" -o "XX$TOMCAT_SSL_PORT" == "XX80" ]; then
#    TOMCAT_SSL_PORT=`get_usable_port $(( $TOMCAT_BASE_PORT + 2000 ))`
#    $NS_WDIR/bin/nsu_xml_reader -f $SERVER_XML -t Connector -e port -c secure -v $TOMCAT_SSL_PORT 
#  fi
#
#  if [ "XX$TOMCAT_SSL_PORT" != "XX$TOMCAT_REDIRECT_PORT" ]; then
#    $NS_WDIR/bin/nsu_xml_reader -f $SERVER_XML -t Connector -e redirectPort -v $TOMCAT_SSL_PORT
#  fi
#
#  API_GATEWAY_SSL_PORT=443
#  API_GATEWAY_NON_SSL_PORT=80
#else
  SSL_PORT_ARR=(16800 16811 16822 16833 16844 16855 16866 16877 16888 16899)
  NON_SSL_PORT_ARR=(17800 17811 17822 17833 17844 17855 17866 17877 17888 17899)
  CONTROLLER_NUMBER=`$NS_WDIR/bin/nsu_show_all_netstorm | grep -wn $CONTROLLER | cut -d ':' -f 1`

  API_GATEWAY_SSL_PORT=${SSL_PORT_ARR[CONTROLLER_NUMBER]}
  API_GATEWAY_NON_SSL_PORT=${NON_SSL_PORT_ARR[CONTROLLER_NUMBER]}
#fi

sed -i "s|TOMCAT_NON_SSL_PORT|$TOMCAT_NON_SSL_PORT|g" $API_GATEWAY_ROOT/conf/api_gateway.cfg
sed -i "s|TOMCAT_SSL_PORT|$TOMCAT_SSL_PORT|g" $API_GATEWAY_ROOT/conf/api_gateway.cfg
sed -i "s|API_GATEWAY_SSL_PORT|$API_GATEWAY_SSL_PORT|g" $API_GATEWAY_ROOT/conf/api_gateway.cfg
sed -i "s|API_GATEWAY_NON_SSL_PORT|$API_GATEWAY_NON_SSL_PORT|g" $API_GATEWAY_ROOT/conf/api_gateway.cfg

touch $API_GATEWAY_ROOT/conf/400.http
touch $API_GATEWAY_ROOT/conf/403.http
touch $API_GATEWAY_ROOT/conf/408.http
touch $API_GATEWAY_ROOT/conf/500.http
touch $API_GATEWAY_ROOT/conf/502.http
touch $API_GATEWAY_ROOT/conf/503.http
touch $API_GATEWAY_ROOT/conf/504.http

#mkdir -p /run/api_gateway/
touch $API_GATEWAY_ROOT/logs/admin.sock

#change Frontend bind IP to self

mkdir -p $API_GATEWAY_ROOT/dev/
touch $API_GATEWAY_ROOT/dev/log

chmod 777 $API_GATEWAY_ROOT/dev
chmod 666 $API_GATEWAY_ROOT/dev/log

#cp $API_GATEWAY_ROOT/conf/api_gateway.conf /etc/rsyslog.d/
ln -s $API_GATEWAY_ROOT/bin/api_gateway $API_GATEWAY_ROOT/bin/api_gateway_$CONTROLLER

sudo $CavService $CONTROLLER 5 apiGateway


if [ -f /etc/init.d/$API_GATEWAY_CMD ];then
  echo "Starting API Gateway"
  /etc/init.d/$API_GATEWAY_CMD start
fi

exit 0

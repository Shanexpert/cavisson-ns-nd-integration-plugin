#!/bin/sh

# Name  :nsu_maximize_eth_perf 

# Author: Anuj Dhiman
# usage : nsu_maximize_eth_perf <ethx> <ethy>
# Comment: Presently this shell can take alleast 1 and maximum 2 interfaces at a time.
# Modification History:
# 03/26/08: Initial version

############################################################################################

IP_PROPERTIES="$NS_WDIR/sys/ip_properties"
TMP_IP_PROPERTIES="ip_properties.$$"
KEYWORD="OPTIMIZED_IF"
AFFINITY_DUAL_KEYWORD="IF_CPU_AFFINITY_DUAL"
AFFINITY_QUAD_KEYWORD="IF_CPU_AFFINITY_QUAD"

DUAL_AFFINITY[0]="00000003"
DUAL_AFFINITY[1]="0000000c"

QUAD_AFFINITY[0]="00000001"
QUAD_AFFINITY[1]="00000010"

# This mthd is for debug log
debug_log()
{
  #echo $*
  echo > /dev/null
}

usage()
{
  echo "Error: Atleast one and maximum two interfaces are required"
  echo "Usage: nsu_maximize_eth_perf [ -s/-d/-a ] <eth_x> <eth_y>"
  exit -1
}

# This mthd will replace the affinity value for both dual and quard, if there is affinity given with the respective keywords
replace_affinity_value_from_keywords()
{
  DUAL_AFFINITY_0=`egrep "^$AFFINITY_DUAL_KEYWORD" $IP_PROPERTIES | awk '{print $2}'`
  if [ "XX$DUAL_AFFINITY_0" != "XX" ];then
    DUAL_AFFINITY[0]=$DUAL_AFFINITY_0
  fi
  
  DUAL_AFFINITY_1=`egrep "^$AFFINITY_DUAL_KEYWORD" $IP_PROPERTIES | awk '{print $3}'`
  if [ "XX$DUAL_AFFINITY_1" != "XX" ];then
    DUAL_AFFINITY[1]=$DUAL_AFFINITY_1
  fi

  QUAD_AFFINITY_0=`egrep "^$AFFINITY_QUAD_KEYWORD" $IP_PROPERTIES | awk '{print $2}'`
  if [ "XX$QUAD_AFFINITY_0" != "XX" ];then
    QUAD_AFFINITY[0]=$QUAD_AFFINITY_0
  fi

  QUAD_AFFINITY_1=`egrep "^$AFFINITY_QUAD_KEYWORD" $IP_PROPERTIES | awk '{print $3}'`
  if [ "XX$QUAD_AFFINITY_1" != "XX" ];then
    QUAD_AFFINITY[1]=$QUAD_AFFINITY_1
  fi
  debug_log "replace_affinity_value_from_keywords(): DUAL_AFFINITY_0='$DUAL_AFFINITY_0', DUAL_AFFINITY_1='$DUAL_AFFINITY_1', QUAD_AFFINITY_0='$QUAD_AFFINITY_0', QUAD_AFFINITY_1='$QUAD_AFFINITY_1'"
}

show_interfaces()
{
  DEF_ETH=`egrep "^OPTIMIZED_IF" $IP_PROPERTIES | cut -d " " -f2-`    
  if [ "XX$DEF_ETH" == "XX" ];then
    echo "No interfaces are optimized"
  else
    echo "Follwoing interfaces are optimized:"
    echo -e "\t$DEF_ETH"
  fi
  exit 0
}

# check for number of arguments
get_option()
{
  debug_log "OPTION=$OPTION"  

  if [ "$OPTION" != "-s" -a "$OPTION" != "-a" -a "$OPTION" != "-d" ];then
    echo "Invalid Option"
    usage
    exit 1
  fi
}

check_user_id()
{
  USERID=`id -u`
  if [ $USERID -ne 0 ];
  then
    echo "You must be root to execute this command"
    exit 1
  fi
}

get_cpu_core()
{
  CPU_CORE=`egrep 'cpu core' /proc/cpuinfo | tail -1 | awk '{ print $4 }'`
  debug_log "CPU_CORE=$CPU_CORE"
  # put a check for if CPU_CORE is null  
}

start_irqbalancer()
{
  /etc/init.d/irqbalance start
  if [ $? != 0 ];then
    echo "Can not start the irqbalance, It may be already running. Ignored"
  fi
}

stop_irqbalancer()
{
  /etc/init.d/irqbalance stop
  if [ $? != 0 ];then
    echo "Can not stop the irqbalance, It may be already stopped. Ignored" 
  fi
}

# Assumption: Machine will either be Dual core or Quant core only 
set_smp_affinity()
{
  debug_log "set_smp_affinity(); index = $i, interface = ${ETH_NAME[$i]}, num of cpu = $CPU_CORE"
  # How find the number to be echoed in the smp_affinity file
  if [ "$CPU_CORE" == "2" ];then
    affinity_value=${DUAL_AFFINITY[$i]}
  elif [ "$CPU_CORE" == "4" ];then
    affinity_value=${QUAD_AFFINITY[$i]}
    echo "affinity_value=$affinity_value"
  fi

  debug_log "set_smp_affinity(): affinity_value=$affinity_value"

  echo "Setting smp_affinity ($affinity_value) in the "/proc/irq/$IRQ/smp_affinity" file, for interface = ${ETH_NAME[$i]}"
  echo $affinity_value > /proc/irq/$IRQ/smp_affinity
  # No need to checking this since it may fail here but eventually it writes to the file : According to Neeraj sir
#  if [ $? != 0 ];then
#    echo "Error in writing the affinity_value to file /proc/irq/$IRQ/smp_affinity"
#    exit 1
#  fi
}

get_irq_num()
{
  interface=${ETH_NAME[$i]}
  debug_log "get_irq_num(); index = $i, interface = ${ETH_NAME[$i]}"
  if [ "XX$interface" == "XX" ];then
    return
  fi

  IRQ=`egrep $interface /proc/interrupts | awk '{print $1}' | cut -d ":" -f1`
  if [ "XX$IRQ" == "XX" ];then
    echo "No IRQ number found for the Interface ($interface)"
    exit 1
  fi

  replace_affinity_value_from_keywords
  set_smp_affinity
}

add_interfaces()
{
  get_cpu_core

  # Stopping irqbalancer
  stop_irqbalancer

  i=0
  while [ $i -lt ${#ETH_NAME[@]} ]
  do
    get_irq_num

    KEYWORD=`echo $KEYWORD ${ETH_NAME[$i]}`
    i=`expr $i + 1`
  done

  egrep -v "^OPTIMIZED_IF" $IP_PROPERTIES > $TMP_IP_PROPERTIES
  mv $TMP_IP_PROPERTIES $IP_PROPERTIES

  # Adding keyword to the ip_properties
  echo $KEYWORD >> $IP_PROPERTIES 
}

delete_interfaces()
{
  DEF_ETH=`egrep "^OPTIMIZED_IF" $IP_PROPERTIES | cut -d " " -f2-`
  if [ "XX$DEF_ETH" == "XX" ];then
    echo "Cannot delete. There are no interfaces optimized"
    exit 1
  fi
  
  egrep -v "^OPTIMIZED_IF" $IP_PROPERTIES > $TMP_IP_PROPERTIES
  mv $TMP_IP_PROPERTIES $IP_PROPERTIES
  start_irqbalancer
}

###########################################################################################

NUM_AGRS="$#"
if [ "$NUM_AGRS" -lt 1 -o "$NUM_AGRS" -gt 3 ];then
  usage
  exit 1
fi

OPTION=$1
get_option

# can user give the inteface name with the -s option
if [ "$OPTION" == "-s" ];then
  show_interfaces
fi

check_user_id

ETH_NAME[0]=$2
ETH_NAME[1]=$3

if [ "XX$OPTION" != "XX" -a "$OPTION" == "-a" ];then
  if [ "$NUM_AGRS" -lt 2 -o "$NUM_AGRS" -gt 3 ];then
    usage
    exit 1
  fi
  add_interfaces
fi

if [ "XX$OPTION" != "XX" -a "$OPTION" == "-d" ];then
  delete_interfaces
fi

chown netstorm $IP_PROPERTIES
chgrp netstorm $IP_PROPERTIES

exit 0

# End of File


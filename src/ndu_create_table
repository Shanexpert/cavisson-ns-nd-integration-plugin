#! /bin/sh

BASE_DIR=""
#CSV_ARRAY="hat.csv  hrt.csv  pgt.csv  prc.csv  rpf.csv  spf.csv  src.csv  sst.csv  tcf.csv  trc.csv  trt.csv  upf.csv  urc.csv  urt.csv"
#MISSING_FILE=""
#LC_FLAG=0

#Do not delete the comments below, if any changes are made to table structure change the corresponding table structure here also
# This should be same as in nsu_create_table

#actualservertable_TRNUM|testindex|servergroup|servername|serverport|serverlocation
#errorcodes_TRNUM|objecttype|errorcode|errorname
#flowpath_TRNUM|flowpathinstance|flowpathsegmenttier|beginseqnum|metricwindow|flowpathsignature|responsetime|flowpathinitialparameter|flowpathsequenceblob|flowpathbegintimestamp|flowpathendtimestamp
#ndfunctionalgroup_TRNUM|fn_grp|path
#ndapplogs_TRNUM|flowpathinstance|date|thread|severity|category|classname|methodname|filename|linenumber|message
#logphasetable_TRNUM|phaseindex|groupname|phasetype|phasename
#ndmemoryallocation_TRNUM|flowpathinstance|objectinstance|sourcefile|linenumberofsourcefile|classname|description|size|sizeofarray
#metadata_TRNUM|entityid|metatype|entityname
#methodtiming_TRNUM|methodid|methodclassid|methodpackageid|methodfunctionalgroupid|metricwindow|methodappid|methodtier|flowpathsignature|methodexecutioncount|methodcumwalltime|methodcumcputime|methodcumselftime|methodcumchildrentime
#pagerecord_TRNUM|testindex|pageindex|sessionindex|sessioninstance|transactionindex|childindex|txinstance|pageinstance|starttime|endtime|status|resptime|phaseindex|generatorid
#pagetable_TRNUM|testindex|pageindex|sessionindex|pagename
#recordedservertable_TRNUM|testindex|servergroup|serverindex|servername|serverport|selectionagenda|servertype
#runprofile_TRNUM|testindex|groupnum|userprofileindex|sessionprofileindex|pct
#sessionprofile_TRNUM|testindex|sessionprofileindex|sessionindex|pct|sessionprofilename
#sessionrecord_TRNUM|testindex|sessionindex|sessioninstance|userindex|runprofileindex|childindex|isrunphase|access|location|browser|freindex|machineindex|starttime|endtime|thinkduration|status|resptime|phaseindex|generatorid
#sessiontable_TRNUM|testindex|sessionindex|sessionname
#transactionrecord_TRNUM|testindex|transactionindex|sessionindex|sessioninstance|childindex|txinstance|starttime|endtime|thinkduration|status|resptime|phaseindex|generatorid
#transpagerecord_TRNUM|testindex|transactionindex|sessionindex|sessioninstance|childindex|txinstance|pageinstance|starttime|endtime|status|resptime|phaseindex|generatorid
#transactiontable_TRNUM|testindex|transactionindex|transactionname
#urlrecord_TRNUM|testindex|urlindex|sessionindex|sessioninstance|transactionindex|pageindex|childindex|txinstance|pageinstance|fetchedfrom|httsreqreused|conreused|urltype|starttime|dnsduration|connectduration|sslhandshakeduration|writecompleteduration|firstbytercdduration|requestcompleteduration|renderingduration|endtime|httpresponsecode|httppayloadbytessent|appbytessent|ethbytessent|httppayloadbytesrcd|appbytesrcd|ethbytesrcd|completionmode|status|connectionnumber|connectiontype|retries|flowpathinstance|resptime|phaseindex|generatorid
#urltable_TRNUM|testindex|urlindex|pageindex|urlname
#userprofile_TRNUM|testindex|userprofileindex|userprofilename|uptype|valueindex|pct|value
#ndsql_TRNUM|flowpathinstance|sqlindex|querytype|sqlquery
#ndsqlrecord_TRNUM|flowpathinstance|sqlbegintimestamp|sqlexectime|sqlindex


function Usage()
{
  echo $*
  echo "Usage: ndu_create_table <Test Run Number> [<ns_working_dir>]"
  echo "Example:"
  echo "  ndu_create_table 1234"
  echo "  ndu_create_table 1234 /home/cavisson/work2"

#Note: In case ndu_create_table is called from LPS, last argument is a must. For calling from ns_import, it is not required
  exit -1
}

if [ $# -lt 1 ]; then
  Usage "Test run number argument is missing"
fi

#Checking if test number is numeric
echo $1 | egrep '^[0-9]+$' >/dev/null 2>&1
if [ "$?" -eq "1" ]; then
  Usage "Test run number is not numeric"
fi

#Checking Test number is valid or not
if [ $# -eq 2 -a -d $2/logs/TR$1 ]; then
  BASE_DIR=$2/logs
elif [ -d $PWD/TR$1 ]; then
  BASE_DIR=$PWD
elif [ -d $NS_WDIR/logs/TR$1 ]; then
  BASE_DIR=$NS_WDIR/logs
else
  echo "ndu_create_table: Error: Test run number $1 is not a valid test run number"
  exit -1
fi

echo "ndu_create_table: Deleting existing tables, if any present and creating tables ..." 

ndu_drop_index $1

ndu_drop_table $1

# Since we dont know whether nsu_db_upload will be spawned first or not. So we create master table for URLRecord table in case nd_db_upload is spwaned first
psql test cavisson <<+

create table FlowPath_$1 (
        FlowPathInstance bigint,
        TierIndex smallint,
        ServerIndex smallint,
        AppIndex smallint,
        FlowPathSegmentTier int,
        BeginSeqNum text,
        MetricWindow bigint,
        FlowPathSignature int,
        ResponseTime  bigint,
        FlowpathInitialParameter int,
        FlowPathSequenceBlob text,
        FlowPathBeginTimestamp bigint,
        FlowPathEndTimestamp bigint,
        CumCpuTime bigint,
        URLQueryParmStr text,
        MethodsCount int,
        StatusCode smallint
        PrevFlowPathInstance bigint,
        CallOutCount int
        --primary key(FlowPathInstance,FlowpathSegmentTier,BeginSeqNum)
);

create table MethodTiming_$1 (
        MethodId int,
        MethodClassId int,
        MethodPackageId  int,
        MethodFunctionalGroupId smallint,
        MetricWindow bigint,
        MethodAppId int,
        MethodTier int,
        FlowpathSignature int,
        MethodExecutionCount int,
        MethodCumWallTime bigint,
        MethodCumCpuTime  bigint,
        MethodCumSelfTime   bigint,
        MethodCumChildrenTime bigint,
        primary key(MethodId,MethodTier,FlowpathSignature,MetricWindow,MethodAppId)
);

create table MetaData_$1 (
        Entityid int,
        MetaType smallint,
        --(Method, class, package, App, Function Group, Tier)
        EntityName text,
        primary key(Entityid,MetaType)
);

create table NDFunctionalGroup_$1 (
        fn_grp text,
        path text,
        primary key(path)
);

create table NDAppLogs_$1 (
        Date bigint,
        FlowPathInstance bigint,
        TierIndex smallint,
        ServerIndex smallint,
        AppIndex smallint,
        TimeStamp bigint,
        Thread text,
        Severity text,
        Classname text,
        Methodname text,
        Filename text,
        Linenumber INT,
        Message text
);

create table NDSQL_$1 (
        FlowPathInstance bigint,
        SQLIndex int,
        QueryType smallint,
        SQLQuery text
        --primary key(FlowPathInstance,SQLIndex)
);

create table NDSQLRecord_$1 (
        FlowPathInstance bigint,
        TierIndex smallint,
        ServerIndex smallint,
        AppIndex smallint,
        SQLBeginTimestamp bigint,
        SQLExecTime bigint,
        SQLIndex int,
        SQLQueryParmStr text
);

create table NDTier_$1 (
        TierName text,
        TierID int
);

create table NDAppServer_$1 (
        ServerName text,
        ServerID int,
        TierID int,
        NDAgentPort int
);

create table NDAppInstance_$1 (
        appName text,
        appID int,
        ServerID int,
        TierID int,
        BCIPort int
);

create table NDBCIArg_$1 (
        FlowPathInstance bigint,
        SeqNum text,
        BCIArgId int,
        MethodId int,
        TierID int,
        ServerID int,
        AppID int,
        SelfTime bigint,
        CpuTime bigint
);

create table NDAutoSensorHotSpotThreads_$1 (
        TierID int,
        ServerID int,
        appID int,
        ThreadId bigint,
        ThreadName text,
        HotSpotStartTimeStamp bigint,
        HotSpotDuration int,
        NewOrContinue smallint,
        ThreadState text,
        ThreadPriority int,
        ThreadStackDepth int,
        ThreadCPUTime int,
        ThreadUserTime int,
        FlowPathInstance bigint,
        LastUpdateTimeStamp bigint,
        DummyField1 smallint,
        DummyField2 smallint,
        DummyField3 smallint,
        DummyField4 smallint,
        DummyField5 smallint,
        ThreadStackTrace text
);

create table NDHTTPHeaderMetaData_$1 (
        HeaderNameOrValue text,
	HeaderID int
);

create table NDHTTPCaptureHeader_$1 (
       FlowPathInstance bigInt,
       HTTPHeadername text,
       HTTPHeadervalue text,
       HTTPHeaderSequence smallInt,
       HTTPObjType smallint,
       TierId smallInt,
       ServerId smallInt,
       appId smallInt
);

create table NDExceptionClass_$1
(
      ExceptionClassID int,
      ExceptionClassName text,
      primary key(ExceptionClassID)
);

create table NDExceptionThrowingClass_$1
(
      ExceptionThrowingClassID int,
      ExceptionThrowingClassName text,
      primary key(ExceptionThrowingClassID)
);

create table NDExceptionThrowingMethod_$1
(
      ExceptionThrowingMethodID int,
      ExceptionThrowingMethodName text,
      primary key(ExceptionThrowingMethodID)
);

create table NDExceptionMessage_$1
(
      ExceptionMessageID int,
      ExceptionMessage text,
      primary key(ExceptionMessageID)
);

create table NDExceptionStackTrace_$1
(
      ExceptionStackTraceID int,
      ExceptionStackTrace text,
      primary key(ExceptionStackTraceID)
);

create table NDExceptionCause_$1
(
      ExceptionCauseID int,
      ExceptionCause text,
      primary key(ExceptionCauseID)
);

create table NDExceptions_$1 
(
        FlowPathInstance bigint,
        TierIndex smallint,
        ServerIndex smallint,
        AppIndex smallint,
        TimeStamp bigint,
        ExceptionClassID int,
        ThrowingClassID int,
        ThrowingMethodID int,
        LineNumber int,
        MessageID int,
        CauseID int,
        StackTraceID int
);

create table NDMethodTiming_$1
(
	MethodId	bigint,
	TierIndex	smallint,
	ServerIndex	smallint,
	AppIndex	smallint,
	CumSelfTime	bigint,
	CumCPUTime	bigint,
	Count		int,
	Min		bigint,
	Max		bigint,
	StartTime	bigint,
	EndTime		bigint,
	CumWallTime	bigint
);

create table NDJMS_$1
(
       FlowPathInstance bigint,
       TimeStamp        bigint,
       FieldType        smallint,
       Sequence         int,
       Key              text,
       Value            text
);

+
echo "ndu_create_table: ... Done deleting and creating tables ..."
# moved the create index part to nsu_import and ndu_db_upload for performance optimization 
# as issue reported in Kohls du to test stuck in post processing

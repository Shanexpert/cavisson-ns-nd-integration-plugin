#shell to set the version file in all etc directory

display_help_and_exit()
{
  echo "$1"
  echo "Usage: set_version -v <Version,Build>"
  echo "Where:"
  echo "  -v is to for version and build, both should be ',' seperated and its mandatory."
  exit 1;
}

check_mandatory_options()
{
  # etc directory and version are mandatory
  if [ "XXVERSION_VAL" = "XX" ];then
    display_help_and_exit "set_version: mandatory options are missing"
  fi
  
  echo "$VERSION_VAL" | grep "," >/dev/null

  if [ "X$?" != "X0" ];then
     display_help_and_exit "set_version:version and build should be ',' seperated"
  fi 
  VERSION=`echo "$VERSION_VAL" | cut -d',' -f1`
  BUILD=`echo "$VERSION_VAL" | cut -d',' -f2`
  BUILD_THIRDPARTY=`expr $BUILD - 2`
  if [ "XX$VERSION" = "XX" -o "XX$BUILD" = "XX" ];then
    display_help_and_exit "set_version: mandatory options are missing, version and build should be ',' seperated"
  fi
 
}

set_version()
{
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $SRC_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $GUI_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $GUI_HELP_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $CAV_MON_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $HPD_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $ND_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $LPS_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $NDC_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $NCH_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD_THIRDPARTY"  > $T_P_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $CHROME_BROWSER_EXT_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $FIREFOX_BROWSER_EXT_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $NF_DB_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $NF_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $NF_GUI_ETC/version
  echo -e "VERSION $VERSION\nBUILD $BUILD"  > $NDP_CORE_ETC/version
}


VERSION_VAL=""
VERSION=""
BUILD=""
V_FLAG=0
CUR_DIR=`pwd`
SRC_ETC=$CUR_DIR/etc/
GUI_ETC=$CUR_DIR/gui/etc/
GUI_HELP_ETC=$CUR_DIR/gui/help/etc/
CAV_MON_ETC=$CUR_DIR/cavmon/etc/
HPD_ETC=$CUR_DIR/hpdd/etc/
ND_ETC=$CUR_DIR/netdiagnostics/etc/
LPS_ETC=$CUR_DIR/netdiagnostics/core/ndc/lps/etc/
NDC_ETC=$CUR_DIR/netdiagnostics/core/ndc/etc/
NCH_ETC=$CUR_DIR/netchannel/core/etc/
T_P_ETC=$CUR_DIR/thirdparty/etc/
CHROME_BROWSER_EXT_ETC=$CUR_DIR/../chrome/extensions/etc/
FIREFOX_BROWSER_EXT_ETC=$CUR_DIR/../firefox/extensions/etc/
NF_DB_ETC=$CUR_DIR/netforest/elasticsearch/etc/
NF_ETC=$CUR_DIR/netforest/etc/
NF_GUI_ETC=$CUR_DIR/netforest/NetForest-5.0.1/etc/
NDP_CORE_ETC=$CUR_DIR/netdiagnostics/core/ndp/etc/

if [ ! -d "$NETCHANNEL_CORE_ETC" ]; then
    mkdir -p $NETCHANNEL_CORE_ETC
fi

if [ ! -d "$NDP_CORE_ETC" ]; then
    mkdir -p $NDP_CORE_ETC
fi

if [ ! -d "$NF_DB_ETC" ]; then
    mkdir $NF_DB_ETC
fi

if [ ! -d "$NF_GUI_ETC" ]; then
    mkdir $NF_GUI_ETC
fi

if [ ! -d "$NF_ETC" ]; then
    mkdir $NF_ETC
fi


if [ ! -d "$SRC_ETC" ];then
   mkdir $SRC_ETC
fi

if [ ! -d "$GUI_ETC" ];then
   mkdir $GUI_ETC
fi

if [ ! -d "$GUI_HELP_ETC" ];then
   mkdir $GUI_HELP_ETC
fi

if [ ! -d "$CAV_MON_ETC" ];then
   mkdir $CAV_MON_ETC
fi

if [ ! -d "$HPD_ETC" ];then
   mkdir $HPD_ETC
fi

if [ ! -d "$ND_ETC" ];then
   mkdir $ND_ETC
fi

if [ ! -d "$LPS_ETC" ];then
   mkdir $LPS_ETC
fi
  
if [ ! -d "$NDC_ETC" ];then
   mkdir $NDC_ETC
fi
  
if [ ! -d "$NCH_ETC" ];then
   mkdir $NCH_ETC
fi

if [ ! -d "$T_P_ETC" ];then
   mkdir $T_P_ETC
fi

if [ ! -d "$CHROME_BROWSER_EXT_ETC" ];then
   mkdir $CHROME_BROWSER_EXT_ETC
fi

if [ ! -d "$FIREFOX_BROWSER_EXT_ETC" ];then
   mkdir $FIREFOX_BROWSER_EXT_ETC
fi
 
while getopts v:? opt
do
  case $opt in
    v) VERSION_VAL="$OPTARG"
       V_FLAG=1 ;;
    ?) display_help_and_exit ;;
    *) display_help_and_exit ;;
  esac
done

check_mandatory_options

if [ "XX$V_FLAG" = "XX1" ];then
   set_version
fi

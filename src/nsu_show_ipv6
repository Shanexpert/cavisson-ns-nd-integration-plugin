## This file is copied from nsu_show_address to resolve the Bug#10715. Currently this works for -r option, 
## other options which are in nsu_show_ddress will be supported in next Enhancement.



#Client Or Server
entity=C
RawFormat="No"
GUIFormat="No"
ListFormat="No"
ListFormatWithIf="No"
NumOfIps=""

IP_ENTRIES=$NS_WDIR/sys/ipv6_entries
IPListFile=/tmp/IPListFile.$$

usage()
{
  echo $1
  echo "Usage: nsu_show_address [-s] [ [-r] or [-g] or [-l num-of-ips] ]"
  exit -1
}

get_ip_fields()
{
  ENTITY=`echo $1 | cut -d "|" -f1`
  START_IP=`echo $1 | cut -d "|" -f4`
  NUM_IP=`echo $1 | cut -d "|" -f6`
  EXCLUDE_IP=`echo $1 | cut -d "|" -f9`
  INTERFACE=`echo $1 | cut -d "|" -f10`
  EXCLUDE_IP_FALLING_IN_RANGE=1

  #if exclude ip do not fall in range of start-ip & above then exclude ip will not b use to show ip's
  # if [ "XX$EXCLUDE_IP" != "XX-" ];then
  #   START_IP_INT=`$NS_WDIR/bin/nsi_check_format -I $START_IP`
  #   EXCLUDE_IP_INT=`$NS_WDIR/bin/nsi_check_format -I $EXCLUDE_IP`
  #   if [ $START_IP_INT -gt $EXCLUDE_IP_INT ];then
  #     EXCLUDE_IP="-"
  #     EXCLUDE_IP_FALLING_IN_RANGE=0
  #   fi
  # fi
}

#Show ip ranges 
display_ip_range()
{       
  if [ "$GUIFormat" == "Yes" ];then
    printf "Start IP:%-15s Max IP:%-8s Interface:%-8s\n" $1 $2 $3 
  else
    printf "    %-25s %-15s %-s\n" $1 $2 $3
  fi
}    

#Exclude IP is in ip entries file.  Break the range around exclude IP
# Following variables are set by the calling function
#  - EXCLUDE_IP, START_IP
split_ip_range()
{
  #End IP of First Range.
  FRangeEnd_IP=`$NS_WDIR/bin/nsu_seq_ip -b $EXCLUDE_IP 1`
  #Maximum IPs in First Range
  FMAX_IP=`$NS_WDIR/bin/nsu_seq_ip -n $START_IP $FRangeEnd_IP`
  #Start IP of First Range.
  SRangestart_ip=`$NS_WDIR/bin/nsu_seq_ip -f $EXCLUDE_IP 1`
  #Maximum IPs in Second Range
  SMAX_IP=`expr $NUM_IP - $FMAX_IP - 1`
}

show_long_form()
{
  #Print header
  echo "Entity|Network Id|Netbits|Start IP|End IP|Number of IPs|Vlan ID|Gateway|Exclude IP|Interface"
  if [ -f $IP_ENTRIES ];then
    while read line
    do
      get_ip_fields $line
      if [ "$ENTITY" == $entity ];then
        echo "$line"
      fi
    done <$IP_ENTRIES
  fi
}

show_short_form()
{
  #PRINT ADMIN Address
  #Taking Admin IPs from cav.conf file
  if [ $entity == "C" ];then
    #For Netstorm
    AdminIP=`cat $HOME_DIR/etc/cav.conf | grep -e NSAdminIP | cut -d " " -f2 | cut -d"/" -f1`
  else
    #For netocean
    AdminIP=`cat $HOME_DIR/etc/cav.conf | grep -e SRAdminIP | cut -d " " -f2 | cut -d"/" -f1`
  fi

  #Show Admin IPs
  if [ $GUIFormat != "Yes" ];then
    #printf "Start IP:%-15s Max IP:1%-7s\n" $AdminIP 
  #else  
    echo "Admin IP:   $AdminIP"
    echo "Additional Assigned IP Addresses:"
    echo "    Start IP Address    Number of addresses  Interface"
  fi

  #IP Entries File is given.
  if [ -f $IP_ENTRIES ];then
    #Reading IP Entries File
    while read line
    do
      #Extracting the Entity,Start IP,Number of IPs and Exclude IP from particular line of IP Entries file.
      get_ip_fields $line
      if [ "$ENTITY" != "$entity" ];then
        continue
      fi
      #Given Entity is equal to the entity in ip entries file
      #if [ "$EXCLUDE_IP" == "-" ];then
      if [ "$EXCLUDE_IP" == "-" -o $EXCLUDE_IP_FALLING_IN_RANGE == 0 ];then
        display_ip_range $START_IP $NUM_IP $INTERFACE
      else
        #Exclude IP is in ip entries file.  Break the range around exclude IP
        split_ip_range
        display_ip_range $START_IP $FMAX_IP $INTERFACE
        display_ip_range $SRangestart_ip $SMAX_IP $INTERFACE
      fi
    done <$IP_ENTRIES
  fi
}

show_ip_list()
{
  #IP Entries File is given.
  if [ -f $IP_ENTRIES ];then
    #Reading IP Entries File
    while read line
    do
      #Extracting the Entity,Start IP,Number of IPs and Exclude IP from particular line of IP Entries file.
      get_ip_fields $line
      if [ "$ENTITY" != "$entity" ];then
        continue
      fi
      #Given Entity is equal to the entity in ip entries file
      #if [ "$EXCLUDE_IP" == "-" ];then
      if [ "$EXCLUDE_IP" == "-" -o $EXCLUDE_IP_FALLING_IN_RANGE == 0 ];then
        $NS_WDIR/bin/nsu_seq_ip $START_IP $NUM_IP >> $IPListFile
      else
        #Exclude IP is in ip entries file.  Break the range around exclude IP
        split_ip_range
        $NS_WDIR/bin/nsu_seq_ip $START_IP $FMAX_IP >> $IPListFile
        $NS_WDIR/bin/nsu_seq_ip $SRangestart_ip $SMAX_IP >> $IPListFile
      fi
    done < $IP_ENTRIES
    if [ ${NumOfIps}X == "X" ]; then
      cat $IPListFile
    else
      TotalIps=`wc -l $IPListFile | awk '{print $1}'`
      if [ $NumOfIps -gt $TotalIps ]; then
        echo "Total number of IP Addresses are less than number of IP Addresses"
        exit -2
      fi
      head -$NumOfIps $IPListFile
    fi
    rm $IPListFile
  fi
}

show_ip_list_with_if()
{
  #IP Entries File is given.
  if [ -f $IP_ENTRIES ];then
    #Reading IP Entries File
    while read line
    do
      #Extracting the Entity,Start IP,Number of IPs and Exclude IP from particular line of IP Entries file.
      get_ip_fields $line
      if [ "$ENTITY" != "$entity" ];then
        continue
      fi
      #Given Entity is equal to the entity in ip entries file
      #if [ "$EXCLUDE_IP" == "-" ];then
      if [ "$EXCLUDE_IP" == "-" -o $EXCLUDE_IP_FALLING_IN_RANGE == 0 ];then
        $NS_WDIR/bin/nsu_seq_ip $START_IP $NUM_IP | sed s/^/$INTERFACE:/ >> $IPListFile
      else
        #Exclude IP is in ip entries file.  Break the range around exclude IP
        split_ip_range
        $NS_WDIR/bin/nsu_seq_ip $START_IP $FMAX_IP | sed s/^/$INTERFACE:/ >> $IPListFile
        $NS_WDIR/bin/nsu_seq_ip $SRangestart_ip $SMAX_IP | sed s/^/$INTERFACE:/ >> $IPListFile
      fi
    done < $IP_ENTRIES
    if [ ${NumOfIps}X == "X" ]; then
      cat $IPListFile
    else
      TotalIps=`wc -l $IPListFile | awk '{print $1}'`
      if [ $NumOfIps -gt $TotalIps ]; then
        echo "Total number of IP Addresses are less than number of IP Addresses"
        exit -2
      fi
      head -$NumOfIps $IPListFile
    fi
    rm $IPListFile
  fi
}

show_address()
{
 # if [ $ListFormat = "Yes" ];then
 #   show_ip_list
 # elif [ $ListFormatWithIf = "Yes" ];then
 #   show_ip_list_with_if
  if [ $RawFormat = "Yes" ];then
    show_long_form
  else
    show_short_form
  fi
}

# Parse and validate arguments
  while getopts :srgi:l: arg
  do
    case $arg in
      s) entity=S;;
      r) RawFormat="Yes";;
      g) GUIFormat="Yes";;
      i) ListFormatWithIf="Yes";;
      l) ListFormat="Yes"
         > $IPListFile
         NumOfIps=$OPTARG
         if [ $NumOfIps == "999999999" -o $NumOfIps == "ALL" ]; then
           NumOfIps=""
         else
           nsi_check_format -n $NumOfIps
           if [ $? != 0 ];then
             echo "Argument given with -l should be ALL, 999999999 or positive integer."
             exit -1
           fi
         fi
         ;;
      ?) usage "Bad argument";;
    esac
  done

  if [ $RawFormat == "Yes" -a $GUIFormat == "Yes" ];then
    usage "-r and -g options cannot be specified together."
  fi
  if [ $RawFormat == "Yes" -a $ListFormat == "Yes" ];then
    usage "-r and -l options cannot be specified together."
  fi
  if [ $GUIFormat == "Yes" -a $ListFormat == "Yes" ];then
    usage "-g and -l options cannot be specified together."
  fi

show_address

exit 0

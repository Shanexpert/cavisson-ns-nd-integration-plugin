#!/bin/sh
#
# Name: nsi_create_test_scen
# Author: Neeraj Jain
# Purpsose: To create scenario file for testing of script
#
# Usage:  See usage method
#
# Exit Values: 
#  0 - Sucessful
#  -1 - Error
# Modification History:
#   07/16/05: Neeraj - Initial Version
#   02/16/09:3.2.3 Atul - To implement Project and Subproject features
#   08/22/09:3.5.0 Archana - To support scheduling changes 

#
# Keywords which are of importance for script testing
# WAN_ENV - TBD
# TNAME - TBD
# -t PAGE_AS_TRANSACTION
#SHOW_INITIATED - TBD
#AUTO_COOKIE - Done
#AUTO_REDIRECT - Done
#MAX_CON_PER_VUSER - Done
#G_PAGE_THINK_TIME - TBD
#G_OVERRIDE_RECORDED_THINK_TIME - TBD
#G_SCRIPT_MODE - TBD
#G_HTTP_CACHING - TBD
#G_HTTP_CACHE_TABLE_SIZE - TBD
#G_HTTP_CACHE_MASTER_TABLE - TBD
#G_VUSER_TRACE - Done
#G_AUTO_FETCH_EMBEDDED
#G_TRACING - Done
#G_REPORTING - Done
#G_MODULEMASK - Done
#G_DEBUG - Done
#SERVER_HOST - TBD
#SGRP - Done
#DEBUG_TRACE - Done
#G_GET_NO_INLINED_OBJ - Done
#G_CONTINUE_ON_PAGE_ERROR - Done


#Also need to take following arguments
#  Number of User - Done
#  Number of sessions - Done
#  User Prorfile or some inputs to control this like access, browser and other run time settings

usage()
{
  echo "ERROR: In correct usage"
  echo "Usage:"
  echo "nsi_create_test_scen "
  echo "  -s <Workspace_name/profile_name/Project/Subproject/Script Name> "
  echo "  -u </USER_NAME> "
  #echo "  -U </USER_NAME of test assest>"
  #echo "  -p </PROFILE_NAME fo test assest>"
  #echo "  -n <number of users>.  Default is 1"
  #echo "  -i <number of iterations/sessions>. Must be >= number of users. Default is 1"
  #echo "  -I <Do not fetch inline>. 1 Means do not fetch. 0 means fetch. Default is 1"
  #echo "  -T <Treat each page as transaction>. 1 Means yes. 0 means No. Default is 1"
  #echo "  -t <Override recorded page think time by give value in  milliseconds"
  #echo "  -N <New user (1) or old user (0) on new session. Default is 1"
  #echo "  -C <Continue Test on Page Error>. 1 Means Continue Test on Page Error. 0 Do not Continue Test on Page Error. Default is 1"
  exit -1
}

#defaults

NumUsers=1
Iterations=1
NoInLine=1
PageAsTx=1
OverridePTTValue=-1
NewUser=1
ContinueTestOnPageError=1
TMP_CMD_OUTPUT_FILE=/tmp/cmd_output.$$
linenubmer=-1

check_and_put_java_related_kw()
{
  SCRIPT_TYPE=`nsu_script_tool -s $ProjectName/$SubprojectName/"scripts"/$ScriptName -o GetScriptType -w $WorkSpace/$Profile`
  nsu_script_tool -o UsedFlowList -s $ProjectName/$SubprojectName/"scripts"/$ScriptName -w $WorkSpace/$Profile>$TMP_CMD_OUTPUT_FILE 2>&1

  while read line
  do
    linenubmer=`expr $linenubmer + 1`
    #skip empty and first line
    if [ "X$line" = "X" -o $linenubmer == 0 ];then
      continue
    fi

    #Need to check for JAVA type script. Here gining .c directly
    if [ $SCRIPT_TYPE == "JAVA" ];then
      head -50 $NS_TA_DIR/scripts/$ScriptName/$line.java | egrep "JAVA OVER HTTP">/dev/null
    else
      head -50 $NS_TA_DIR/scripts/$ScriptName/$line.c | egrep "JAVA OVER HTTP">/dev/null
    fi

    if [ $? -eq 0 ];then
      echo "USE_JAVA_OBJ_MGR 1" >>$ScenFileName
      break
    fi
  done < $TMP_CMD_OUTPUT_FILE
  rm -f $TMP_CMD_OUTPUT_FILE
}

while getopts s:n:i:I:T:t:N:C:u: arg
do
  case $arg in
    s) ARGUMENT="$OPTARG";;
    n) NumUsers="$OPTARG";;
    i) Iterations="$OPTARG";;
    I) NoInLine="$OPTARG";;
    T) PageAsTx="$OPTARG";;
    t) OverridePTTValue="$OPTARG";;
    N) NewUser="$OPTARG";;
    C) ContinueTestOnPageError="$OPTARG";;
    u) USER="$OPTARG";;
    *) usage;;
    ?) usage;;
  esac
done

WorkSpace=`echo "$ARGUMENT" | awk -F'/' '{print $1}'`
Profile=`echo "$ARGUMENT" | awk -F'/' '{print $2}'`
ProjectName=`echo "$ARGUMENT" | awk -F'/' '{print $3}'`
SubprojectName=`echo "$ARGUMENT" | awk -F'/' '{print $4}'`
ScriptName=`echo "$ARGUMENT" | awk -F'/' '{print $5}'`

if [ "XX$WorkSpace" == "XX" -o "XX$Profile" == "XX" -o "XX$ProjectName" == "XX" -o "XX$SubprojectName" == "XX" -o "XX$ScriptName" == "XX" ];then
  usage
fi
#NS_RTA_DIR="workspace/$WorkSpace/$Profile/cavisson"
#NS_TA_DIR=`nsi_get_work_space_path.sh $WorkSpace/$Profile $ProjectName/$SubprojectName`
NS_RTA_DIR="workspace/$WorkSpace/$Profile/cavisson"
NS_TA_DIR=$NS_WDIR/$NS_RTA_DIR/$ProjectName/$SubprojectName
#Check and get login user name
if [ "X$USER" == "X" ];then
  USER_NAME=`whoami 2>/dev/null`
else 
  USER_NAME=$USER
fi
 
if [ $? != 0 ];then
  echo "Error: Unable to get the real user name"
  exit 1
fi

if [ "XX$NS_WDIR" == "XX" ];then
   NS_WDIR="/home/cavisson/work"
fi
#Creating test script file for each username since any user can create scenario file for testing of script
ScenFileName="$NS_TA_DIR/scenarios/.$USER_NAME.TestScript.conf"
> $ScenFileName

if [ $? != 0 ];then
  echo "Error: Not permitted to create scenario in $ProjectName/$SubprojectName"
  exit 1
fi

cat "/tmp/.$USER_NAME.TestScript" >> $ScenFileName
#echo "SGRP TestGroup NA Internet 0 $ScriptName $NumUsers" >> $ScenFileName

#echo "SCHEDULE ALL Start START IMMEDIATELY" >> $ScenFileName
#echo "SCHEDULE ALL RampUp RAMP_UP ALL IMMEDIATELY" >> $ScenFileName
#echo "SCHEDULE ALL Stabilize STABILIZATION TIME 0" >> $ScenFileName
#echo "SCHEDULE ALL Duration DURATION SESSIONS $Iterations" >> $ScenFileName
#echo "SCHEDULE ALL RampDown RAMP_DOWN ALL IMMEDIATELY" >> $ScenFileName
#echo "G_MAX_CON_PER_VUSER ALL 0 1 1 1 1 1" >> $ScenFileName
#echo "G_TRACING ALL 4 1 0 0 0 0" >> $ScenFileName
#echo "G_REPORTING ALL 2" >> $ScenFileName
#echo "TNAME Script Test" >> $ScenFileName
#echo "DEBUG_TRACE 1" >> $ScenFileName
#echo "G_DEBUG ALL 4" >> $ScenFileName
#echo "G_MODULEMASK ALL HTTP" >> $ScenFileName
#echo "AUTO_REDIRECT 20 1" >> $ScenFileName
#echo "AUTO_COOKIE 1 0" >> $ScenFileName

#echo "G_GET_NO_INLINED_OBJ ALL $NoInLine" >> $ScenFileName

#echo "G_VUSER_TRACE ALL 2" >> $ScenFileName

#echo "PAGE_AS_TRANSACTION $PageAsTx" >>  $ScenFileName

#echo "G_CONTINUE_ON_PAGE_ERROR ALL $ContinueTestOnPageError" >> $ScenFileName

#Added MAX DYNAMIC host keyword 
#where maximum number of dynamic host value is 20
#echo "MAX_DYNAMIC_HOST 20" >> $ScenFileName

#if [ $OverridePTTValue -ge 0 ]; then
  #echo "G_OVERRIDE_RECORDED_THINK_TIME ALL 1" >>  $ScenFileName
  #echo "G_PAGE_THINK_TIME ALL ALL 2 $OverridePTTValue" >>  $ScenFileName
#fi

#echo "G_NEW_USER_ON_SESSION ALL $NewUser" >>  $ScenFileName

#Now add keywords for ClickAndScript
#First check the sub type of the script
#if subtype=ClickAndScript then add the extra keywords
SCRIPTSUBTYPE=`nsu_script_tool -s $ProjectName/$SubprojectName/"scripts"/$ScriptName -o GetScriptSubType -w $WorkSpace/$Profile`
if [ $SCRIPTSUBTYPE == "CLICK_AND_SCRIPT" ];then 
  #this script is click and script
  echo "G_HTTP_CACHING ALL 100 1" >> $ScenFileName
  echo "G_HTTP_CACHE_MASTER_TABLE ALL 1 MT1 1024" >> $ScenFileName
  echo "G_JAVA_SCRIPT ALL 1 1" >> $ScenFileName
fi

echo "G_SCRIPT_MODE ALL 1 1024 0" >> $ScenFileName

check_and_put_java_related_kw
#echo $ScenFileName as it is needed by GUI
echo "$ProjectName/$SubprojectName/.$USER_NAME.TestScript"

exit 0
